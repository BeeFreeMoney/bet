{"version":3,"sources":["components/Home/24-money.gif","components/Home/BE FREE MONEY_(FINAL).jpg","components/Navbar/Navbar.jsx","components/Helpers/service.js","components/LoggedUser/LoggedUser.jsx","components/Home/Home.jsx","components/MultiplyBet/MultiplyBet.jsx","components/Login/spinner2.gif","components/Login/Login.jsx","components/RollHistory/RollHistory.jsx","components/Lottery/Lottery.jsx","logo.svg","components/FakeDoor/FakeDoor.jsx","components/PathError/PathError.jsx","components/VerifyRoll/VerifyRoll.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","wallet","addToast","useToasts","useState","isNavCollapsed","setIsNavCollapsed","setUserId","requireAuth","localStorage","getItem","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","id","style","removeItem","window","history","replaceState","appearance","autoDismiss","URL","location","hostname","roll","clientSeed","a","data","response","axios","post","then","res","getClientSeed","get","registerData","userId","getWalletData","setWalletData","rollHistory","pushMultiplyBetRollHistory","num","calcLotteryWinner","LoggedUser","userName","setUserName","getUserName","username","hourSeconds","daySeconds","timerProps","isPlaying","size","strokeWidth","renderTime","dimension","time","Home","faucet","setFaucet","disable","setDisable","counter","setCounter","takeaway","setTakeAway","win","setWin","setWallet","setHistory","setClientSeed","prevServerSeed","setPrevServerSeed","prevClientSeed","setPrevClientSeed","rollValue","date","Date","toLocaleDateString","remainingTime","handleDisable","Math","ceil","stopTime","now","setItem","stratTime","endTime","setInterval","round","clearInterval","handleSetRollHistory","pushRollHistory","useEffect","loggedInUser","w","Number","toFixed","handleTakeaway","class","data-ride","src","CarousalItem","alt","role","data-slide","aria-hidden","transaction","width","height","scope","colors","duration","initialRemainingTime","onComplete","totalElapsedTime","elapsedTime","value","disabled","onChange","event","target","assign","x","serverSeed","MultiplyBet","setRollValue","betmode","setBetmode","betAmount","setBetAmount","betOdds","setBetOdds","winChance","setWinChance","winHigh","setWinHigh","winLow","setWinLow","winProfit","setWinProfit","takeAwayAmount","setTakeAwayAmount","isAutoBetActive","setIsAutoBetActive","isHi","setIsHi","noOfRolls","setNoOfRolls","max_bet","setMax_Bet","rollmode","setrollmode","profit","setProfit","loss","setLoss","stopProfit","setStopProfit","stopLoss","setStopLoss","increaseBetWin","setIncreaseBetWin","increaseBetLose","setIncreaseBetLose","changeBetOddWin","setChangeBetOddWin","changeBetOddLose","setChangeBetOddLose","basebet","setBaseBet","onWinChecked","setOnWinChecked","onLoseChecked","setOnLoseChecked","onWinIncreaseBetChecked","setOnWinIncreaseBetChecked","onLoseIncreaseBetChecked","setOnLoseIncreaseBetChecked","onWinChangeBetChecked","setOnWinChangeBetChecked","onLoseChangeBetChecked","setOnLoseChangeBetChecked","setA","rollOption","multiplier","handletakeAwayAmount","tk","abs","console","log","handleRoll","handleRadio","e","name","handleCheckBox","val","handleValidation","y","floor","handleBetOdds","setTimeout","defaultChecked","toString","handleAutoBet","required","pointGen","pattern","Array","apply","map","join","Login","loginPass","setLoginPass","isLoading","setIsLoading","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","register","setRegister","React","unmaskedPassword","setUnmaskedPassword","unmaskedConfirmPassword","setunmaskedConfirmPassword","lottery","loginData","handleScroll","divId","document","getElementById","scrollIntoView","behavior","block","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","timer","clearTimeout","index","selectionStart","inputText","addedTextLength","newStr","slice","charAt","handlePasswordChange","registerUser","Spinner","loginUser","users","_id","reload","RollHistory","rollData","setRollData","multiplierRollData","setmultiplierRollData","currentPage","setCurrentPage","multiplierCurrentPage","setmultiplierCurrentPage","handleGetRollHistory","getRollHistory","handleGetmultiplierRollHistory","getMultiplyBetRollHistory","MultiplyBetRollHistory","offset","multiplierOffset","pageData","multiplierPageData","pageCount","multiplierPageCount","item","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","activeClassName","Lottery","tickets","setTickets","userTickets","setUserTickets","totalTickets","setTotalTickets","tempWinners","setTempWinners","b","setB","pricePerTicket","daysDuration","handleBuyTickets","isNaN","writeLottery","handleGetLotteryTickets","getLotteryTickets","winners","interval1","interval","colSpan","FakeDoor","diffLvl","setDiffLvl","result","setResult","setIndex","setClassName","arr3","arr4","arr5","arr6","li","ind","random","list","split","handleFakeDoor","logo","PathError","VerifyRoll","params","useParams","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process"],"mappings":"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","file":"static/js/main.8b5d1e9c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/24-money.66f55454.gif\";","export default __webpack_public_path__ + \"static/media/BE FREE MONEY_(FINAL).ae5e00c8.jpg\";","import React, { useState } from 'react'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\n// import { Modal } from 'react-bootstrap';\r\n// import { registerUser, loginUser } from '../Helpers/service';\r\n\r\nfunction Navbar({wallet}) {\r\n    const { addToast } = useToasts()\r\n    const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n\r\n    const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\r\n\r\n    // var wallet = wallet\r\n    // console.log(\"wallet\", wallet)\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [userId, setUserId] = useState()\r\n    // const [username, setUsername] = useState('')\r\n    // const [password, setPassword] = useState('')\r\n    // const [wallet, setWallet] = useState()\r\n    // const registerData = {\r\n    //     username : username,\r\n    //     password: password,\r\n    //     wallet: '0.00'\r\n    // }\r\n    // const loginData = {\r\n    //     username: username,\r\n    //     password: password\r\n    // }\r\n    // const [showModal, setShow] = useState(false);\r\n    // const [register, setRegister] = useState(false);\r\n\r\n    // const handleOpen = () => setShow(true)\r\n\r\n    // const handleClose = () => setShow(false)\r\n\r\n    const handleLogout = () => {\r\n        setUserId();\r\n        // setUsername(\"\");\r\n        // setPassword(\"\");\r\n        localStorage.removeItem(\"userId\");\r\n      };\r\n\r\n    const requireAuth = () => {\r\n        const loggedInUser = localStorage.getItem('userId');\r\n\r\n        if(loggedInUser) {\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\r\n                <a className=\"navbar-brand text-info font-weight-bolder\" href=\"/FreeBet\">\r\n                    {/* <img src={Logo} alt=\"Logo\" width=\"36\" height=\"36\" className=\"vertical-align-middle\" /> */}\r\n                    <span className=\"\">FREE MONEY</span>\r\n                </a>\r\n                <button className=\"custom-toggler navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample09\" aria-controls=\"navbarsExample09\" aria-expanded={!isNavCollapsed ? \"true\" : \"false\"} aria-label=\"Toggle navigation\" onClick={handleNavCollapse}>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className={`${isNavCollapsed ? 'collapse' : 'collapse'} navbar-collapse`} id=\"navbarsExample09\">\r\n                    {requireAuth()\r\n                    ?\r\n                    <a className=\"nav-link text-info\" href=\"/FreeBet/#/multiplybet\">Crest & Trough</a>\r\n                    :\r\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n                    <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Crest & Trough</a>\r\n                    // style={{\"cursor\": \"pointer\"}} onClick={() =>{\r\n                    //     setRegister(false)\r\n                    //     setUsername('')\r\n                    //     setPassword('')\r\n                    //     handleOpen()}}\r\n                    }\r\n                    {requireAuth()\r\n                    ?\r\n                    <a href=\"/FreeBet/#/lottery\" className=\"nav-link text-info\">Lottery</a>\r\n                    :\r\n                    <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Lottery</a>\r\n                        /*style={{\"cursor\": \"pointer\"}} onClick={() =>{\r\n                        setRegister(false)\r\n                        setUsername('')\r\n                        setPassword('')\r\n                        handleOpen()}}*/\r\n                        \r\n                    }\r\n                    {requireAuth()\r\n                    ?\r\n                    <a href=\"/FreeBet/#/fakedoor\" className=\"nav-link text-info\">Fake Door</a>\r\n                    :\r\n                    <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Fake Door</a>\r\n                    }\r\n                    {requireAuth()\r\n                    ? <a className=\"nav-link text-info\" href=\"/FreeBet/#/rollHistory\">Roll History</a>\r\n                    : <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Roll History</a>}                    \r\n                    {requireAuth()\r\n                    ?\r\n                    <a href=\"/FreeBet/#/profile\" className=\"nav-link text-info\">Profile</a>\r\n                    :\r\n                    <a href=\"/FreeBet/#/profile\" className=\"nav-link text-info\">Profile</a>\r\n                    }\r\n                    <a href=\"/FreeBet/#/about\" className=\"nav-link text-info\">About Us</a>\r\n                    {requireAuth() \r\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n                    ? <a className=\"nav-link text-info\" style={{\"cursor\": \"pointer\"}} onClick={()=> {\r\n                        handleLogout();\r\n                        // alert(\"Logged out Successfully!!\")\r\n                        // window.location.reload(false);\r\n                        window.history.replaceState('','loggedOut','/')\r\n                        addToast('Logged Out Successfully!!', {\r\n                            appearance: 'info',\r\n                            autoDismiss: true\r\n                        })\r\n                        }}>Logout</a>\r\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n                    : <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Login</a>\r\n                        /* style={{\"cursor\": \"pointer\"}} onClick={() =>{\r\n                        setRegister(false)\r\n                        setUsername('')\r\n                        setPassword('')\r\n                        handleOpen()}} */\r\n                    }\r\n                    {requireAuth()\r\n                    ?\r\n                    <a href=\"/FreeBet/#/wallet\" className=\"nav-link text-info\" style={{\"pointerEvents\": \"none\"}}>${wallet}</a>\r\n                    :\r\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n                    <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">$0.000</a> \r\n                        /*style={{\"cursor\": \"pointer\"}} onClick={() =>{\r\n                        setRegister(false)\r\n                        setUsername('')\r\n                        setPassword('')\r\n                        handleOpen()}}*/\r\n                    }\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n\r\n\r\n// Perfectly working navbar\r\n\r\n// import React, { useState } from 'react'\r\n// import { useToasts } from 'react-toast-notifications'\r\n\r\n// // import { Modal } from 'react-bootstrap';\r\n// // import { registerUser, loginUser } from '../Helpers/service';\r\n\r\n// function Navbar({wallet}) {\r\n//     const { addToast } = useToasts()\r\n//     const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n\r\n//     const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\r\n\r\n//     // var wallet = wallet\r\n//     // console.log(\"wallet\", wallet)\r\n\r\n//     // eslint-disable-next-line no-unused-vars\r\n//     const [userId, setUserId] = useState()\r\n//     // const [username, setUsername] = useState('')\r\n//     // const [password, setPassword] = useState('')\r\n//     // const [wallet, setWallet] = useState()\r\n//     // const registerData = {\r\n//     //     username : username,\r\n//     //     password: password,\r\n//     //     wallet: '0.00'\r\n//     // }\r\n//     // const loginData = {\r\n//     //     username: username,\r\n//     //     password: password\r\n//     // }\r\n//     // const [showModal, setShow] = useState(false);\r\n//     // const [register, setRegister] = useState(false);\r\n\r\n//     // const handleOpen = () => setShow(true)\r\n\r\n//     // const handleClose = () => setShow(false)\r\n\r\n//     const handleLogout = () => {\r\n//         setUserId();\r\n//         // setUsername(\"\");\r\n//         // setPassword(\"\");\r\n//         localStorage.removeItem(\"userId\");\r\n//       };\r\n\r\n//     const requireAuth = () => {\r\n//         const loggedInUser = localStorage.getItem('userId');\r\n\r\n//         if(loggedInUser) {\r\n//             return true\r\n//         }\r\n//         else {\r\n//             return false\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\r\n//                 <a className=\"navbar-brand text-info font-weight-bolder\" href=\"/FreeBet\">\r\n//                     {/* <img src={Logo} alt=\"Logo\" width=\"36\" height=\"36\" className=\"vertical-align-middle\" /> */}\r\n//                     <span className=\"\">FREE MONEY</span>\r\n//                 </a>\r\n//                 <button className=\"custom-toggler navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample09\" aria-controls=\"navbarsExample09\" aria-expanded={!isNavCollapsed ? \"true\" : \"false\"} aria-label=\"Toggle navigation\" onClick={handleNavCollapse}>\r\n//                     <span className=\"navbar-toggler-icon\"></span>\r\n//                 </button>\r\n\r\n//                 <div className={`${isNavCollapsed ? 'collapse' : 'collapse'} navbar-collapse`} id=\"navbarsExample09\">\r\n//                     {requireAuth()\r\n//                     ?\r\n//                     <a className=\"nav-link text-info\" href=\"/FreeBet/#/multiplybet\">Multiply bet</a>\r\n//                     :\r\n//                     // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n//                     <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Multiply bet</a>\r\n//                     // style={{\"cursor\": \"pointer\"}} onClick={() =>{\r\n//                     //     setRegister(false)\r\n//                     //     setUsername('')\r\n//                     //     setPassword('')\r\n//                     //     handleOpen()}}\r\n//                     }\r\n//                     {requireAuth()\r\n//                     ?\r\n//                     <a href=\"/FreeBet/#/lottery\" className=\"nav-link text-info\">Lottery</a>\r\n//                     :\r\n//                     <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Lottery</a>\r\n//                         /*style={{\"cursor\": \"pointer\"}} onClick={() =>{\r\n//                         setRegister(false)\r\n//                         setUsername('')\r\n//                         setPassword('')\r\n//                         handleOpen()}}*/\r\n                        \r\n//                     }\r\n//                     {requireAuth()\r\n//                     ?\r\n//                     <a href=\"/FreeBet/#/fakedoor\" className=\"nav-link text-info\">Fake Door</a>\r\n//                     :\r\n//                     <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Fake Door</a>\r\n//                     }\r\n//                     {requireAuth()\r\n//                     ? <a className=\"nav-link text-info\" href=\"/FreeBet/#/rollHistory\">Roll History</a>\r\n//                     : <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Roll History</a>}\r\n//                     {requireAuth() \r\n//                     // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n//                     ? <a className=\"nav-link text-info\" style={{\"cursor\": \"pointer\"}} onClick={()=> {\r\n//                         handleLogout();\r\n//                         // alert(\"Logged out Successfully!!\")\r\n//                         // window.location.reload(false);\r\n//                         window.history.replaceState('','loggedOut','/')\r\n//                         addToast('Logged Out Successfully!!', {\r\n//                             appearance: 'info',\r\n//                             autoDismiss: true\r\n//                         })\r\n//                         }}>Logout</a>\r\n//                     // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n//                     : <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Login</a>\r\n//                         /* style={{\"cursor\": \"pointer\"}} onClick={() =>{\r\n//                         setRegister(false)\r\n//                         setUsername('')\r\n//                         setPassword('')\r\n//                         handleOpen()}} */\r\n//                     }\r\n//                     {requireAuth()\r\n//                     ?\r\n//                     <a href=\"/FreeBet/#/wallet\" className=\"nav-link text-info\" style={{\"pointerEvents\": \"none\"}}>${wallet}</a>\r\n//                     :\r\n//                     // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n//                     <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">$0.00</a> \r\n//                         /*style={{\"cursor\": \"pointer\"}} onClick={() =>{\r\n//                         setRegister(false)\r\n//                         setUsername('')\r\n//                         setPassword('')\r\n//                         handleOpen()}}*/\r\n//                     }\r\n//                 </div>\r\n//             </nav>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Navbar\r\n","import axios from 'axios';\r\n\r\nvar URL = window.location.hostname === \"localhost\" ? 'http://localhost:3080/api' : 'https://freebet-server.herokuapp.com/api';\r\n\r\nexport async function roll(clientSeed) {\r\n    // const response = await fetch('http://localhost:3080/api/roll', {\r\n    //     mode: \"no-cors\"\r\n    // });\r\n    // // console.log(response)\r\n    // return await response;\r\n    const data = {\r\n        \"clientSeed\": clientSeed \r\n    }\r\n    // const response = axios.post('https://freebet-server.herokuapp.com/api/roll', data)\r\n    const response = axios.post(`${URL}/roll`, data)\r\n                    .then(res => {\r\n                        return res.data;\r\n                    })\r\n    // console.log(await response)\r\n    return await response;\r\n}\r\n\r\nexport async function getClientSeed() {\r\n    // const response = axios.get('https://freebet-server.herokuapp.com/api/getClientSeed')\r\n    const response = axios.get(`${URL}/getClientSeed`)\r\n                .then(res => {\r\n                    return res;\r\n                })\r\n                    \r\n    return await response;\r\n}\r\n\r\nexport async function registerUser(registerData) {\r\n    // const response = await axios.post('https://freebet-server.herokuapp.com/api/register', registerData);\r\n    const response = await axios.post(`${URL}/register`, registerData);\r\n    return response.data;\r\n}\r\n\r\nexport async function loginUser(data) {\r\n    // const response = await axios.post('https://freebet-server.herokuapp.com/api/login', data);\r\n    const response = await axios.post(`${URL}/login`, data);\r\n\r\n    return response;\r\n}\r\n\r\nexport async function getUserName(userId) {\r\n    const data = {\r\n        id: userId\r\n    }\r\n    // const response = await axios.post('https://freebet-server.herokuapp.com/api/getUserName', data)\r\n    const response = await axios.post(`${URL}/getUserName`, data)\r\n    // console.log(response)\r\n    return response\r\n}\r\n\r\nexport async function getWalletData(userId) {\r\n    const wallet = {id: userId}\r\n    // const response = await axios.post('https://freebet-server.herokuapp.com/api/wallet', wallet)\r\n    const response = await axios.post(`${URL}/wallet`, wallet)\r\n\r\n    // console.log(response.data)\r\n    return response;\r\n}\r\n\r\nexport async function setWalletData(userId, wallet) {\r\n    const data = {\r\n        id: userId,\r\n        wallet: wallet\r\n    }\r\n    // const response = await axios.post('https://freebet-server.herokuapp.com/api/setWallet', data)\r\n    const response = await axios.post(`${URL}/setWallet`, data)\r\n\r\n    return response;\r\n}       \r\n\r\nexport async function pushRollHistory(userId, rollHistory) {\r\n    const data = {\r\n        id: userId,\r\n        rollHistory: rollHistory\r\n    }\r\n    // await axios.post('https://freebet-server.herokuapp.com/api/pushRollHistory', data)\r\n    await axios.post(`${URL}/pushRollHistory`, data)\r\n\r\n}\r\n\r\nexport async function getRollHistory(userId) {\r\n    const data = {\r\n        id: userId\r\n    }\r\n    // const response = await axios.post('https://freebet-server.herokuapp.com/api/getRollHistory', data)\r\n    const response = await axios.post(`${URL}/getRollHistory`, data)\r\n\r\n    return response;\r\n    // console.log(response)\r\n}\r\n\r\nexport async function pushMultiplyBetRollHistory(userId, rollHistory) {\r\n    const data = {\r\n        id: userId,\r\n        rollHistory: rollHistory\r\n    }\r\n    // await axios.post('https://freebet-server.herokuapp.com/api/pushMultiplyBetRollHistory', data)\r\n    await axios.post(`${URL}/pushMultiplyBetRollHistory`, data)\r\n\r\n}\r\n\r\nexport async function getMultiplyBetRollHistory(userId) {\r\n    const data = {\r\n        id: userId\r\n    }\r\n\r\n    // const response = await axios.post('https://freebet-server.herokuapp.com/api/getMultiplyBetRollHistory', data)\r\n    const response = await axios.post(`${URL}/getMultiplyBetRollHistory`, data)\r\n\r\n    return response;\r\n}\r\n\r\nexport async function writeLottery(num, userId) {\r\n    const data = {\r\n        id: userId,\r\n        num: num\r\n    }\r\n\r\n    // await axios.post('https://freebet-server.herokuapp.com/api/writeLottery', data)\r\n    await axios.post(`${URL}/writeLottery`, data)\r\n}\r\n\r\nexport async function getLotteryTickets(userId) {\r\n    const data = {\r\n        id: userId\r\n    }\r\n\r\n    // const response = await axios.post('https://freebet-server.herokuapp.com/api/getLotteryTickets', data)\r\n    const response = await axios.post(`${URL}/getLotteryTickets`, data)\r\n    \r\n    return response;\r\n}\r\n\r\nexport async function calcLotteryWinner() {\r\n    // const response = await axios.get('https://freebet-server.herokuapp.com/api/calcLotteryWinner')\r\n    const response = await axios.get(`${URL}/calcLotteryWinner`)\r\n    // console.log(response)\r\n    return response\r\n}\r\n\r\n// export async function getLotteryWinner() {\r\n//    const response = await axios.get('http://localhost:3080/api/getLotteryWinner')\r\n// //    console.log(response)\r\n// }","import React, { useState } from 'react'\r\nimport { getUserName } from '../Helpers/service';\r\n\r\nfunction LoggedUser() {\r\n    const [userName, setUserName] = useState() \r\n    \r\n    \r\n    const requireAuth = () => {\r\n        const loggedInUser = localStorage.getItem('userId');\r\n\r\n        if(loggedInUser) {\r\n            getUserName(localStorage.getItem(\"userId\")).then(res => {\r\n                setUserName(res.data.username)\r\n            })\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return (\r\n        requireAuth() \r\n        ?\r\n        <div className=\"text-right p-2 bg-gray text-white\">\r\n            Logged in as {userName}\r\n        </div>\r\n        :\r\n        <>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoggedUser\r\n","// Version 1.0.4    Aesthetic Look \r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\n\r\nimport './home.scss';\r\nimport transaction from './24-money.gif';\r\nimport CarousalItem from './BE FREE MONEY_(FINAL).jpg';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport { roll, getWalletData, setWalletData, pushRollHistory, getClientSeed } from '../Helpers/service';\r\nimport LoggedUser from '../LoggedUser/LoggedUser';\r\n// import { Modal } from \"react-bootstrap\";\r\n\r\nvar URL = window.location.hostname === \"localhost\" ? 'http://localhost:3000/FreeBet' : 'https://sword-of-grayskull.github.io/FreeBet';\r\n\r\nconst minuteSeconds = 60;\r\nconst hourSeconds = 3600;\r\nconst daySeconds = 86400;\r\n\r\nconst timerProps = {\r\n    isPlaying: true,\r\n    size: 90,\r\n    strokeWidth: 6\r\n  };\r\nconst renderTime = (dimension, time) => {\r\n    return (\r\n        <div className=\"time-wrapper\">\r\n        <div className=\"time\">{time}</div>\r\n        <div>{dimension}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst getTimeSeconds = (time) => (minuteSeconds - time) | 0;\r\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\r\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\r\nconst getTimeDays = (time) => (time / daySeconds) | 0;\r\n\r\nfunction Home() {\r\n    const { addToast } = useToasts()\r\n    const [faucet, setFaucet] = useState('00000');\r\n    const [disable, setDisable] = useState(false);\r\n    const [counter, setCounter] = useState(false);\r\n    //User logged in state\r\n    // const initialWallet = '0.0';\r\n    const [userId, setUserId] = useState()\r\n    // const [username, setUsername] = useState('')\r\n    // const [password, setPassword] = useState('')\r\n    const [takeaway, setTakeAway] = useState(0.00)\r\n    const [win, setWin] = useState(false)\r\n    const [wallet, setWallet] = useState('0.000')\r\n    const [history, setHistory] = useState(false)\r\n    const [clientSeed, setClientSeed] = useState()\r\n    const [prevServerSeed, setPrevServerSeed] = useState()\r\n    const [prevClientSeed, setPrevClientSeed] = useState()\r\n    // const [rollData, setRollData] = useState([])\r\n\r\n    // const registerData = {\r\n    //     username : username,\r\n    //     password: password, \r\n    //     wallet: initialWallet\r\n    // }\r\n    // const loginData = {\r\n    //     username: username,\r\n    //     password: password\r\n    // }\r\n    const rollHistory = {\r\n        rollValue: faucet,\r\n        win: win ? 'Win' : 'Lose',\r\n        takeaway: takeaway,\r\n        date: new Date().toLocaleDateString(),\r\n        wallet: wallet\r\n    }\r\n    // const [showModal, setShow] = useState(false);\r\n    // const [register, setRegister] = useState(false);\r\n    const remainingTime = localStorage.getItem('endTime') - localStorage.getItem('startTime');\r\n    const days = Math.ceil(remainingTime / daySeconds);\r\n    const daysDuration = days * daySeconds;\r\n\r\n    const handleRoll = () => {\r\n        roll(clientSeed)\r\n        .then(x => {\r\n            setCounter(false)\r\n            setFaucet(x.data);\r\n            setPrevClientSeed(x.clientSeed)\r\n            setPrevServerSeed(x.serverSeed)\r\n        });\r\n               \r\n        handleDisable()\r\n    }\r\n\r\n    const handleDisable = () => {\r\n        // var time = new Date().getMinutes()\r\n        // var hr = new Date().getHours()\r\n        var time = Date.now()\r\n        let stopHr;\r\n        let stopTime;\r\n        if(localStorage.getItem(\"stopTime\")) {\r\n            stopTime = localStorage.getItem(\"stopTime\")\r\n        } else {\r\n            stopTime = time + 60;\r\n            // stopHr = hr;\r\n            // if(stopTime >= 60) stopTime = stopTime - 60\r\n            localStorage.setItem(\"stopTime\", stopTime)\r\n            // localStorage.setItem(\"stopHr\", stopHr)\r\n        }\r\n        let currTime;\r\n        let currHr;\r\n        // console.log(Date.now() / 1000)\r\n\r\n        const stratTime = Date.now() / 1000; // use UNIX timestamp in seconds\r\n        const endTime = stratTime + 60; // use UNIX timestamp in seconds\r\n        if(localStorage.getItem(\"startTime\")) {\r\n        \r\n        } else {\r\n            localStorage.setItem(\"startTime\", stratTime)\r\n            localStorage.setItem(\"endTime\", endTime)\r\n        }\r\n        \r\n        // const endTime = stratTime + 243248; // use UNIX timestamp in seconds\r\n\r\n        let a = setInterval(() => {\r\n            setDisable(true)\r\n            localStorage.setItem(\"startTime\", Date.now()/1000)\r\n            // currTime = new Date().getMinutes()\r\n            currTime = Date.now()\r\n            // currHr = new Date().getHours()\r\n            // console.log(currHr, Number(stopHr))\r\n            // if(currHr > Number(stopHr) && currTime === Number(stopTime)) {\r\n            // console.log( Math.round(localStorage.getItem(\"startTime\")), Math.round(localStorage.getItem(\"endTime\")) )\r\n            if( Math.round(localStorage.getItem(\"startTime\")) === Math.round(localStorage.getItem(\"endTime\")) || Math.round(localStorage.getItem(\"startTime\")) > Math.round(localStorage.getItem(\"endTime\"))) {\r\n                setDisable(false)\r\n                // localStorage.removeItem(\"stopHr\")\r\n                localStorage.removeItem(\"stopTime\")\r\n                localStorage.removeItem(\"startTime\")\r\n                localStorage.removeItem(\"endTime\")\r\n                clearInterval(a)\r\n            }\r\n            // else if(currTime > Number(stopTime) || currTime === Number(stopTime)) {\r\n            //     // console.log(currTime, stopTime)\r\n            //     setDisable(false)\r\n            //     localStorage.removeItem(\"stopTime\")\r\n            //     localStorage.removeItem(\"stopHr\")\r\n            //     clearInterval(a)\r\n            // }\r\n        }, 1000)\r\n    }\r\n\r\n    const handleTakeaway = () => {\r\n        if(faucet === 10000) {\r\n            let w = Number(wallet) + 10.000;\r\n            setWalletData(userId, w.toFixed(3));\r\n            setWallet(w.toFixed(3))\r\n            setHistory(!history)\r\n            setTakeAway(10.000)\r\n            setWin(true)\r\n            addToast(`Woohoo, You Won Free money out of Nothing. $10 added to your wallet`, {\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n            })\r\n        }else if (faucet <= 9999 && faucet >= 9998) {\r\n            let w = Number(wallet) + 5.340\r\n            setWalletData(userId, w.toFixed(3))\r\n            setWallet(w.toFixed(3))\r\n            setHistory(!history)\r\n            setTakeAway(5.340)\r\n            setWin(true)\r\n            addToast(`Woohoo, You Won Free money out of Nothing. $5.340 added to your wallet`, {\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n            })\r\n        } else if (faucet <= 9997 && faucet >= 9994) {\r\n            let w = Number(wallet) + 2.760\r\n            setWalletData(userId, w.toFixed(3))\r\n            setWallet(w.toFixed(3))\r\n            setTakeAway(2.760)\r\n            setHistory(!history)\r\n            setWin(true)\r\n            addToast(`Woohoo, You Won Free money out of Nothing. $2.760 added to your wallet`, {\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n            })\r\n        } else if (faucet <= 9993 && faucet >= 9986) {\r\n            let w = Number(wallet) + 1.110\r\n            setWalletData(userId, w.toFixed(3))\r\n            setWallet(w.toFixed(3))\r\n            setTakeAway(1.110)\r\n            setHistory(!history)\r\n            setWin(true)\r\n            addToast(`Woohoo, You Won Free money out of Nothing. $1.110 added to your wallet`, {\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n            })\r\n        } else if (faucet <= 9985 && faucet >= 9886) {\r\n            let w = Number(wallet) + 0.140\r\n            setWalletData(userId, w.toFixed(3))\r\n            setWallet(w.toFixed(3))\r\n            setTakeAway(0.140)\r\n            setHistory(!history)\r\n            setWin(true)\r\n            addToast(`Woohoo, You Won Free money out of Nothing. $0.140 added to your wallet`, {\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n            })\r\n        } else if (faucet <= 9885 && faucet > 0) {\r\n            let w = Number(wallet) + 0.069\r\n            setWalletData(userId, w.toFixed(3))\r\n            setWallet(w.toFixed(3))\r\n            setTakeAway(0.069)\r\n            setHistory(!history)\r\n            setWin(true)\r\n            addToast(`Woohoo, You Won Free money out of Nothing. $0.069 added to your wallet`, {\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n            })\r\n        } else {\r\n            if(faucet !== '00000') {\r\n                setWin(false)\r\n                setHistory(!history)\r\n                setTakeAway(0.000)\r\n                addToast('Oh bugger, lack of luck it seems. You get Nothing', {\r\n                    appearance: 'warning',\r\n                    autoDismiss: true\r\n            })\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSetWallet = () => {\r\n        if(localStorage.getItem(\"userId\")) {\r\n            getWalletData(localStorage.getItem(\"userId\")).then(res => {\r\n                // console.log(res.data.wallet)\r\n                setWallet((res.data.wallet))\r\n            })\r\n        } \r\n    }\r\n\r\n    const handleSetRollHistory = () => {\r\n        if(faucet !== '00000') {\r\n            // console.log('rollValue', faucet)\r\n            // console.log(\"takeaway\", takeaway)\r\n            // console.log('win/lose', win)\r\n            // console.log('wallet', wallet)\r\n            // console.log(new Date().toLocaleDateString())\r\n            pushRollHistory(userId, rollHistory)\r\n        }\r\n    }\r\n\r\n    const handleGetRollHistory = () => {\r\n        // getRollHistory(userId)\r\n        // .then(res => {\r\n        //     const { data } = res;\r\n        //     // console.log(data.[0].rollHistory.[0].rollValue)\r\n        //     setRollData(data.[0].rollHistory)\r\n        // })\r\n    }\r\n\r\n    // const handleOpen = () => setShow(true)\r\n\r\n    // const handleClose = () => setShow(false)\r\n\r\n    useEffect(() => {\r\n        const loggedInUser = localStorage.getItem(\"userId\");\r\n        if (loggedInUser) {\r\n        // const foundUser = JSON.parse(loggedInUser);\r\n        setUserId(loggedInUser);\r\n        }\r\n\r\n        // freebet\r\n        if(localStorage.getItem(\"stopTime\")) {\r\n            setDisable(true)\r\n            handleDisable()\r\n        }\r\n\r\n        if(localStorage.getItem(\"userId\")) {\r\n            getClientSeed().then(res => {\r\n                // console.log(res)\r\n                setClientSeed(res.data.data)\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handleSetWallet()\r\n    })\r\n\r\n    useEffect(() => {\r\n        handleTakeaway()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [faucet])\r\n\r\n    useEffect(() => {\r\n        handleSetRollHistory()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [history])\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar wallet={wallet}/>\r\n            <LoggedUser />\r\n            {/* ##################################################33        Carousal           3########################################33*/}\r\n            <div id=\"carouselExampleControls\" class=\"carousel slide\" data-ride=\"carousel\">\r\n                <div class=\"carousel-inner\">\r\n                    <div class=\"carousel-item active\">\r\n                        <img class=\"d-block w-100\" src={CarousalItem} alt=\"First slide\"></img>\r\n                    </div>\r\n                    <div class=\"carousel-item\">\r\n                        <img class=\"d-block w-100\" src={CarousalItem} alt=\"Second slide\"></img>\r\n                    </div>\r\n                    <div class=\"carousel-item\">\r\n                        <img class=\"d-block w-100\" src={CarousalItem} alt=\"Third slide\"></img>\r\n                    </div>\r\n                </div>\r\n                <a class=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\r\n                    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                    <span class=\"sr-only\">Previous</span>\r\n                </a>\r\n                <a class=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\r\n                    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                    <span class=\"sr-only\">Next</span>\r\n                </a>\r\n            </div>\r\n            <div className=\"row p-4\">\r\n                <div className=\"col-6 p-4 text-center money\"><img src={transaction} width=\"300\" height=\"300\" alt=\"transaction\"/></div>\r\n                <div className=\"col-6 money\">\r\n                    <span className=\"display-3\">Make your transactions in a snap</span>\r\n                    <div className=\"row py-3 my-4\">\r\n                        <div className=\"col-6 text-center\">\r\n                            <button className=\"btn btn-info btn-lg mx-3\">Deposit</button>\r\n                            <button className=\"btn btn-info btn-lg mx-3\">Withdraw</button>\r\n                        </div>\r\n                        <div className=\"col-6 text-center\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"mb-3 p-3 bg-gray text-center text-white\">\r\n                <span className=\"display-4\">Get Free Money Upto $10 Every 45 Minutes</span>\r\n            </div>\r\n             \r\n\r\n\r\n                  \r\n                {/* {faucet !== 10000 \r\n                ? \r\n                <>\r\n                <button className=\"btn btn-primary btn-lg mb-3\" onClick={() => handleGetRollHistory()}>Refresh Roll History</button>\r\n                <table className=\"table table-bordered m-auto text-center\">\r\n                    <thead>\r\n                        <th>SNO</th>\r\n                        <th>RollValue</th>\r\n                        <th>Win/Lose</th>\r\n                        <th>Roll Takeaway</th>\r\n                        <th>Wallet</th>\r\n                    </thead>\r\n                    {rollData.map((item, index) => {\r\n                    return (\r\n                    <tbody>\r\n                        <th>{index}</th>\r\n                        <td>{item.rollValue}</td>\r\n                        {item.win === 'Win' ?\r\n                            <td className=\"text-darkGreen\">{item.win}</td>\r\n                        :\r\n                            <td className=\"text-danger\">{item.win}</td>\r\n                        }\r\n                        <td>{item.takeaway}</td>\r\n                        <td>{item.wallet}</td>\r\n                    </tbody>)})}\r\n                </table> \r\n                </>\r\n                :\r\n                <>\r\n                </>\r\n                } */}\r\n            <div class=\"hexagon des\">\r\n                <div class=\"text\">\r\n                    <h1>Crest</h1>\r\n                    &\r\n                    <h1>Trough</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"desc\">\r\n                <p className=\"mx-3 text-white\">Mauris placerat dolor massa, sed porttitor massa volutpat sed. Donec ac eros quam. Vestibulum non massa eu diam pulvinar sagittis suscipit at purus. In rhoncus velit sed neque vulputate, quis sollicitudin arcu egestas. Pellentesque dignissim, quam vehicula auctor lobortis, elit sapien consequat metus, ac faucibus sapien augue non neque. Vivamus sapien dolor, suscipit sed sem sed, ultrices finibus nibh. Maecenas aliquet elit id est mattis, eget eleifend ex tristique. Vivamus ac purus dignissim metus gravida ornare. Sed magna lacus, tincidunt a facilisis at, condimentum a neque. Vestibulum ornare eget sem vitae vehicula. Nam non diam a quam feugiat iaculis. Aenean luctus, lacus at iaculis laoreet, risus diam egestas mauris, at iaculis tellus mi efficitur diam. Etiam imperdiet consequat nulla. Integer molestie looodeodk dejis opoe</p>\r\n            </div>\r\n            <div className=\"desc-right \">\r\n                <p className=\"ml-3 text-white\" style={{\"margin-right\": \"130px\"}}>Mauris placerat dolor massa, sed porttitor massa volutpat sed. Donec ac eros quam. Vestibulum non massa eu diam pulvinar sagittis suscipit at purus. In rhoncus velit sed neque vulputate, quis sollicitudin arcu egestas. Pellentesque dignissim, quam vehicula auctor lobortis, elit sapien consequat metus, ac faucibus sapien augue non neque. Vivamus sapien dolor, suscipit sed sem sed, ultrices finibus nibh. Maecenas aliquet elit id est mattis, eget eleifend ex tristique. Vivamus ac purus dignissim metus gravida ornare. Sed magna lacus, tincidunt a facilisis at, condimentum a neque. Vestibulum ornare eget sem vitae vehicula. Nam non diam a quam feugiat iaculis. Aenean luctus, lacus at iaculis laoreet, risus diam egestas mauris, at iaculis tellus mi efficitur diam. Etiam imperdiet consequat nulla. Integer molestie looodeodk dejis opoe</p>\r\n            </div>\r\n            <div class=\"hexagon des-right float-right\">\r\n                <div class=\"text\">\r\n                    <br></br>\r\n                    <h1>Lottery</h1>\r\n                </div>\r\n            </div>\r\n            <div class=\"hexagon des\">\r\n                <div class=\"text\">\r\n                    <br></br>\r\n                    <h1>Fake Door</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"desc\">\r\n                <p className=\"mx-3 text-white\">Mauris placerat dolor massa, sed porttitor massa volutpat sed. Donec ac eros quam. Vestibulum non massa eu diam pulvinar sagittis suscipit at purus. In rhoncus velit sed neque vulputate, quis sollicitudin arcu egestas. Pellentesque dignissim, quam vehicula auctor lobortis, elit sapien consequat metus, ac faucibus sapien augue non neque. Vivamus sapien dolor, suscipit sed sem sed, ultrices finibus nibh. Maecenas aliquet elit id est mattis, eget eleifend ex tristique. Vivamus ac purus dignissim metus gravida ornare. Sed magna lacus, tincidunt a facilisis at, condimentum a neque. Vestibulum ornare eget sem vitae vehicula. Nam non diam a quam feugiat iaculis. Aenean luctus, lacus at iaculis laoreet, risus diam egestas mauris, at iaculis tellus mi efficitur diam. Etiam imperdiet consequat nulla. Integer molestie looodeodk dejis opoe</p>\r\n            </div>\r\n            <div className=\"desc-right \">\r\n                <p className=\"ml-3 text-white\" style={{\"margin-right\": \"130px\"}}>Mauris placerat dolor massa, sed porttitor massa volutpat sed. Donec ac eros quam. Vestibulum non massa eu diam pulvinar sagittis suscipit at purus. In rhoncus velit sed neque vulputate, quis sollicitudin arcu egestas. Pellentesque dignissim, quam vehicula auctor lobortis, elit sapien consequat metus, ac faucibus sapien augue non neque. Vivamus sapien dolor, suscipit sed sem sed, ultrices finibus nibh. Maecenas aliquet elit id est mattis, eget eleifend ex tristique. Vivamus ac purus dignissim metus gravida ornare. Sed magna lacus, tincidunt a facilisis at, condimentum a neque. Vestibulum ornare eget sem vitae vehicula. Nam non diam a quam feugiat iaculis. Aenean luctus, lacus at iaculis laoreet, risus diam egestas mauris, at iaculis tellus mi efficitur diam. Etiam imperdiet consequat nulla. Integer molestie looodeodk dejis opoe</p>\r\n            </div>\r\n            <div class=\"hexagon des-right float-right\">\r\n                <div class=\"text\">\r\n                    <br></br>\r\n                    <h1>Gift Box</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"my-4 px-4 w-100\">\r\n                <table className=\"table table-bordered text-center m-auto w-50\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Roll</th>\r\n                            <th scope=\"col\">Prize</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\">10000</th>\r\n                            <td>10</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">9999-9998</th>\r\n                            <td>5.34</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">9997-9994</th>\r\n                            <td>2.76</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">9993-9986</th>\r\n                            <td>1.11</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">9985-9886</th>\r\n                            <td>0.14</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">9885-0</th>\r\n                            <td>0.069</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                \r\n                {disable \r\n                ?\r\n                <>\r\n                <h3 className=\"mt-3 text-center\">Next Roll Available in: </h3><br></br>\r\n                <div className=\"row\">\r\n                    {/* <CountdownCircleTimer\r\n                        {...timerProps}\r\n                        colors={[[\"#7E2E84\"]]}\r\n                        duration={daysDuration}\r\n                        initialRemainingTime={remainingTime}\r\n                    >\r\n                        {({ elapsedTime }) =>\r\n                        renderTime(\"days\", getTimeDays(daysDuration - elapsedTime))\r\n                        }\r\n                    </CountdownCircleTimer>\r\n                    <CountdownCircleTimer\r\n                        {...timerProps}\r\n                        colors={[[\"#D14081\"]]}\r\n                        duration={daySeconds}\r\n                        initialRemainingTime={remainingTime % daySeconds}\r\n                        onComplete={(totalElapsedTime) => [\r\n                        remainingTime - totalElapsedTime > hourSeconds\r\n                        ]}\r\n                    >\r\n                        {({ elapsedTime }) =>\r\n                        renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime))\r\n                        }\r\n                    </CountdownCircleTimer> */}\r\n                    <div className=\"col-5\"></div>\r\n                    <div className=\"col-2 d-flex\">\r\n                    <CountdownCircleTimer\r\n                        {...timerProps}\r\n                        colors={[[\"#EF798A\"]]}\r\n                        duration={hourSeconds}\r\n                        initialRemainingTime={remainingTime % hourSeconds}\r\n                        onComplete={(totalElapsedTime) => [\r\n                        remainingTime - totalElapsedTime > minuteSeconds\r\n                        ]}\r\n                    >\r\n                        {({ elapsedTime }) =>\r\n                        renderTime(\"minutes\", getTimeMinutes(hourSeconds - elapsedTime))\r\n                        }\r\n                    </CountdownCircleTimer>\r\n                    <CountdownCircleTimer\r\n                        {...timerProps}\r\n                        colors={[[\"#218380\"]]}\r\n                        duration={minuteSeconds}\r\n                        initialRemainingTime={remainingTime % minuteSeconds}\r\n                        onComplete={(totalElapsedTime) => [\r\n                        remainingTime - totalElapsedTime > 0\r\n                        ]}\r\n                    >\r\n                        {({ elapsedTime }) =>\r\n                        renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n                        }\r\n                    </CountdownCircleTimer>\r\n                    </div>\r\n                    <div className=\"col-5\"></div>\r\n                </div>\r\n                </>\r\n                :\r\n                <></>\r\n                }                \r\n                <div className=\"rounded p-4 bg-gray w-50 mx-auto my-4 text-white text-center\">\r\n                    <h3>Previous Roll</h3>\r\n                    <h5>Server Seed Hash</h5> \r\n                    <input \r\n                        className=\"rounded mobile borderless\" \r\n                        value={prevServerSeed}\r\n                        disabled\r\n                    ></input>\r\n                    <h5>Client Seed</h5>\r\n                    <input \r\n                        className=\"rounded mobile borderless mb-2\"\r\n                        value={prevClientSeed}\r\n                        disabled\r\n                    />\r\n                    <br></br>\r\n                    <a className=\"\" href={`/FreeBet/#/VerifyRoll/${prevServerSeed}/${prevClientSeed}`}>VerifyRoll</a>\r\n                </div>\r\n                <div className=\"rounded p-4 bg-gray w-50 mx-auto my-4 text-white text-center\">\r\n                    <h5>Edit Client Seed</h5> \r\n                    <input \r\n                        className=\"rounded mobile borderless\" \r\n                        value={clientSeed}\r\n                        onChange={event => {\r\n                        setClientSeed(event.target.value)\r\n                        }}\r\n                    ></input>\r\n                </div>\r\n                <div className=\"w-100 text-center bg-gray p-4 my-4\">\r\n                    {counter\r\n                    ?\r\n                    <>\r\n                    <div className=\"text-center my-4\"><span className=\"border counter m-auto display-4 p-3 text-white\"></span></div><br></br>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{faucet}</span></div><br></br>\r\n                    </>\r\n                    }\r\n                    {disable ?\r\n                        <button \r\n                        className=\"btn btn-primary btn-lg m-2 disabled\" \r\n                        onClick={() => {\r\n                            if(userId) {\r\n                                // handleRoll()\r\n                                // handleTakeaway()\r\n                            }\r\n                            else {\r\n                                // window.history.replaceState({}, 'login', '#/login')\r\n                                // window.location.pathname('/login')\r\n                                // window.location.reload(false)\r\n                                window.location.assign(`${URL}/#/login`);\r\n                                /*setRegister(false)\r\n                                setUsername('')\r\n                                setPassword('')\r\n                                handleOpen()*/\r\n                            }\r\n                        }}\r\n                        disabled\r\n                        >ROLL</button>\r\n                    :\r\n                        <button \r\n                        className=\"btn btn-primary btn-lg m-2\" \r\n                        onClick={() => {\r\n                            if(userId) {\r\n                                setCounter(true)\r\n                                handleRoll()\r\n                                // handleGetRollHistory()\r\n                                // console.log(rollData)\r\n                                // handleTakeaway()\r\n                            }\r\n                            else {\r\n                                // window.history.replaceState({}, 'login', '#/login')\r\n                                // window.location.pathname('/login')\r\n                                window.location.assign(`${URL}/#/login`);\r\n                                // window.location.reload(false)\r\n                                // setRegister(false)\r\n                                // setUsername('')\r\n                                // setPassword('')\r\n                                // handleOpen()\r\n                            }\r\n                        }}\r\n                    >ROLL</button>} \r\n                </div>\r\n                </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n\r\n\r\n// // Version 1.0.3    user loggedin state added, bug fix #1\r\n\r\n// import React, { useState, useEffect } from 'react'\r\n// import { useToasts } from 'react-toast-notifications';\r\n// import { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\n\r\n// import './home.scss';\r\n// import transaction from './24-money.gif';\r\n// import Navbar from '../Navbar/Navbar';\r\n// import { roll, getWalletData, setWalletData, pushRollHistory } from '../Helpers/service';\r\n// import LoggedUser from '../LoggedUser/LoggedUser';\r\n// // import { Modal } from \"react-bootstrap\";\r\n\r\n// const minuteSeconds = 60;\r\n// const hourSeconds = 3600;\r\n// const daySeconds = 86400;\r\n\r\n// const timerProps = {\r\n//     isPlaying: true,\r\n//     size: 90,\r\n//     strokeWidth: 6\r\n//   };\r\n// const renderTime = (dimension, time) => {\r\n//     return (\r\n//         <div className=\"time-wrapper\">\r\n//         <div className=\"time\">{time}</div>\r\n//         <div>{dimension}</div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// const getTimeSeconds = (time) => (minuteSeconds - time) | 0;\r\n// const getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\r\n// const getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\r\n// const getTimeDays = (time) => (time / daySeconds) | 0;\r\n\r\n// function Home() {\r\n//     const { addToast } = useToasts()\r\n//     const [faucet, setFaucet] = useState(10000);\r\n//     const [disable, setDisable] = useState(false);\r\n//     const [counter, setCounter] = useState(false);\r\n//     //User logged in state\r\n//     // const initialWallet = '0.0';\r\n//     const [userId, setUserId] = useState()\r\n//     // const [username, setUsername] = useState('')\r\n//     // const [password, setPassword] = useState('')\r\n//     const [takeaway, setTakeAway] = useState(0.00)\r\n//     const [win, setWin] = useState(false)\r\n//     const [wallet, setWallet] = useState('0.00')\r\n//     const [history, setHistory] = useState(false)\r\n//     // const [rollData, setRollData] = useState([])\r\n\r\n//     // const registerData = {\r\n//     //     username : username,\r\n//     //     password: password, \r\n//     //     wallet: initialWallet\r\n//     // }\r\n//     // const loginData = {\r\n//     //     username: username,\r\n//     //     password: password\r\n//     // }\r\n//     const rollHistory = {\r\n//         rollValue: faucet,\r\n//         win: win ? 'Win' : 'Lose',\r\n//         takeaway: takeaway,\r\n//         date: new Date().toLocaleDateString(),\r\n//         wallet: wallet\r\n//     }\r\n//     // const [showModal, setShow] = useState(false);\r\n//     // const [register, setRegister] = useState(false);\r\n//     const remainingTime = localStorage.getItem('endTime') - localStorage.getItem('startTime');\r\n//     const days = Math.ceil(remainingTime / daySeconds);\r\n//     const daysDuration = days * daySeconds;\r\n\r\n//     const handleRoll = () => {\r\n//         roll()\r\n//         .then(x => {\r\n//             setCounter(false)\r\n//             setFaucet(x);\r\n//         });\r\n               \r\n//         handleDisable()\r\n//     }\r\n\r\n//     const handleDisable = () => {\r\n//         // var time = new Date().getMinutes()\r\n//         // var hr = new Date().getHours()\r\n//         var time = Date.now()\r\n//         let stopHr;\r\n//         let stopTime;\r\n//         if(localStorage.getItem(\"stopTime\")) {\r\n//             stopTime = localStorage.getItem(\"stopTime\")\r\n//         } else {\r\n//             stopTime = time + 60;\r\n//             // stopHr = hr;\r\n//             // if(stopTime >= 60) stopTime = stopTime - 60\r\n//             localStorage.setItem(\"stopTime\", stopTime)\r\n//             // localStorage.setItem(\"stopHr\", stopHr)\r\n//         }\r\n//         let currTime;\r\n//         let currHr;\r\n//         console.log(Date.now() / 1000)\r\n\r\n//         const stratTime = Date.now() / 1000; // use UNIX timestamp in seconds\r\n//         const endTime = stratTime + 60; // use UNIX timestamp in seconds\r\n//         if(localStorage.getItem(\"startTime\")) {\r\n        \r\n//         } else {\r\n//             localStorage.setItem(\"startTime\", stratTime)\r\n//             localStorage.setItem(\"endTime\", endTime)\r\n//         }\r\n        \r\n//         // const endTime = stratTime + 243248; // use UNIX timestamp in seconds\r\n\r\n//         let a = setInterval(() => {\r\n//             setDisable(true)\r\n//             localStorage.setItem(\"startTime\", Date.now()/1000)\r\n//             // currTime = new Date().getMinutes()\r\n//             currTime = Date.now()\r\n//             // currHr = new Date().getHours()\r\n//             // console.log(currHr, Number(stopHr))\r\n//             // if(currHr > Number(stopHr) && currTime === Number(stopTime)) {\r\n//             // console.log( Math.round(localStorage.getItem(\"startTime\")), Math.round(localStorage.getItem(\"endTime\")) )\r\n//             if( Math.round(localStorage.getItem(\"startTime\")) === Math.round(localStorage.getItem(\"endTime\")) || Math.round(localStorage.getItem(\"startTime\")) > Math.round(localStorage.getItem(\"endTime\"))) {\r\n//                 setDisable(false)\r\n//                 // localStorage.removeItem(\"stopHr\")\r\n//                 localStorage.removeItem(\"stopTime\")\r\n//                 localStorage.removeItem(\"startTime\")\r\n//                 localStorage.removeItem(\"endTime\")\r\n//                 clearInterval(a)\r\n//             }\r\n//             // else if(currTime > Number(stopTime) || currTime === Number(stopTime)) {\r\n//             //     // console.log(currTime, stopTime)\r\n//             //     setDisable(false)\r\n//             //     localStorage.removeItem(\"stopTime\")\r\n//             //     localStorage.removeItem(\"stopHr\")\r\n//             //     clearInterval(a)\r\n//             // }\r\n//         }, 1000)\r\n//     }\r\n\r\n//     const handleTakeaway = () => {\r\n//         if (faucet <= 9999 && faucet >= 9800) {\r\n//             let w = Number(wallet) + 0.90\r\n//             setWalletData(userId, w.toFixed(2))\r\n//             setWallet(w.toFixed(2))\r\n//             setHistory(!history)\r\n//             setTakeAway(0.90)\r\n//             // setWallet(Number(wallet) + 0.90)\r\n//             setWin(true)\r\n//             // addToast('You Won', {\r\n//             //     appearance: 'success',\r\n//             //     autoDismiss: true\r\n//             // })\r\n//         } else if (faucet < 9800 && faucet >= 9500) {\r\n//             let w = Number(wallet) + 0.09\r\n//             setWalletData(userId, w.toFixed(2))\r\n//             setWallet(w.toFixed(2))\r\n//             setTakeAway(0.09)\r\n//             setHistory(!history)\r\n//             // setWallet(Number(wallet) + 0.09)\r\n//             setWin(true)\r\n//             addToast(`Woohoo, You Won Free money out of Nothing`, {\r\n//                 appearance: 'success',\r\n//                 autoDismiss: true\r\n//             })\r\n//         } else if (faucet < 8000 && faucet >= 0) {\r\n//             let w = Number(wallet) + 0.01\r\n//             setWalletData(userId, w.toFixed(2))\r\n//             setWallet(w.toFixed(2))\r\n//             setTakeAway(0.01)\r\n//             setHistory(!history)\r\n//             // console.log(getWalletData(userId).then(res => {\r\n//             //     return res.data.wallet\r\n//             //     // console.log(res.data.wallet)\r\n//             // }))\r\n//             // setWallet(Number(wallet) + 0.01)\r\n//             setWin(true)\r\n//             addToast(`Woohoo, You Won Free money out of Nothing`, {\r\n//                 appearance: 'success',\r\n//                 autoDismiss: true\r\n//             })\r\n//         } else {\r\n//             if(faucet !== 10000) {\r\n//                 setWin(false)\r\n//                 setHistory(!history)\r\n//                 setTakeAway(0.00)\r\n//                 addToast('Oh bugger, lack of luck it seems. You get Nothing', {\r\n//                     appearance: 'warning',\r\n//                     autoDismiss: true\r\n//             })\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     const handleSetWallet = () => {\r\n//         if(localStorage.getItem(\"userId\")) {\r\n//             getWalletData(localStorage.getItem(\"userId\")).then(res => {\r\n//                 // console.log(res.data.wallet)\r\n//                 setWallet((res.data.wallet))\r\n//             })\r\n//         } \r\n//     }\r\n\r\n//     const handleSetRollHistory = () => {\r\n//         if(faucet !== 10000) {\r\n//             // console.log('rollValue', faucet)\r\n//             // console.log(\"takeaway\", takeaway)\r\n//             // console.log('win/lose', win)\r\n//             // console.log('wallet', wallet)\r\n//             // console.log(new Date().toLocaleDateString())\r\n//             pushRollHistory(userId, rollHistory)\r\n//         }\r\n//     }\r\n\r\n//     const handleGetRollHistory = () => {\r\n//         // getRollHistory(userId)\r\n//         // .then(res => {\r\n//         //     const { data } = res;\r\n//         //     // console.log(data.[0].rollHistory.[0].rollValue)\r\n//         //     setRollData(data.[0].rollHistory)\r\n//         // })\r\n//     }\r\n\r\n//     // const handleOpen = () => setShow(true)\r\n\r\n//     // const handleClose = () => setShow(false)\r\n\r\n//     useEffect(() => {\r\n//         const loggedInUser = localStorage.getItem(\"userId\");\r\n//         if (loggedInUser) {\r\n//         // const foundUser = JSON.parse(loggedInUser);\r\n//         setUserId(loggedInUser);\r\n//         }\r\n\r\n//         // freebet\r\n//         if(localStorage.getItem(\"stopTime\")) {\r\n//             setDisable(true)\r\n//             handleDisable()\r\n//         }\r\n//     }, [])\r\n\r\n//     useEffect(() => {\r\n//         handleSetWallet()\r\n//     })\r\n\r\n//     useEffect(() => {\r\n//         handleTakeaway()\r\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n//     }, [faucet])\r\n\r\n//     useEffect(() => {\r\n//         handleSetRollHistory()\r\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n//     }, [history])\r\n    \r\n//     return (\r\n//         <div>\r\n//             <Navbar wallet={wallet}/>\r\n//             <LoggedUser />\r\n//             <div className=\"row p-4\">\r\n//                 <div className=\"col-6 p-4 text-center\"><img src={transaction} width=\"300\" height=\"300\" alt=\"transaction\"/></div>\r\n//                 <div className=\"col-6\">\r\n//                     <span className=\"display-3\">Make your transactions in a snap</span>\r\n//                     <div className=\"row py-3 my-4\">\r\n//                         <div className=\"col-6 text-center\">\r\n//                             <button className=\"btn btn-info btn-lg mx-3\">Deposit</button>\r\n//                             <button className=\"btn btn-info btn-lg mx-3\">Withdraw</button>\r\n//                         </div>\r\n//                         <div className=\"col-6 text-center\">\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             <div className=\"p-3 bg-gray text-center text-white\">\r\n//                 <span className=\"display-4\">Get Free Money For Every 45 Minutes</span>\r\n//             </div>\r\n//             <div className=\"my-4 px-4 w-100\">\r\n//                 <table className=\"table table-bordered m-auto w-50\">\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th scope=\"col\">Roll</th>\r\n//                             <th scope=\"col\">Prize</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         <tr>\r\n//                             <th scope=\"row\">9999-9800</th>\r\n//                             <td>1.0000</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th scope=\"row\">9800-9500</th>\r\n//                             <td>0.0090</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th scope=\"row\">9500-0</th>\r\n//                             <td>0.0009</td>\r\n//                         </tr>\r\n//                     </tbody>\r\n//                 </table>\r\n                \r\n//                 {disable \r\n//                 ?\r\n//                 <>\r\n//                 <h3 className=\"mt-3 text-center\">Next Roll Available in: </h3><br></br>\r\n//                 <div className=\"row\">\r\n//                     {/* <CountdownCircleTimer\r\n//                         {...timerProps}\r\n//                         colors={[[\"#7E2E84\"]]}\r\n//                         duration={daysDuration}\r\n//                         initialRemainingTime={remainingTime}\r\n//                     >\r\n//                         {({ elapsedTime }) =>\r\n//                         renderTime(\"days\", getTimeDays(daysDuration - elapsedTime))\r\n//                         }\r\n//                     </CountdownCircleTimer>\r\n//                     <CountdownCircleTimer\r\n//                         {...timerProps}\r\n//                         colors={[[\"#D14081\"]]}\r\n//                         duration={daySeconds}\r\n//                         initialRemainingTime={remainingTime % daySeconds}\r\n//                         onComplete={(totalElapsedTime) => [\r\n//                         remainingTime - totalElapsedTime > hourSeconds\r\n//                         ]}\r\n//                     >\r\n//                         {({ elapsedTime }) =>\r\n//                         renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime))\r\n//                         }\r\n//                     </CountdownCircleTimer> */}\r\n//                     <div className=\"col-5\"></div>\r\n//                     <div className=\"col-2 d-flex\">\r\n//                     <CountdownCircleTimer\r\n//                         {...timerProps}\r\n//                         colors={[[\"#EF798A\"]]}\r\n//                         duration={hourSeconds}\r\n//                         initialRemainingTime={remainingTime % hourSeconds}\r\n//                         onComplete={(totalElapsedTime) => [\r\n//                         remainingTime - totalElapsedTime > minuteSeconds\r\n//                         ]}\r\n//                     >\r\n//                         {({ elapsedTime }) =>\r\n//                         renderTime(\"minutes\", getTimeMinutes(hourSeconds - elapsedTime))\r\n//                         }\r\n//                     </CountdownCircleTimer>\r\n//                     <CountdownCircleTimer\r\n//                         {...timerProps}\r\n//                         colors={[[\"#218380\"]]}\r\n//                         duration={minuteSeconds}\r\n//                         initialRemainingTime={remainingTime % minuteSeconds}\r\n//                         onComplete={(totalElapsedTime) => [\r\n//                         remainingTime - totalElapsedTime > 0\r\n//                         ]}\r\n//                     >\r\n//                         {({ elapsedTime }) =>\r\n//                         renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n//                         }\r\n//                     </CountdownCircleTimer>\r\n//                     </div>\r\n//                     <div className=\"col-5\"></div>\r\n//                 </div>\r\n//                 </>\r\n//                 :\r\n//                 <></>\r\n//                 }\r\n//                 <div className=\"w-100 text-center bg-gray p-4 my-4\">\r\n//                     {counter\r\n//                     ?\r\n//                     <>\r\n//                     <div className=\"text-center my-4\"><span className=\"border counter m-auto display-4 p-3 text-white\"></span></div><br></br>\r\n//                     </>\r\n//                     :\r\n//                     <>\r\n//                     <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{faucet}</span></div><br></br>\r\n//                     </>\r\n//                     }\r\n//                     {disable ?\r\n//                         <button \r\n//                         className=\"btn btn-primary btn-lg m-2 disabled\" \r\n//                         onClick={() => {\r\n//                             if(userId) {\r\n//                                 // handleRoll()\r\n//                                 // handleTakeaway()\r\n//                             }\r\n//                             else {\r\n//                                 window.history.pushState('', 'login', '/#/login')\r\n//                                 window.location.reload(false)\r\n//                                 /*setRegister(false)\r\n//                                 setUsername('')\r\n//                                 setPassword('')\r\n//                                 handleOpen()*/\r\n//                             }\r\n//                         }}\r\n//                         disabled\r\n//                         >ROLL</button>\r\n//                     :\r\n//                         <button \r\n//                         className=\"btn btn-primary btn-lg m-2\" \r\n//                         onClick={() => {\r\n//                             if(userId) {\r\n//                                 setCounter(true)\r\n//                                 handleRoll()\r\n//                                 // handleGetRollHistory()\r\n//                                 // console.log(rollData)\r\n//                                 // handleTakeaway()\r\n//                             }\r\n//                             else {\r\n//                                 window.history.pushState('', 'login', '/#/login')\r\n//                                 window.location.reload(false)\r\n//                                 // setRegister(false)\r\n//                                 // setUsername('')\r\n//                                 // setPassword('')\r\n//                                 // handleOpen()\r\n//                             }\r\n//                         }}\r\n//                     >ROLL</button>} \r\n//                 </div> \r\n\r\n\r\n                  \r\n//                 {/* {faucet !== 10000 \r\n//                 ? \r\n//                 <>\r\n//                 <button className=\"btn btn-primary btn-lg mb-3\" onClick={() => handleGetRollHistory()}>Refresh Roll History</button>\r\n//                 <table className=\"table table-bordered m-auto text-center\">\r\n//                     <thead>\r\n//                         <th>SNO</th>\r\n//                         <th>RollValue</th>\r\n//                         <th>Win/Lose</th>\r\n//                         <th>Roll Takeaway</th>\r\n//                         <th>Wallet</th>\r\n//                     </thead>\r\n//                     {rollData.map((item, index) => {\r\n//                     return (\r\n//                     <tbody>\r\n//                         <th>{index}</th>\r\n//                         <td>{item.rollValue}</td>\r\n//                         {item.win === 'Win' ?\r\n//                             <td className=\"text-darkGreen\">{item.win}</td>\r\n//                         :\r\n//                             <td className=\"text-danger\">{item.win}</td>\r\n//                         }\r\n//                         <td>{item.takeaway}</td>\r\n//                         <td>{item.wallet}</td>\r\n//                     </tbody>)})}\r\n//                 </table> \r\n//                 </>\r\n//                 :\r\n//                 <>\r\n//                 </>\r\n//                 } */}\r\n//             </div>\r\n//             {/* <div class=\"hexagon hexagon1\">\r\n//                 <div class=\"hexagon-in1\">\r\n//                     <div class=\"hexagon-in2\">\r\n//                     Fake Door\r\n//                     </div>\r\n//                 </div>\r\n//             </div> */}\r\n\r\n//         </div>\r\n        \r\n//     )\r\n// }\r\n\r\n// export default Home\r\n\r\n\r\n// Version 1.0.2    Roll works perfectly\r\n// data-toggle=\"tooltip\" data-placement=\"top\" title=\"Tooltip on top\"\r\n\r\n// import React, { useState } from 'react'\r\n\r\n// import './home.css';\r\n// import transaction from './24-money.gif';\r\n// import Navbar from '../Navbar/Navbar';\r\n// import { roll } from '../Helpers/service';\r\n\r\n// function Home() {\r\n//     const [faucet, setFaucet] = useState(10000);\r\n\r\n//     const handleRoll = () => {\r\n//         roll()\r\n//         .then(x => {\r\n//             setFaucet(x);\r\n//         });\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             {/* <nav className=\"nav-bar\">\r\n//                 <span className=\"fs-4 nav-item\">FREE MONEY</span>\r\n//                 <span className=\"float-right nav-item\">\r\n//                     <div class=\"pos-f-t\">\r\n//                     <div class=\"collapse\" id=\"navbarToggleExternalContent\">\r\n//                         <div class=\"bg-dark p-4\">\r\n//                         <h4 class=\"text-white\">Collapsed content</h4>\r\n//                         <span class=\"text-muted\">Toggleable via the navbar brand.</span>\r\n//                         </div>\r\n//                     </div>\r\n//                     <nav class=\"navbar navbar-dark bg-dark\">\r\n//                         <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggleExternalContent\" aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n//                         <span class=\"navbar-toggler-icon\"></span>\r\n//                         </button>\r\n//                     </nav>\r\n//                     </div>\r\n//                 </span>\r\n//                 <span className=\"float-right nav-item\">$0.000000000</span>\r\n//             </nav> */}\r\n//             <Navbar />\r\n//             <div className=\"row p-4\">\r\n//                 <div className=\"col-6 p-4 text-center\"><img src={transaction} width=\"300\" height=\"300\" alt=\"transaction\"/></div>\r\n//                 <div className=\"col-6\">\r\n//                     <span className=\"display-3\">Make your transactions in a snap</span>\r\n//                     <div className=\"row py-3 my-4\">\r\n//                         <div className=\"col-6 text-center\">\r\n//                             <button className=\"btn btn-info btn-lg mx-3\">Deposit</button>\r\n//                             <button className=\"btn btn-info btn-lg mx-3\">Withdraw</button>\r\n//                         </div>\r\n//                         <div className=\"col-6 text-center\">\r\n//                             {/* <button className=\"btn btn-info btn-lg m-auto\">Withdraw</button> */}\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             <div className=\"p-3 bg-gray text-center text-white\">\r\n//                 <span className=\"display-4\">Get Free Money For Every 45 Minutes</span>\r\n//             </div>\r\n//             <div className=\"my-4 px-4 w-100\">\r\n//                 <table class=\"table table-bordered m-auto w-50\">\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th scope=\"col\">Roll</th>\r\n//                             <th scope=\"col\">Prize</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         <tr>\r\n//                             <th scope=\"row\">10000</th>\r\n//                             <td>1.0000</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th scope=\"row\">9999-9800</th>\r\n//                             <td>0.0090</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th scope=\"row\">9800-1000</th>\r\n//                             <td>0.0009</td>\r\n//                         </tr>\r\n//                     </tbody>\r\n//                 </table>\r\n//                 <div className=\"w-100 text-center bg-gray p-4 my-4\">\r\n//                     <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{faucet}</span></div><br></br>\r\n//                     <button className=\"btn btn-primary btn-lg m-2\" onClick={() => handleRoll()}>ROLL</button>    \r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Home\r\n\r\n\r\n\r\n// Version 1.0.1\r\n\r\n\r\n// import React, { useState } from 'react'\r\n// import ReCAPTCHA from 'react-google-recaptcha';\r\n\r\n// import './home.css';\r\n// import transaction from './24-money.gif';\r\n// import { roll } from '../Helpers/service';\r\n\r\n// function Home() {\r\n//     const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n//     const [faucet, setFaucet] = useState(10000);\r\n//     const reCaptchaRef = React.createRef();\r\n\r\n//     const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\r\n\r\n//     const handleRoll = () => {\r\n//         console.log(\"its working\")\r\n//         roll()\r\n//         .then(x => {\r\n//             // console.log(x);\r\n//             setFaucet(x);\r\n//         });\r\n//     }\r\n\r\n//     function onSubmit () {\r\n//         const recaptchaValue = reCaptchaRef.current.getValue();\r\n//         this.props.onSubmit(recaptchaValue);\r\n//     }\r\n\r\n//     function onChange (value) {\r\n//         console.log(\"CAPTCHA value : \", value)\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <nav class=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\r\n//                 <a class=\"navbar-brand text-info font-weight-bolder\" href=\"/\">\r\n//                     {/* <img src={Logo} alt=\"Logo\" width=\"36\" height=\"36\" className=\"vertical-align-middle\" /> */}\r\n//                     <span className=\"\">FREE MONEY</span>\r\n//                 </a>\r\n//                 <button class=\"custom-toggler navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample09\" aria-controls=\"navbarsExample09\" aria-expanded={!isNavCollapsed ? \"true\" : \"false\"} aria-label=\"Toggle navigation\" onClick={handleNavCollapse}>\r\n//                     <span class=\"navbar-toggler-icon\"></span>\r\n//                 </button>\r\n\r\n//                 <div class={`${isNavCollapsed ? 'collapse' : 'collapse'} navbar-collapse`} id=\"navbarsExample09\">\r\n//                 {/* <div class=\"navbar-collapse\" id=\"navbarsExample09\"> */}\r\n//                     <a className=\"nav-link text-info\" href=\"/contact\">Free bet</a>\r\n//                     <a className=\"nav-link text-info\" href=\"/login\">Multiply bet</a>\r\n//                     <a href=\"/request-demo\" className=\"nav-link text-info\" >Lottery</a>\r\n//                     <a href=\"/wallet\" className=\"nav-link text-info\">$0.000000001</a>\r\n//                 </div>\r\n//             </nav>\r\n//             {/* <nav className=\"nav-bar\">\r\n//                 <span className=\"fs-4 nav-item\">FREE MONEY</span>\r\n//                 <span className=\"float-right nav-item\">\r\n//                     <div class=\"pos-f-t\">\r\n//                     <div class=\"collapse\" id=\"navbarToggleExternalContent\">\r\n//                         <div class=\"bg-dark p-4\">\r\n//                         <h4 class=\"text-white\">Collapsed content</h4>\r\n//                         <span class=\"text-muted\">Toggleable via the navbar brand.</span>\r\n//                         </div>\r\n//                     </div>\r\n//                     <nav class=\"navbar navbar-dark bg-dark\">\r\n//                         <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggleExternalContent\" aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n//                         <span class=\"navbar-toggler-icon\"></span>\r\n//                         </button>\r\n//                     </nav>\r\n//                     </div>\r\n//                 </span>\r\n//                 <span className=\"float-right nav-item\">$0.000000000</span>\r\n//             </nav> */}\r\n//             <div className=\"row p-4\">\r\n//                 <div className=\"col-6 p-4 text-center\"><img src={transaction} width=\"300\" height=\"300\" alt=\"transaction\"/></div>\r\n//                 <div className=\"col-6\">\r\n//                     <span className=\"display-3\">Make your transactions in a snap</span>\r\n//                     <div className=\"row py-3 my-4\">\r\n//                         <div className=\"col-6 text-center\">\r\n//                             <button className=\"btn btn-info btn-lg mx-3\">Deposit</button>\r\n//                             <button className=\"btn btn-info btn-lg mx-3\">Withdraw</button>\r\n//                         </div>\r\n//                         <div className=\"col-6 text-center\">\r\n//                             {/* <button className=\"btn btn-info btn-lg m-auto\">Withdraw</button> */}\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             <div className=\"p-3 bg-gray text-center text-white\">\r\n//                 <span className=\"display-4\">Get Free Money For Every 45 Minutes</span>\r\n//             </div>\r\n//             <div className=\"my-4 px-4 w-100\">\r\n//                 <table class=\"table table-bordered m-auto w-50\">\r\n//                     <thead>\r\n//                         <tr>\r\n//                         <th scope=\"col\">Roll</th>\r\n//                         <th scope=\"col\">Prize</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         <tr>\r\n//                             <th scope=\"row\">10000</th>\r\n//                             <td>1.0000</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th scope=\"row\">9999-9800</th>\r\n//                             <td>0.0090</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th scope=\"row\">9800-1000</th>\r\n//                             <td>0.0009</td>\r\n//                         </tr>\r\n//                     </tbody>\r\n//                 </table>\r\n//                 <div className=\"w-100 text-center bg-gray p-4 my-4\">\r\n//                     <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{faucet}</span></div><br></br>\r\n//                     <form onSubmit={onSubmit} className=\"text-center\">\r\n//                     <ReCAPTCHA\r\n                        \r\n//                         ref={reCaptchaRef}\r\n//                         sitekey=\"6Lc__qsaAAAAANZ2FqwF3PCF45gwhSPP-uGLisD8\"\r\n//                         onChange={onChange}\r\n//                     />\r\n//                     <button className=\"btn btn-primary btn-lg m-2\" onClick={() => handleRoll()}>ROLL</button>\r\n//                     </form>\r\n//                  </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Home\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nimport './MultiplyBet.scss';\r\nimport Navbar from './../Navbar/Navbar';\r\nimport { roll, getWalletData, setWalletData, pushMultiplyBetRollHistory, getClientSeed } from '../Helpers/service';\r\nimport LoggedUser from '../LoggedUser/LoggedUser';\r\n\r\n\r\n\r\n// eslint-disable-next-line no-lone-blocks\r\n{/* <ul class=\"nav nav-tabs\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" href=\"#\">Active</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"#\">Link</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"#\">Link</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n  </li>\r\n</ul> */}\r\n\r\nfunction MultiplyBet() {\r\n\r\n    const [counter, setCounter] = useState(false)\r\n    const [clientSeed, setClientSeed] = useState()\r\n    const [prevServerSeed, setPrevServerSeed] = useState()\r\n    const [prevClientSeed, setPrevClientSeed] = useState()\r\n\r\n    // ###################################      manual bet options  ###################################################\r\n    const [rollValue, setRollValue] = useState(10000);\r\n    const [betmode, setBetmode] = useState('manual');\r\n    const [betAmount, setBetAmount] = useState(0.001);\r\n    const [betOdds, setBetOdds] = useState('2');\r\n    const [winChance, setWinChance] = useState('47.5');\r\n    const [winHigh, setWinHigh] = useState('5250');\r\n    const [winLow, setWinLow] = useState('4750');\r\n    const [winProfit, setWinProfit] = useState(0.2);\r\n    const [takeAwayAmount, setTakeAwayAmount] = useState(0);\r\n    const [win, setWin] = useState('');\r\n\r\n    // ####################################     auto bet options    ###################################################\r\n    const [isAutoBetActive, setIsAutoBetActive] = useState(false)\r\n    const [isHi, setIsHi] = useState(1); \r\n    const [noOfRolls, setNoOfRolls] = useState('1000');\r\n    const [max_bet, setMax_Bet] = useState('stopbet');              // On hitting max bet\r\n    const [rollmode, setrollmode] = useState('hi');\r\n    const [onWin, setOnWin] = useState(true);\r\n    const [profit, setProfit] = useState(0.0);\r\n    const [loss, setLoss] = useState(0.0);\r\n    const [stopProfit, setStopProfit] = useState('100')\r\n    const [stopLoss, setStopLoss] = useState('100')\r\n    const [increaseBetWin, setIncreaseBetWin] = useState(0.0);\r\n    const [increaseBetLose, setIncreaseBetLose] = useState(0.0);    \r\n    const [changeBetOddWin, setChangeBetOddWin] = useState(betOdds);\r\n    const [changeBetOddLose, setChangeBetOddLose] = useState(betOdds);\r\n    const [basebet, setBaseBet] = useState('-')\r\n\r\n    const [onWinChecked, setOnWinChecked] = useState(false)\r\n    const [onLoseChecked, setOnLoseChecked] = useState(false)\r\n    const [onWinIncreaseBetChecked, setOnWinIncreaseBetChecked] = useState(false)\r\n    const [onLoseIncreaseBetChecked, setOnLoseIncreaseBetChecked] = useState(false)\r\n    const [onWinChangeBetChecked, setOnWinChangeBetChecked] = useState(false)\r\n    const [onLoseChangeBetChecked, setOnLoseChangeBetChecked] = useState(false)\r\n    \r\n    const [a, setA] = useState();\r\n\r\n    const MaxBet = 20;\r\n\r\n    // ####################### Roll History ##########################\r\n    const { addToast } = useToasts()\r\n    const [userId, setUserId] = useState()\r\n    const [wallet, setWallet] = useState('0.0')\r\n    const [history, setHistory] = useState(false)\r\n    const rollHistory = {\r\n        rollValue: rollValue,\r\n        win: win ? 'Win' : 'Lose',\r\n        rollOption: isHi ? 'Hi' : 'Lo',\r\n        takeaway: takeAwayAmount,\r\n        winProfit: win ? winProfit : '-',\r\n        multiplier: betOdds,\r\n        betmode: betmode,\r\n        date: new Date().toLocaleDateString(\"en-IN\"),\r\n        wallet: wallet\r\n    }\r\n\r\n    // ####################################  Handle Functions   ###########################################################\r\n\r\n    function handletakeAwayAmount(value) {\r\n        if(betmode === \"manual\") {\r\n            if(value === 'win') {\r\n                setProfit(profit+Number(winProfit))\r\n                // console.log(Number(takeAwayAmount.toFixed(2)), '+', Number(winProfit))\r\n                let tk = Math.abs(Number(winProfit));\r\n                setWallet((Number(wallet) + tk).toFixed(3))\r\n                setTakeAwayAmount(tk)\r\n                // console.log(Number(wallet) + takeAwayAmount)\r\n                setWin(true)\r\n            }\r\n            else if(value === 'lose') {\r\n                setLoss(loss+Number(winProfit))\r\n                // console.log(Number(takeAwayAmount.toFixed(2)), '-', Number(winProfit))\r\n                // setTakeAwayAmount(-Number(winProfit).toFixed(2))\r\n                // console.log(Number(wallet) + takeAwayAmount)\r\n                // setWallet(Number(wallet) + takeAwayAmount)\r\n                let tk = -Number(winProfit);\r\n                setWallet((Number(wallet) + tk).toFixed(3))\r\n                setTakeAwayAmount(tk)\r\n                setWin(false)\r\n            }\r\n        }\r\n        else if(betmode === \"auto\") {\r\n            if(value === 'win') {\r\n                // setWin(true)\r\n                setProfit(profit + Number(winProfit))\r\n                if(onWinIncreaseBetChecked) setBetAmount(Number(betAmount)+Number(betAmount * (increaseBetWin / 100)))\r\n                if(onWinChangeBetChecked) setBetOdds(changeBetOddWin)\r\n                if(onWinChecked) setBetAmount(basebet)\r\n                // setIncreasedWinProfit(((betAmount)*betOdds)-(betAmount))\r\n                // console.log(Number(takeAwayAmount.toFixed(2)), '+', Number(winProfit))\r\n                // if(Number(takeAwayAmount.toFixed(2)) + Number(winProfit) === 0) \r\n                //     setTakeAwayAmount(Number(winProfit))\r\n                // else \r\n                //     setTakeAwayAmount(Number(takeAwayAmount.toFixed(2)) + Number(winProfit))  //############################# !!!!!!!!!!!!!!!!\r\n                console.log(Number(winProfit));\r\n                let tk = Math.abs(Number(winProfit));\r\n                console.log(\"hey\", tk);\r\n                setWallet((Number(wallet) + Number(tk)).toFixed(3));\r\n                setTakeAwayAmount(tk);\r\n                setWin(true);\r\n            }\r\n            else if(value === 'lose') {\r\n                // setWin(false)\r\n                setLoss(loss+Number(winProfit))\r\n                if(onLoseIncreaseBetChecked) setBetAmount(Number(betAmount)+Number(betAmount * (increaseBetLose / 100)))\r\n                if(onLoseChangeBetChecked) setBetOdds(changeBetOddLose)\r\n                if(onLoseChecked) setBetAmount(basebet)\r\n                // setIncreasedWinProfit(((betAmount)*betOdds)-(betAmount))\r\n                // console.log('increasedWinProfit',increasedWinProfit)\r\n                // console.log(Number(takeAwayAmount.toFixed(2)), '-', Number(winProfit))\r\n                // setTakeAwayAmount(Number(takeAwayAmount.toFixed(2)) - Number(winProfit))\r\n                console.log(Number(winProfit));\r\n                let tk = -Number(winProfit);\r\n                console.log(\"hey\", tk);\r\n                setWallet((Number(wallet) + Number(tk)).toFixed(3));\r\n                setTakeAwayAmount(tk);\r\n                setWin(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleWin() {            // #################### Function that handles Win conditions , triggered when Roll Value Changes  #################\r\n        if(betmode === 'auto') {\r\n            if(rollmode === 'hi') setIsHi(1)\r\n            else if(rollmode === 'lo') setIsHi(0)\r\n            else if(rollmode === 'alternate') setIsHi(!isHi)\r\n        }\r\n        if(rollValue !== 10000)\r\n            if(isHi) {\r\n                if(rollValue > winHigh) {\r\n                    // console.log(\"info: win hi\");\r\n                    addToast(`Bravo, You Win!! Roll Option: ${isHi ? 'Hi': 'Lo'}`, {\r\n                        appearance: 'success',\r\n                        autoDismiss: true\r\n                    })\r\n                    handletakeAwayAmount('win')\r\n                    // let x = win + 1;\r\n                    // setWin(x);\r\n                }\r\n                else {\r\n                    // console.log(\"info: lose hi\")\r\n                    addToast(`oopsie, You Lose!! Roll Option: ${isHi ? 'Hi': 'Lo'}`, {\r\n                        appearance: 'error',\r\n                        autoDismiss: true\r\n                    })\r\n                    handletakeAwayAmount('lose')\r\n                    // let x = lose + 1\r\n                    // setLose(x);\r\n                }\r\n            }\r\n            else {\r\n                if(rollValue < winLow) {\r\n                    // console.log(\"info: win lo\")\r\n                    addToast(`Bravo, You Win!! Roll Option: ${isHi ? 'Hi': 'Lo'}`, {\r\n                        appearance: 'success',\r\n                        autoDismiss: true\r\n                    })\r\n                    handletakeAwayAmount('win')\r\n                    // setWin(win+1)\r\n                 }\r\n                else {\r\n                    // console.log(\"info: lose lo\")\r\n                    addToast(`oopsie, You Lose!! Roll Option: ${isHi ? 'Hi': 'Lo'}`, {\r\n                        appearance: 'error',\r\n                        autoDismiss: true\r\n                    })\r\n                    handletakeAwayAmount('lose')\r\n                    // setLose(lose+1)\r\n                 }\r\n            }\r\n        // console.log(\"win \", win, \" lose \", lose );    \r\n    }\r\n\r\n    const handleHitMax = () => {\r\n        // console.log('max_bet',max_bet, 'betAmount', betAmount, \"rollValue\", rollValue)\r\n        if(max_bet === 'stopbet' && betAmount >= MaxBet) {\r\n            // console.log(\"info: Stopped Betting because MaxBet value is reached [from - On Hitting MaxBet - chosen Stop Betting]\")\r\n            addToast(\"Stopped Betting because MaxBet value is reached\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n            setIsAutoBetActive(false)\r\n            clearInterval(a);\r\n            setTimeout(() => setRollValue(10000), 2000)\r\n        }\r\n        else if(max_bet === 'basebet' && betAmount >= MaxBet) {\r\n            // console.log('info: Changed betamount to base bet [from - On Hitting MaxBet - chosen Return to BaseBet')\r\n            addToast(\"Changed betamount to Base bet\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n            setBetAmount(basebet);\r\n        }\r\n    }\r\n\r\n    const handleStopBetAfter = () => {\r\n        // console.log('profit', profit, 'loss', loss);\r\n        if(profit >= stopProfit) {   \r\n            addToast(\"Stopped Betting because Profit Threshold Reached\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n            setIsAutoBetActive(false) \r\n            clearInterval(a);\r\n            setTimeout(() => setRollValue(10000), 2000)\r\n            // console.log(\"Profit Reached Threshold [from Stop Betting After - Profit >=\")\r\n        }\r\n        if(loss >= stopLoss) {\r\n            addToast(\"Stopped Betting because Loss Threshold Reached\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n            setIsAutoBetActive(false)\r\n            clearInterval(a);\r\n            setTimeout(() => setRollValue(10000), 2000)\r\n        //    console.log(\"Loss Reached Threshold [from Stop Betting\")\r\n        }\r\n    }\r\n\r\n    function handleRoll() {                     //#################### Function that gets the RollValue from the Server ####################\r\n        roll(clientSeed)\r\n        .then(x => {\r\n            setCounter(false)\r\n            setRollValue(x.data);\r\n            setPrevClientSeed(x.clientSeed)\r\n            setPrevServerSeed(x.serverSeed)\r\n        });\r\n    }\r\n\r\n    const handleRadio = (e) => {               //##################### Function that handles Radio Button changes ##########################\r\n        const {name, value} = e.target;\r\n        // console.log(\"name\", name, \"value\", value)\r\n        if(name === \"max_bet\") {\r\n            setMax_Bet(value);\r\n        }\r\n        else if(name === \"rollmode\") {\r\n            setrollmode(value);\r\n        }\r\n    }\r\n\r\n    const handleCheckBox = (event) => {\r\n        const { name, value } = event.target\r\n        //################################################################################ continue here\r\n        if(name === \"onWinReturnToBaseBet\") {\r\n            //\r\n            let val;\r\n            if(value === 'false') {\r\n                setOnWinChecked(true)\r\n                val = true;\r\n                setOnWinIncreaseBetChecked(false)\r\n                setOnWinChangeBetChecked(false)\r\n            }\r\n            else if(value === 'true') {\r\n                setOnWinChecked(false)\r\n                val = false;\r\n            }\r\n            if(val) {\r\n                console.log(\"onwin\")\r\n            }\r\n        }\r\n        else if(name === \"onLoseReturnToBaseBet\") {\r\n            // \r\n            let val;\r\n            if(value === 'false') {\r\n                setOnLoseChecked(true)\r\n                val =true\r\n                setOnLoseIncreaseBetChecked(false)\r\n                setOnLoseChangeBetChecked(false)\r\n            }\r\n            else if(value === 'true') {\r\n                setOnLoseChecked(false)\r\n                val = false\r\n            }\r\n            if(val) {\r\n                console.log(\"onlose\")\r\n            }\r\n        }\r\n        else if(name === \"onWinIncreaseBet\") {\r\n            // \r\n            let val;\r\n            console.log(value)\r\n            if(value === 'false') {\r\n                setOnWinIncreaseBetChecked(true)\r\n                val = true\r\n                console.log('selected increase Bet win')\r\n            }\r\n            else if(value === 'true') {\r\n                setOnWinIncreaseBetChecked(false)\r\n                val = false\r\n                console.log('unselected increase Bet win')\r\n            }\r\n            if(val) {\r\n                console.log(\"onWin\")\r\n            }\r\n        }\r\n        else if(name === \"onLoseIncreaseBet\") {\r\n            // \r\n            let val;\r\n            if(value === 'false') {\r\n                setOnLoseIncreaseBetChecked(true)\r\n                val =true\r\n                console.log('selected increase bet lose')\r\n            }\r\n            else if(value === 'true') {\r\n                setOnLoseIncreaseBetChecked(false)\r\n                val = false\r\n                console.log('unselected increase bet lose')\r\n            }\r\n            if(val) {\r\n                console.log(\"onlose\")\r\n            }\r\n        }\r\n        else if(name === \"onWinChangeBetOdds\") {\r\n            // \r\n            let val;\r\n            if(value === 'false') {\r\n                setOnWinChangeBetChecked(true)\r\n                val =true\r\n                console.log('selected change Bet win')\r\n            }\r\n            else if(value === 'true') {\r\n                setOnWinChangeBetChecked(false)\r\n                val = false\r\n                console.log('unselected change Bet win')\r\n            }\r\n            if(val) {\r\n                console.log(\"onWin\")\r\n            }\r\n        }\r\n        else if(name === \"onLoseChangeBetOdds\") {\r\n            // \r\n            let val;\r\n            if(value === 'false') {\r\n                setOnLoseChangeBetChecked(true)\r\n                val =true\r\n                console.log('selected change Bet lose')\r\n            }\r\n            else if(value === 'true') {\r\n                setOnLoseChangeBetChecked(false)\r\n                val = false\r\n                console.log('unselected change Bet lose')\r\n            }\r\n            if(val) {\r\n                console.log(\"onlose\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleValidation = () => {\r\n        if(betmode === 'manual') {\r\n            if(betAmount === 0) {\r\n                addToast(\"BetAmount can't be zero. Why don't you try Free Bet ?\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betAmount < 0.001) {\r\n                addToast(\"BetAmount should be greater than 0.001\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betAmount > 20) {\r\n                addToast(\"BetAmount can't be greater than 20\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betOdds < 1) {\r\n                addToast(\"Betodds can't be less than one\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betOdds > 4750) {\r\n                addToast(\"Betodds can't be greater than 4750\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n            }\r\n            else if(betAmount > wallet) {\r\n                addToast(\"You don't have enough money to place the bet. Deposit some money or you can always earn money from Free bet\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }            \r\n            else return true;\r\n        }\r\n        if(betmode === 'auto') {\r\n            if(betAmount === 0) {\r\n                addToast(\"BetAmount can't be zero. Why don't you try Free Bet ?\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betAmount < 0.001) {\r\n                addToast(\"BetAmount should be greater than 0.01\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betAmount > 20) {\r\n                addToast(\"BetAmount can't be greater than 20.\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betOdds < 1) {\r\n                addToast(\"Betodds can't be less than one\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betOdds > 4750) {\r\n                addToast(\"Betodds can't be greater than 4750\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n            }\r\n            else if(betAmount > wallet) {\r\n                // console.log(\"hey\")\r\n                addToast(\"You don't have enough money to place the bet. Deposit some money or you can always earn money from Free bet\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                }) \r\n                return false\r\n            } /////////            terrible doing : betamount > 20            \r\n            else if(noOfRolls < 1) {\r\n                addToast('No of rolls is not valid', {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false\r\n            }\r\n            else return true\r\n        }\r\n    }\r\n\r\n    const handleAutoBet = () => {              //#################### Function that handles Start Auto Bet Button ###########################\r\n        var x = 1;\r\n        const id = setInterval(() => {\r\n                if((x.toString() === noOfRolls)) {\r\n                    setIsAutoBetActive(false)\r\n                    clearInterval(id)\r\n                    setTimeout(() => setRollValue(10000), 2000)\r\n                }\r\n                setA(id);\r\n                setCounter(true)\r\n                handleRoll()\r\n                x++;\r\n            }, 3000);\r\n        \r\n    }\r\n\r\n    const handleBetOdds = () => {             //#################### Function that handles input Values on the Left pane #####################\r\n        if(betOdds) {\r\n            // if(betOdds > 4750) \r\n            //     setBetOdds(4750);\r\n            // else if(betOdds < 1) \r\n            //     setBetOdds(1);\r\n            var x = 95.00 / betOdds;\r\n            // console.log(\"betodds\", betOdds);\r\n            var y = ((((betOdds*100)/100)*betAmount)-betAmount);\r\n            // console.log(\"y\",y);\r\n            setWinChance(x.toFixed(2));\r\n            setWinLow(Math.floor(x*100));\r\n            setWinHigh(Math.floor(10000-winLow));\r\n            setWinProfit(y.toFixed(3));\r\n            // setChangeBetOddWin(betOdds);\r\n            // setChangeBetOddLose(betOdds);\r\n            // setTakeAwayAmount(0);\r\n        }\r\n        else {\r\n            setWinChance('NaN');\r\n            setWinHigh('NaN');\r\n            setWinLow('NaN');\r\n            setWinProfit(0);\r\n        }\r\n    }\r\n\r\n    const handleSetWallet = () => {\r\n        if(localStorage.getItem(\"userId\")) {\r\n            getWalletData(localStorage.getItem(\"userId\")).then(res => {\r\n                // console.log(res.data.wallet)\r\n                setWallet((res.data.wallet))\r\n            })\r\n        } \r\n    }\r\n\r\n    // #####################   Life Cycle Functions   ########################\r\n        \r\n    useEffect(() => {\r\n        handleBetOdds();\r\n        if(isAutoBetActive === false) {\r\n            clearInterval(a)\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        const loggedInUser = localStorage.getItem('userId')\r\n        if(loggedInUser) {\r\n            setUserId(loggedInUser)\r\n        }\r\n        \r\n        handleSetWallet();\r\n\r\n        if(localStorage.getItem(\"userId\")) {\r\n            getClientSeed().then(res => {\r\n                // console.log(res)\r\n                setClientSeed(res.data.data)\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handleWin()\r\n        handleHitMax()\r\n        handleStopBetAfter()\r\n        // if(betmode === \"auto\") {\r\n        //     if(!handleValidation()) {\r\n        //         clearInterval(a);\r\n        //         setRollValue(10000)\r\n        //         setIsAutoBetActive(false);\r\n        //     } \r\n        // }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [rollValue])\r\n\r\n    useEffect(() => {\r\n        // console.log('takeAwayAmount',takeAwayAmount);\r\n        // let w = Number(wallet) + Number(takeAwayAmount)\r\n        // setWallet(w.toFixed(2))\r\n        let w = Number(wallet);\r\n        // console.log(\"hey\", wallet, w);\r\n        // console.log(w.toFixed(2))\r\n        if(betmode === \"auto\") {\r\n            if(!handleValidation()) {\r\n                clearInterval(a);\r\n                setTimeout(() => setRollValue(10000), 2000)\r\n                setIsAutoBetActive(false);\r\n            } \r\n        }\r\n        setWalletData(userId, w.toFixed(3));\r\n        setHistory(!history);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [wallet])\r\n\r\n    useEffect(() => {\r\n        if(betmode === 'manual' && rollValue !== 10000)\r\n            pushMultiplyBetRollHistory(userId, rollHistory)    \r\n        if(betmode === 'auto' && rollValue !== 10000) {\r\n            // console.log(rollHistory)\r\n            pushMultiplyBetRollHistory(userId, rollHistory)\r\n        }\r\n        // console.log('rollHistory',rollHistory)\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [history])\r\n\r\n    return (\r\n        <div>\r\n            <Navbar wallet={wallet} />\r\n            <LoggedUser />\r\n            <div className=\" bg-gray text-white p-3\">\r\n                <h1 className=\"text-white text-center py-4\">Multiply your Bet here</h1>\r\n                <div className=\"text-center mb-3\">\r\n                    <button className=\"btn btn-lg btn-primary mr-3\" onClick={() => {\r\n                        setBetmode('manual')\r\n                        setRollValue(10000)\r\n                        clearInterval(a)\r\n                        setIsAutoBetActive(false)\r\n                        }}>Manual</button>\r\n                    <button className=\"btn btn-lg btn-primary\" onClick={() => {\r\n                        setBetmode('auto')\r\n                        setRollValue(10000)\r\n                    }}>Auto</button>\r\n                </div>\r\n                <div className=\"row\" style={{\"fontWeight\": 'lighter'}}>\r\n                    <div className=\"col-4 multiplyBet\">\r\n                        {betmode === \"manual\"\r\n                        ?\r\n                        <>    {/*#####################################  manual bet  ######################## */}\r\n                            <label className=\"mb-3 h5\">Max Bet</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{MaxBet}</span></label><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Amount</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless mobile\"\r\n                                value={betAmount} \r\n                                onChange={event => {\r\n                                    setBetAmount(event.target.value); \r\n                                    }}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Odds</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless mobile\"  \r\n                                onChange={event => {setBetOdds(event.target.value);}}\r\n                                value={betOdds}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Win Profit</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{winProfit}</span></label><br></br>\r\n                            <label className=\"mb-4 h5\">Win Probability</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{winChance}%</span></label><br></br>\r\n                        </>\r\n                        :\r\n                        <>\r\n                        {isAutoBetActive\r\n                        ?\r\n                        <div style={{\"pointerEvents\": \"none\", \"opacity\": \"0.5\"}}>  {/*######################################  auto bet  ######################## */}\r\n                            <label className=\"mb-3 h5\">Max Bet</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{MaxBet}</span></label><br></br>\r\n                            <label className=\"mb-3 h5\">Base Bet</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{basebet}</span></label><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Amount</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless disabled mobile\"\r\n                                value={betAmount} \r\n                                onChange={event => {\r\n                                    setBetAmount(event.target.value);\r\n                                    }}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Odds</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless disabled mobile\"  \r\n                                onChange={event => {setBetOdds(event.target.value);}}\r\n                                value={betOdds}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Win Profit</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{winProfit}</span></label><br></br>\r\n                            <label className=\"mb-4 h5\">Win Probability</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{winChance}%</span></label><br></br>\r\n                            <h5 className=\"bg-dark p-2 text-center rounded\">On Hitting Max Bet</h5>\r\n                            <div className=\"bg-darkgray p-2\">\r\n                                <input type=\"radio\" value=\"basebet\" name=\"max_bet\" onChange={event => handleRadio(event)}></input>\r\n                                <label className=\"h5 mx-2\">Return to BaseBet</label><br></br>\r\n                                <input type=\"radio\" value=\"stopbet\" name=\"max_bet\" onChange={event => handleRadio(event)} defaultChecked></input>\r\n                                <label className=\"h5 mx-2\">Stop Betting</label>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <label className=\"mb-3 h5\">Max Bet</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{MaxBet}</span></label><br></br>\r\n                            <label className=\"mb-3 h5\">Base Bet</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{basebet}</span></label><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Amount</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless disabled mobile\"\r\n                                value={betAmount} \r\n                                onChange={event => {                \r\n                                    setBetAmount(event.target.value);\r\n                                    }}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Odds</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless disabled mobile\"  \r\n                                onChange={event => {setBetOdds(event.target.value);}}\r\n                                value={betOdds}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Win Profit</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{winProfit}</span></label><br></br>\r\n                            <label className=\"mb-4 h5\">Win Probability</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{winChance}%</span></label><br></br>\r\n                            <h5 className=\"bg-dark p-2 text-center rounded\">On Hitting Max Bet</h5>\r\n                            <div className=\"bg-darkgray p-2\">\r\n                                <input type=\"radio\" value=\"basebet\" name=\"max_bet\" onChange={event => handleRadio(event)}></input>\r\n                                <label className=\"h5 mx-2\">Return to BaseBet</label><br></br>\r\n                                <input type=\"radio\" value=\"stopbet\" name=\"max_bet\" onChange={event => handleRadio(event)} defaultChecked></input>\r\n                                <label className=\"h5 mx-2\">Stop Betting</label>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                        </>\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-4 multiplyBet border-right border-left\">\r\n                        {betmode === \"manual\" \r\n                        ?\r\n                        <>  {/*###########################################  manual bet  ######################## */}\r\n                            {counter\r\n                            ?\r\n                            <>\r\n                            <div className=\"text-center my-4\"><span className=\"border counter m-auto display-4 p-3 text-white\"></span></div>    \r\n                            </>\r\n                            :\r\n                            <>\r\n                            <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{rollValue}</span></div>\r\n                            </>\r\n                            }\r\n                            <div className=\"row py-4\">\r\n                                <div className=\"col-6 text-center\">\r\n                                    <button \r\n                                        className=\"btn btn-info btn-lg m-auto\" \r\n                                        value=\"high\" \r\n                                        onClick={() => {\r\n                                            if(handleValidation()) {\r\n                                                setIsHi(1);\r\n                                                setTakeAwayAmount(0);\r\n                                                setCounter(true)\r\n                                                handleRoll();\r\n                                            }\r\n                                        }}>ROLL HI</button>\r\n                                </div>\r\n                                <div className=\"col-6 text-center\">\r\n                                    <button \r\n                                        className=\"btn btn-info btn-lg m-auto\" \r\n                                        value=\"low\" \r\n                                        onClick={() => {\r\n                                            if(handleValidation()) {\r\n                                                setIsHi(0);\r\n                                                setTakeAwayAmount(0);\r\n                                                setCounter(true)\r\n                                                handleRoll()\r\n                                            }\r\n                                        }}>ROLL LO</button>\r\n                                </div>\r\n                            </div>\r\n                            <p>The roll should be greater than <span className=\"text-green\">{winHigh}</span> if you roll High and less than <span className=\"text-green\">{winLow}</span> if you roll low.</p>\r\n                            {/* {rollValue !== 10000\r\n                            ? \r\n                                handleResultDisplay()\r\n                                ?\r\n                                <>\r\n                                <h1 className=\"text-green text-center\">You Won !!</h1>\r\n                                </>\r\n                                :\r\n                                <h1 className=\"text-danger text-center\">You Lose !!</h1>\r\n                            :\r\n                            <></>\r\n                            } */}\r\n                        </>\r\n                        :\r\n                        <>  {/*##########################################  auto bet  ######################## */}\r\n                            {counter\r\n                            ?\r\n                            <>\r\n                            <div className=\"text-center my-4\"><span className=\"border counter m-auto display-4 p-3 text-white\"></span></div>    \r\n                            </>\r\n                            :\r\n                            <>\r\n                            <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{rollValue}</span></div>\r\n                            </>\r\n                            }\r\n                            {isAutoBetActive\r\n                            ?\r\n                            <div style={{\"pointerEvents\": 'none', \"opacity\": \"0.5\"}}>\r\n                                <label className=\"h5 mt-3\">Bet On</label>\r\n                                <div className=\"float-right mt-3\">\r\n                                    <input type=\"radio\" name=\"rollmode\" value=\"hi\" onChange={event => {setIsHi(1); handleRadio(event)}} defaultChecked></input><label className=\"mx-2\">Hi</label>\r\n                                    <input type=\"radio\" name=\"rollmode\" value=\"lo\" onChange={event => {setIsHi(0); handleRadio(event)}}></input><label className=\"mx-2\">Lo</label>\r\n                                    <input type=\"radio\" name=\"rollmode\" value=\"alternate\" onChange={event => {setIsHi(1); handleRadio(event)}}></input><label className=\"mx-2\">Alternate</label>\r\n                                </div><br></br>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                <label className=\"h5 mt-3\">Bet On</label>\r\n                                <div className=\"float-right mt-3\">\r\n                                    <input type=\"radio\" name=\"rollmode\" value=\"hi\" onChange={event => {setIsHi(1); handleRadio(event)}} defaultChecked></input><label className=\"mx-2\">Hi</label>\r\n                                    <input type=\"radio\" name=\"rollmode\" value=\"lo\" onChange={event => {setIsHi(0); handleRadio(event)}}></input><label className=\"mx-2\">Lo</label>\r\n                                    <input type=\"radio\" name=\"rollmode\" value=\"alternate\" onChange={event => {setIsHi(1); handleRadio(event)}}></input><label className=\"mx-2\">Alternate</label>\r\n                                </div><br></br>\r\n                            </>}\r\n                            <div className=\"w-100 text-center py-4\">\r\n                                {isAutoBetActive ? \r\n                                <button \r\n                                    className=\"btn btn-danger btn-lg m-auto\"\r\n                                    onClick={() => {\r\n                                        clearInterval(a);\r\n                                        setTimeout(() => setRollValue(10000), 2000)\r\n                                        setIsAutoBetActive(false);\r\n                                    }}\r\n                                >Stop Auto Bet</button>\r\n                                :\r\n                                <button \r\n                                    className=\"btn btn-info btn-lg m-auto\" \r\n                                    onClick={() => {\r\n                                        setTakeAwayAmount(0);\r\n                                        setProfit(0);\r\n                                        setLoss(0);\r\n                                        if(handleValidation()) {\r\n                                            setCounter(true)\r\n                                            handleAutoBet();\r\n                                            setIsAutoBetActive(true);\r\n                                        }\r\n                                        setBaseBet(betAmount);\r\n                                    }}>Start Auto Bet</button>\r\n                                }\r\n                            </div>\r\n                            <p>The roll should be greater than <span className=\"text-green\">{winHigh}</span> if you roll High and less than <span className=\"text-green\">{winLow}</span> if you roll low.</p>\r\n                        </>}\r\n                    </div>\r\n                    <div className=\"col-4 multiplyBet\">\r\n                        {betmode === \"auto\"\r\n                        ?\r\n                        <>  {/*#########################################  auto bet  ######################## */}\r\n                            {isAutoBetActive\r\n                            ?\r\n                            <div style={{\"pointerEvents\": 'none', \"opacity\": \"0.5\"}}>\r\n                                <label className=\"h5 mb-3\">Number of rolls</label>\r\n                                <input \r\n                                    className=\"float-right rounded borderless mobile\"\r\n                                    value={noOfRolls}\r\n                                    onChange={event => {setNoOfRolls(event.target.value)}}></input><br></br>\r\n                                <h5 className=\"text-center bg-dark p-2 rounded\">Stop Betting After</h5>\r\n                                <div className=\"bg-darkgray p-2 mb-2\">\r\n                                    <label className=\"h5 mb-3\">Profit {'>='}</label>\r\n                                    <input className=\"float-right rounded borderless mobile\" value={stopProfit} onChange={event => setStopProfit(event.target.value)} required></input><br></br>                            \r\n                                    <label className=\"h5 mb-3\">Loss {'>='}</label>\r\n                                    <input className=\"float-right rounded borderless mobile\" value={stopLoss} onChange={event => setStopLoss(event.target.value)} required></input>\r\n                                </div>\r\n                                {/* <nav className=\"nav nav-fill\">\r\n                                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid \r\n                                    <a className=\"nav-item nav-link p-2 bg-dark borderless text-white\" onClick={() => setOnWin(true)}>On Win</a>\r\n                                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid \r\n                                    <a className=\"nav-item nav-link p-2 bg-dark borderless text-white\" onClick={() => setOnWin(false)}>On Lose</a>\r\n                                </nav> */}\r\n                                <div className=\"bg-darkgray p-2\">\r\n                                    <div> {/*#############################  On win ################################# */}\r\n                                    <h5 className=\"text-center bg-dark p-2 rounded\">On Win</h5>\r\n\r\n                                    <p>Changes to make on every win</p>\r\n                                    {/* <input type=\"checkbox\"></input><label className=\"mx-2 mb-3 h5\">Return to BaseBet</label><br></br> */}\r\n                                    <input \r\n                                        className=\"\" \r\n                                        type=\"checkbox\"\r\n                                        name=\"onWinReturnToBaseBet\"\r\n                                        value={onWinChecked}\r\n                                        onClick={event => handleCheckBox(event)}></input>\r\n                                    <label className=\"h5 mx-2 mb-3\">Return to BaseBet</label><br></br>\r\n                                    {onWinChecked\r\n                                    ? \r\n                                    <div style={{\"pointerEvents\" : \"none\", \"opacity\" : \"0.5\"}}>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onWinIncreaseBet\"\r\n                                            value={onWinIncreaseBetChecked}\r\n                                            // onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Increase bet by (%)</label>\r\n                                        <input \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={increaseBetWin}\r\n                                            onChange={event => setIncreaseBetWin(event.target.value)}\r\n                                            ></input><br></br>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onWinChangeBetOdds\"\r\n                                            value={onWinChangeBetChecked}\r\n                                            // onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Change Bet Odds to</label>\r\n                                        <input  \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={changeBetOddWin}\r\n                                            onChange={event => setChangeBetOddWin(event.target.value)}></input>\r\n                                    </div>\r\n                                    :\r\n                                    <>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onWinIncreaseBet\"\r\n                                            value={onWinIncreaseBetChecked}\r\n                                            onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Increase bet by (%)</label>                                        \r\n                                        <input \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={increaseBetWin}\r\n                                            onChange={event => setIncreaseBetWin(event.target.value)}\r\n                                            ></input><br></br>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onWinChangeBetOdds\"\r\n                                            value={onWinChangeBetChecked}\r\n                                            onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Change Bet Odds to</label>\r\n                                        <input  \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={changeBetOddWin}\r\n                                            onChange={event => setChangeBetOddWin(event.target.value)}></input>\r\n                                    </>}\r\n                                    </div>\r\n                                    <div> {/*############################# On Lose  ################################ */}\r\n                                    <h5 className=\"text-center bg-dark p-2 rounded\">On Lose</h5>\r\n                                    <p>Changes to make on every lose</p>                             \r\n                                    {/* <input type=\"checkbox\"></input><label className=\"mx-2 mb-3 h5\">Return to BaseBet</label><br></br> */}\r\n                                    <input \r\n                                        className=\"\" \r\n                                        type=\"checkbox\"\r\n                                        name=\"onLoseReturnToBaseBet\"\r\n                                        value={onLoseChecked}\r\n                                        onChange={event => handleCheckBox(event)}></input>\r\n                                    <label className=\"h5 mx-2 mb-3\">Return to BaseBet</label><br></br>\r\n                                    {onLoseChecked\r\n                                    ? \r\n                                    <div style={{\"pointerEvents\" : \"none\", \"opacity\" : \"0.5\"}}>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onLoseIncreaseBet\"\r\n                                            value={onLoseIncreaseBetChecked}\r\n                                            // onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Increase bet by (%)</label>\r\n                                        <input \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={increaseBetLose}\r\n                                            onChange={event => setIncreaseBetLose(event.target.value)}\r\n                                            ></input><br></br>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onLoseChangeBetOdds\"\r\n                                            value={onLoseChangeBetChecked}\r\n                                            // onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Change Bet Odds to</label>\r\n                                        <input  \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={changeBetOddLose}\r\n                                            onChange={event => setChangeBetOddLose(event.target.value)}></input>\r\n                                    </div>\r\n                                    :\r\n                                    <>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onLoseIncreaseBet\"\r\n                                            value={onLoseIncreaseBetChecked}\r\n                                            onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Increase bet by (%)</label>\r\n                                        <input \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={increaseBetLose}\r\n                                            onChange={event => setIncreaseBetLose(event.target.value)}\r\n                                            ></input><br></br>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onLoseChangeBetOdds\"\r\n                                            value={onLoseChangeBetChecked}\r\n                                            onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Change Bet Odds to</label>\r\n                                        <input  \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={changeBetOddLose}\r\n                                            onChange={event => setChangeBetOddLose(event.target.value)}></input>\r\n                                    </>}         \r\n                                    </div>\r\n\r\n                            </div>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <label className=\"h5 mb-3\">Number of rolls</label>\r\n                                <input \r\n                                    className=\"float-right rounded borderless mobile\"\r\n                                    value={noOfRolls}\r\n                                    onChange={event => {setNoOfRolls(event.target.value)}}></input><br></br>\r\n                                <h5 className=\"text-center bg-dark p-2 rounded\">Stop Betting After</h5>\r\n                                <div className=\"bg-darkgray p-2 mb-2\">\r\n                                    <label className=\"h5 mb-3\">Profit {'>='}</label>\r\n                                    <input className=\"float-right rounded borderless mobile\" value={stopProfit} onChange={event => setStopProfit(event.target.value)} required></input><br></br>                            \r\n                                    <label className=\"h5 mb-3\">Loss {'>='}</label>\r\n                                    <input className=\"float-right rounded borderless mobile\" value={stopLoss} onChange={event => setStopLoss(event.target.value)} required></input>\r\n                                </div>\r\n                                {/* <nav className=\"nav nav-fill\">\r\n                                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid \r\n                                    <a className=\"nav-item nav-link p-2 bg-dark borderless text-white\" onClick={() => setOnWin(true)}>On Win</a>\r\n                                    /* eslint-disable-next-line jsx-a11y/anchor-is-valid \r\n                                    <a className=\"nav-item nav-link p-2 bg-dark borderless text-white\" onClick={() => setOnWin(false)}>On Lose</a>\r\n                                </nav> */}\r\n                                <div className=\"bg-darkgray p-2\">\r\n                                    <div> {/*#############################  On win ################################# */}\r\n                                    <h5 className=\"text-center bg-dark p-2 rounded\">On Win</h5>\r\n                                    <p>Changes to make on every win</p>\r\n                                    {/* <input type=\"checkbox\"></input><label className=\"mx-2 mb-3 h5\">Return to BaseBet</label><br></br> */}\r\n                                    <input \r\n                                        className=\"\" \r\n                                        type=\"checkbox\"\r\n                                        name=\"onWinReturnToBaseBet\"\r\n                                        value={onWinChecked}\r\n                                        onClick={event => handleCheckBox(event)}></input>\r\n                                    <label className=\"h5 mx-2 mb-3\">Return to BaseBet</label><br></br>\r\n                                    {onWinChecked\r\n                                    ? \r\n                                    <div style={{\"pointerEvents\" : \"none\", \"opacity\" : \"0.5\"}}>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onWinIncreaseBet\"\r\n                                            value={onWinIncreaseBetChecked}\r\n                                            // onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Increase bet by (%)</label>\r\n                                        <input \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={increaseBetWin}\r\n                                            onChange={event => setIncreaseBetWin(event.target.value)}\r\n                                            ></input><br></br>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onWinChangeBetOdds\"\r\n                                            value={onWinChangeBetChecked}\r\n                                            // onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Change Bet Odds to</label>\r\n                                        <input  \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={changeBetOddWin}\r\n                                            onChange={event => setChangeBetOddWin(event.target.value)}></input>\r\n                                    </div>\r\n                                    :\r\n                                    <>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onWinIncreaseBet\"\r\n                                            value={onWinIncreaseBetChecked}\r\n                                            onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Increase bet by (%)</label>                                        \r\n                                        <input \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={increaseBetWin}\r\n                                            onChange={event => setIncreaseBetWin(event.target.value)}\r\n                                            ></input><br></br>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onWinChangeBetOdds\"\r\n                                            value={onWinChangeBetChecked}\r\n                                            onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Change Bet Odds to</label>\r\n                                        <input  \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={changeBetOddWin}\r\n                                            onChange={event => setChangeBetOddWin(event.target.value)}></input>\r\n                                    </>}\r\n                                    </div>\r\n                                    \r\n                                    <div> {/*############################# On Lose  ################################ */}\r\n                                    <h5 className=\"text-center bg-dark p-2 rounded\">On Lose</h5>\r\n                                    <p>Changes to make on every lose</p>\r\n                                    \r\n                                    {/* <input type=\"checkbox\"></input><label className=\"mx-2 mb-3 h5\">Return to BaseBet</label><br></br> */}\r\n                                    <input \r\n                                        className=\"\" \r\n                                        type=\"checkbox\"\r\n                                        name=\"onLoseReturnToBaseBet\"\r\n                                        value={onLoseChecked}\r\n                                        onChange={event => handleCheckBox(event)}></input>\r\n                                    <label className=\"h5 mx-2 mb-3\">Return to BaseBet</label><br></br>\r\n                                    {onLoseChecked\r\n                                    ? \r\n                                    <div style={{\"pointerEvents\" : \"none\", \"opacity\" : \"0.5\"}}>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onLoseIncreaseBet\"\r\n                                            value={onLoseIncreaseBetChecked}\r\n                                            // onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Increase bet by (%)</label>\r\n                                        <input \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={increaseBetLose}\r\n                                            onChange={event => setIncreaseBetLose(event.target.value)}\r\n                                            ></input><br></br>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onLoseChangeBetOdds\"\r\n                                            value={onLoseChangeBetChecked}\r\n                                            // onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Change Bet Odds to</label>\r\n                                        <input  \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={changeBetOddLose}\r\n                                            onChange={event => setChangeBetOddLose(event.target.value)}></input>\r\n                                    </div>\r\n                                    :\r\n                                    <>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onLoseIncreaseBet\"\r\n                                            value={onLoseIncreaseBetChecked}\r\n                                            onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Increase bet by (%)</label>\r\n                                        <input \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={increaseBetLose}\r\n                                            onChange={event => setIncreaseBetLose(event.target.value)}\r\n                                            ></input><br></br>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            name=\"onLoseChangeBetOdds\"\r\n                                            value={onLoseChangeBetChecked}\r\n                                            onChange={handleCheckBox}\r\n                                        ></input>\r\n                                        <label className=\"h5 mx-2 mb-3\">Change Bet Odds to</label>\r\n                                        <input  \r\n                                            className=\"float-right rounded borderless mobile\"\r\n                                            value={changeBetOddLose}\r\n                                            onChange={event => setChangeBetOddLose(event.target.value)}></input>\r\n                                    </>}         \r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            }\r\n                        </>\r\n                        :\r\n                        <> {/*######################################### manual bet ######################################## */}\r\n                        </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MultiplyBet\r\n\r\n// function HighRollers() {\r\n//     return (\r\n//         <div>\r\n//             <div className=\"card card-body bg-gray\">\r\n//                 <div className=\"row\">\r\n//                     <div className=\"col-8\">\r\n//                         <h1 className=\"text-white\">High Rollers</h1>\r\n//                         <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">10000</span></div>\r\n//                         <div className=\"row py-3\">\r\n//                             <div className=\"col-6 text-center\">\r\n//                                 <button className=\"btn btn-info btn-lg m-auto\">ROLL HI</button>\r\n//                             </div>\r\n//                             <div className=\"col-6 text-center\">\r\n//                                 <button className=\"btn btn-info btn-lg m-auto\">ROLL LO</button>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className=\"col-4\">\r\n//                         <div className=\"card card-body\">\r\n//                             <h3>How fair the game is</h3>\r\n//                             <ol>\r\n//                                 <li>Let me explain how fair we are.</li>\r\n//                                 <li>Explanory text</li>\r\n//                                 <li>and this is how its done</li>\r\n//                             </ol>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default HighRollers\r\n","export default __webpack_public_path__ + \"static/media/spinner2.c7d9f081.gif\";","import React, { useState } from 'react'\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nimport {registerUser, loginUser } from '../Helpers/service'\r\nimport Spinner from './spinner2.gif';\r\n\r\nconst pointGen = (pattern, num) => {\r\n    return Array.apply(null, Array(num)).map(() => pattern).join(\"\");\r\n};\r\n\r\nfunction Login() {\r\n    const [loginPass, setLoginPass] = useState('')\r\n\r\n    const { addToast } = useToasts()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [register, setRegister] = useState(false);\r\n    const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n\r\n    const [unmaskedPassword, setUnmaskedPassword] = React.useState('');\r\n    const [unmaskedConfirmPassword, setunmaskedConfirmPassword] = React.useState('');\r\n\r\n\r\n    const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\r\n    \r\n    const registerData = {\r\n        username : username,\r\n        password: unmaskedPassword,\r\n        email: email,\r\n        wallet: '0.000',\r\n        lottery: 0\r\n    }\r\n    const loginData = {\r\n        email: email,\r\n        password: loginPass\r\n    }\r\n\r\n    function handleScroll ( divId ) {\r\n        const test = document.getElementById(`${divId}`);\r\n        test.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"center\"\r\n        });  \r\n    }\r\n\r\n    function handleValidation() {\r\n        if(register) {\r\n            if(!username) {\r\n                // console.log(\"hehe1\")\r\n                addToast('Username cannot be empty!!', {\r\n                    appearance: 'error',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            if(typeof username !== \"undefined\") {\r\n                if(!username.match(/^[a-zA-Z0-9]+$/)) {\r\n                    // console.log(\"hehe2\")\r\n                    addToast('Username should contain only letters and numbers', {\r\n                        appearance: 'error', \r\n                        autoDismiss: true\r\n                    })\r\n                    return false;\r\n                }\r\n            }\r\n            if(!email) {\r\n                // console.log(\"hehe3\")\r\n                addToast('Email cannot be empty', {\r\n                    appearance: 'error',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            if(typeof email !== \"undefined\") {\r\n                let lastAtPos = email.lastIndexOf('@');\r\n                let lastDotPos = email.lastIndexOf('.');\r\n    \r\n                if(!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && (email.length - lastDotPos) > 2)) {\r\n                    addToast('Email is not valid', {\r\n                        appearance: 'error',\r\n                        autoDismiss: true\r\n                    })\r\n                    return false;\r\n                }\r\n            }\r\n            if(!password) {\r\n                addToast('Password cannot be empty!!', {\r\n                    appearance: 'error',\r\n                    autoDismiss: true\r\n                })\r\n                return false\r\n            }\r\n            if(typeof password !== \"undefined\") {\r\n                if(!password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)) {\r\n                    addToast(\"Password should contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character!!\", {\r\n                        appearance: 'error',\r\n                        autoDismiss: true\r\n                    })\r\n                    return false\r\n                }\r\n            }\r\n            if(unmaskedPassword !== unmaskedConfirmPassword) {\r\n                addToast(\"Password and Confirm Password don't seem to match\", {\r\n                    appearance: 'error',\r\n                    autoDismiss: true\r\n                })\r\n                return false\r\n            }\r\n    \r\n            return true;\r\n        }\r\n        else {\r\n            if(!email) {\r\n                // console.log(\"hehe3\")\r\n                addToast('Email cannot be empty', {\r\n                    appearance: 'error',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            if(!loginPass) {\r\n                addToast('Password cannot be empty!!', {\r\n                    appearance: 'error',\r\n                    autoDismiss: true\r\n                })\r\n                return false\r\n            }\r\n            return true\r\n        }\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        var index = e.target.selectionStart;\r\n        var inputText = e.target.value;\r\n        var addedTextLength = inputText.length - unmaskedPassword.length;\r\n        if (addedTextLength > 0) {\r\n            const newStr = inputText.slice(index - addedTextLength, index);\r\n            setUnmaskedPassword(unmaskedPassword.slice(0, index - addedTextLength) + newStr + unmaskedPassword.slice(index - addedTextLength));\r\n            // delete text\r\n        } else if (addedTextLength < 0) {\r\n            setUnmaskedPassword(unmaskedPassword.slice(0, index) + unmaskedPassword.slice(index - addedTextLength));\r\n        }\r\n        if (inputText.length === 0) {\r\n            setPassword('');\r\n        } else {\r\n            setPassword(pointGen('●', inputText.length - 1) + inputText.charAt(inputText.length - 1));\r\n        }\r\n    }\r\n\r\n    const handleConfirmPasswordChange = (e) => {\r\n        var index = e.target.selectionStart;\r\n        var inputText = e.target.value;\r\n        var addedTextLength = inputText.length - unmaskedConfirmPassword.length;\r\n        if (addedTextLength > 0) {\r\n            const newStr = inputText.slice(index - addedTextLength, index);\r\n            setunmaskedConfirmPassword(unmaskedConfirmPassword.slice(0, index - addedTextLength) + newStr + unmaskedConfirmPassword.slice(index - addedTextLength));\r\n            // delete text\r\n        } else if (addedTextLength < 0) {\r\n            setunmaskedConfirmPassword(unmaskedConfirmPassword.slice(0, index) + unmaskedConfirmPassword.slice(index - addedTextLength));\r\n        }\r\n        if (inputText.length === 0) {\r\n            setConfirmPassword('');\r\n        } else {\r\n            setConfirmPassword(pointGen('●', inputText.length - 1) + inputText.charAt(inputText.length - 1));\r\n        }\r\n    }\r\n\r\n    // console.log(loginPass);\r\n    console.log(unmaskedPassword);\r\n    console.log(unmaskedConfirmPassword);\r\n\r\n    React.useEffect(() => {\r\n        const timer = window.setTimeout(() => {\r\n          setPassword(pointGen('●', password.length));\r\n        }, 800);\r\n        return () => window.clearTimeout(timer);\r\n      }, [password]);\r\n\r\n    React.useEffect(() => {\r\n        const timer = window.setTimeout(() => {\r\n            setConfirmPassword(pointGen('●', confirmPassword.length));\r\n        }, 800);\r\n        return () => window.clearTimeout(timer);\r\n    }, [confirmPassword]);\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\r\n                <a className=\"navbar-brand text-info font-weight-bolder\" href=\"/FreeBet\">\r\n                    {/* <img src={Logo} alt=\"Logo\" width=\"36\" height=\"36\" className=\"vertical-align-middle\" /> */}\r\n                    <span className=\"\">FREE MONEY</span>\r\n                </a>\r\n                <button className=\"custom-toggler navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample09\" aria-controls=\"navbarsExample09\" aria-expanded={!isNavCollapsed ? \"true\" : \"false\"} aria-label=\"Toggle navigation\" onClick={handleNavCollapse}>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className={`${isNavCollapsed ? 'collapse' : 'collapse'} navbar-collapse`} id=\"navbarsExample09\">\r\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                    <a className=\"nav-link text-info\" style={{\"cursor\": \"pointer\"}} onClick={() => handleScroll('nav2')}>nav2</a>\r\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                    <a className=\"nav-link text-info\" style={{\"cursor\": \"pointer\"}} onClick={() => handleScroll('nav3')}>nav3</a>\r\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                    <a className=\"nav-link text-info\" style={{\"cursor\": \"pointer\"}} onClick={() => handleScroll('nav4')}>nav4</a>\r\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                    <a className=\"nav-link text-info\" style={{\"cursor\": \"pointer\"}} onClick={() => { setRegister(false);setEmail('');setPassword('');setUsername('');setConfirmPassword('');setIsLoading(false)}}>Login</a>\r\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                    <a className=\"nav-link text-info\" style={{\"cursor\": \"pointer\"}} onClick={() => {setRegister(true);setEmail('');setPassword('');setUsername('');setConfirmPassword('');setIsLoading(false)}}>Sign up</a>\r\n                </div>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n\r\n                </div>\r\n                <div className=\"col-6\">\r\n                <div className=\"bg-gray p-3 text-white\">\r\n                    {register ? \r\n                    <>\r\n                        <h1 className=\"text-center\">Create a New Account</h1>                        \r\n                        <label className=\"h5\">Email</label><br></br>\r\n                        <input \r\n                            className=\"my-2 rounded borderless\"\r\n                            value={email}\r\n                            onChange={event => setEmail(event.target.value)}></input><br></br>\r\n                        <label className='h5'>Password</label><br></br>\r\n                        <input \r\n                            className=\"my-2 rounded borderless\"\r\n                            type=\"\"\r\n                            value={password}                    \r\n                            // onChange={event => setPassword(event.target.value)}\r\n                            onChange={event => {\r\n                                handlePasswordChange(event);\r\n                            }}\r\n                            ></input><br></br>\r\n                        <label className='h5'>Confirm Password</label><br></br>\r\n                        <input \r\n                            className=\"my-2 rounded borderless\"\r\n                            value={confirmPassword}\r\n                            // onChange={event => setConfirmPassword(event.target.value)}\r\n                            onChange={handleConfirmPasswordChange}\r\n                            ></input><br></br>\r\n                        <label className=\"h5\">Username</label><br></br>\r\n                        <input \r\n                            className=\"my-2 rounded borderless\"\r\n                            value={username}\r\n                            onChange={event => setUsername(event.target.value)}></input><br></br>\r\n                        <div className=\"text-center pt-3\">\r\n                            <button \r\n                                className=\"btn btn-lg btn-info m-auto mb-2\"\r\n                                onClick={() => {\r\n                                    if(handleValidation()) {\r\n                                        setIsLoading(true)\r\n                                        registerUser(registerData).then(res => {\r\n                                            // alert(res)\r\n                                            setTimeout(() => {\r\n                                                if(res) {\r\n                                                setIsLoading(false)\r\n                                                addToast(res, {\r\n                                                appearance: 'info',\r\n                                                autoDismiss: true\r\n                                                })\r\n                                                // console.log(res);\r\n                                                if(res === \"Account Created Successfully\") {\r\n                                                    setRegister(false);\r\n                                                    setUsername('')\r\n                                                    setEmail('')\r\n                                                    setPassword('')\r\n                                                }\r\n                                            }\r\n                                            },3000)\r\n                                        });\r\n                                    }                                    \r\n                                }}\r\n                                >\r\n                                {isLoading?<img src={Spinner} width=\"25\" height=\"25\" alt=\"loading\" className=\"mr-2\"></img>: <></>}\r\n                                Register</button>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <h1 className=\"text-center\">Sign In to your Account</h1>\r\n                        <label className=\"h5\">Email</label><br></br>\r\n                        <input \r\n                            className=\"my-2 rounded borderless\"\r\n                            value={email}\r\n                            onChange={event => setEmail(event.target.value)}></input><br></br>\r\n                        <label className='h5'>Password</label><br></br>\r\n                        <input \r\n                            className=\"my-2 rounded borderless\"\r\n                            value={loginPass}\r\n                            type=\"password\"\r\n                            onChange={event => setLoginPass(event.target.value)}></input><br></br>\r\n                        <div className=\"text-center pt-3\">                        \r\n                            <button \r\n                                className=\"btn btn-lg btn-info m-auto mb-2\"\r\n                                onClick={() => {                                    \r\n                                    if(handleValidation()) {\r\n                                        setIsLoading(true)\r\n                                        loginUser(loginData).then(res => {\r\n                                            // console.log(res)\r\n                                            // alert(res.data.data);\r\n                                            setTimeout(()=> {\r\n                                                if(res) {\r\n                                                setIsLoading(false)\r\n                                            \r\n                                            addToast(res.data.data, {\r\n                                                appearance: 'info',\r\n                                                autoDismiss: true\r\n                                            })\r\n                                            if(res.data.data === \"Logged in Successfully\") {\r\n                                                // setUserId(res.data.users[0]._id)\r\n                                                localStorage.setItem('userId', res.data.users[0]._id)\r\n                                                // handleClose()\r\n                                                window.history.replaceState('', 'loggedIn', '/FreeBet/')\r\n                                                window.location.reload(false);\r\n                                            }}\r\n                                            }, 3000)\r\n                                        });\r\n                                    }\r\n                                    }}\r\n                                >\r\n                                {isLoading?<img src={Spinner} width=\"25\" height=\"25\" alt=\"loading\" className=\"mr-2\"></img>: <></>}\r\n                                  Login</button>\r\n                            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                            <a className=\"text-info nav-link \" style={{\"cursor\": \"pointer\"}} onClick={() => {\r\n                                setRegister(true);\r\n                                setUsername('')\r\n                                setEmail('')\r\n                                setPassword('')\r\n                                setConfirmPassword('')\r\n                            }}>Create New Account</a>\r\n                        </div>\r\n                    </>\r\n                    }\r\n                        {/* <label className=\"h5\">Username</label><br></br>\r\n                        <input \r\n                            className=\"my-2 rounded borderless\"\r\n                            value={username}\r\n                            onChange={event => setUsername(event.target.value)}></input><br></br>\r\n                        <label className='h5'>Password</label><br></br>\r\n                        <input \r\n                            className=\"my-2 rounded borderless\"\r\n                            value={password}\r\n                            onChange={event => setPassword(event.target.value)}></input><br></br>\r\n                        <div className=\"text-center pt-3\">\r\n                            {register \r\n                            ? \r\n                            <button \r\n                                className=\"btn btn-lg btn-info m-auto mb-2\"\r\n                                onClick={() => {\r\n                                    if(handleValidation()) {\r\n                                        registerUser(registerData).then(res => {\r\n                                            // alert(res)\r\n                                            addToast(res, {\r\n                                                appearance: 'info',\r\n                                                autoDismiss: true\r\n                                            })\r\n                                        });\r\n                                        setRegister(false);\r\n                                    }                                    \r\n                                }}\r\n                                 >Register</button>\r\n                            : \r\n                            <button \r\n                                className=\"btn btn-lg btn-info m-auto mb-2\"\r\n                                onClick={() => {\r\n                                    loginUser(loginData).then(res => {\r\n                                        // console.log(res)\r\n                                        // alert(res.data.data);\r\n                                        addToast(res.data.data, {\r\n                                            appearance: 'info',\r\n                                            autoDismiss: true\r\n                                        })\r\n                                        if(res.data.data === \"Logged in Successfully\") {\r\n                                            // setUserId(res.data.users[0]._id)\r\n                                            localStorage.setItem('userId', res.data.users[0]._id)\r\n                                            // handleClose()\r\n                                            window.history.replaceState('', 'loggedIn', '/FreeBet/')\r\n                                            window.location.reload(false);\r\n                                        }\r\n                                    });\r\n                                    }}\r\n                                >Login</button>}\r\n                            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                            {/* <a className=\"text-info nav-link \" style={{\"cursor\": \"pointer\"}} onClick={() => setRegister(true)}>Create New Account</a>\r\n                        </div>  */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card my-4\" id=\"nav2\">\r\n                <div className=\"card-body\">\r\n                    <h1>nav2</h1>\r\n                    <p>Mauris placerat dolor massa, sed porttitor massa volutpat sed. Donec ac eros quam. Vestibulum non massa eu diam pulvinar sagittis suscipit at purus. In rhoncus velit sed neque vulputate, quis sollicitudin arcu egestas. Pellentesque dignissim, quam vehicula auctor lobortis, elit sapien consequat metus, ac faucibus sapien augue non neque. Vivamus sapien dolor, suscipit sed sem sed, ultrices finibus nibh. Maecenas aliquet elit id est mattis, eget eleifend ex tristique. Vivamus ac purus dignissim metus gravida ornare. Sed magna lacus, tincidunt a facilisis at, condimentum a neque. Vestibulum ornare eget sem vitae vehicula. Nam non diam a quam feugiat iaculis. Aenean luctus, lacus at iaculis laoreet, risus diam egestas mauris, at iaculis tellus mi efficitur diam. Etiam imperdiet consequat nulla. Integer molestie ipsum quis porttitor efficitur. Nulla pretium commodo massa, eu aliquam felis bibendum ac. Cras in accumsan mi, sed egestas augue.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"card my-4\" id=\"nav3\">\r\n                <div className=\"card-body\">\r\n                    <h1>nav3</h1>\r\n                    <p>Mauris placerat dolor massa, sed porttitor massa volutpat sed. Donec ac eros quam. Vestibulum non massa eu diam pulvinar sagittis suscipit at purus. In rhoncus velit sed neque vulputate, quis sollicitudin arcu egestas. Pellentesque dignissim, quam vehicula auctor lobortis, elit sapien consequat metus, ac faucibus sapien augue non neque. Vivamus sapien dolor, suscipit sed sem sed, ultrices finibus nibh. Maecenas aliquet elit id est mattis, eget eleifend ex tristique. Vivamus ac purus dignissim metus gravida ornare. Sed magna lacus, tincidunt a facilisis at, condimentum a neque. Vestibulum ornare eget sem vitae vehicula. Nam non diam a quam feugiat iaculis. Aenean luctus, lacus at iaculis laoreet, risus diam egestas mauris, at iaculis tellus mi efficitur diam. Etiam imperdiet consequat nulla. Integer molestie ipsum quis porttitor efficitur. Nulla pretium commodo massa, eu aliquam felis bibendum ac. Cras in accumsan mi, sed egestas augue.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"card my-4\" id=\"nav4\">\r\n                <div className=\"card-body\">\r\n                    <h1>nav4</h1>\r\n                    <p>Mauris placerat dolor massa, sed porttitor massa volutpat sed. Donec ac eros quam. Vestibulum non massa eu diam pulvinar sagittis suscipit at purus. In rhoncus velit sed neque vulputate, quis sollicitudin arcu egestas. Pellentesque dignissim, quam vehicula auctor lobortis, elit sapien consequat metus, ac faucibus sapien augue non neque. Vivamus sapien dolor, suscipit sed sem sed, ultrices finibus nibh. Maecenas aliquet elit id est mattis, eget eleifend ex tristique. Vivamus ac purus dignissim metus gravida ornare. Sed magna lacus, tincidunt a facilisis at, condimentum a neque. Vestibulum ornare eget sem vitae vehicula. Nam non diam a quam feugiat iaculis. Aenean luctus, lacus at iaculis laoreet, risus diam egestas mauris, at iaculis tellus mi efficitur diam. Etiam imperdiet consequat nulla. Integer molestie ipsum quis porttitor efficitur. Nulla pretium commodo massa, eu aliquam felis bibendum ac. Cras in accumsan mi, sed egestas augue.</p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","// Version 0.1.1 Perfectly working Pagination , bug fixes\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\nimport { getRollHistory , getWalletData, getMultiplyBetRollHistory} from '../Helpers/service';\r\nimport LoggedUser from '../LoggedUser/LoggedUser';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport './RollHistory.css'\r\n\r\nconst PER_PAGE = 5;\r\n\r\nfunction RollHistory() {\r\n    const [rollData, setRollData] = useState([])\r\n    const [multiplierRollData, setmultiplierRollData] = useState([])\r\n    const [wallet, setWallet] = useState('0.0')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [multiplierCurrentPage, setmultiplierCurrentPage] = useState(0)\r\n\r\n    // ##########################  handle functions #################################\r\n\r\n    const handleGetRollHistory = () => {\r\n        const userId = localStorage.getItem('userId')\r\n        getRollHistory(userId)\r\n        .then(res => {\r\n            const { data } = res;\r\n            setRollData(data.[0].rollHistory);\r\n        })\r\n    }\r\n\r\n    const handleGetmultiplierRollHistory = () => {\r\n        const userId = localStorage.getItem('userId')\r\n        getMultiplyBetRollHistory(userId)\r\n        .then(res => {\r\n            const { data } = res;\r\n            setmultiplierRollData(data.[0].MultiplyBetRollHistory)\r\n        })\r\n    }\r\n\r\n    const handleSetWallet = () => {\r\n        if(localStorage.getItem(\"userId\")) {\r\n            getWalletData(localStorage.getItem(\"userId\")).then(res => {\r\n                // console.log(res.data.wallet)\r\n                setWallet((res.data.wallet))\r\n            })\r\n        } \r\n    }\r\n\r\n    const handlePageClick = ({ selected: selectedPage }) => {\r\n        setCurrentPage(selectedPage);\r\n    }\r\n\r\n    const handlemultiplierPageClick = ({ selected: selectedPage }) => {\r\n        setmultiplierCurrentPage(selectedPage)\r\n    }\r\n\r\n    // ###################################  LIFE CYCLE FUNCTIONS ##################################\r\n    useEffect(() => {\r\n        handleSetWallet()\r\n        handleGetRollHistory()\r\n        handleGetmultiplierRollHistory()\r\n    }, [])\r\n\r\n    const offset = currentPage * PER_PAGE;\r\n    const multiplierOffset = multiplierCurrentPage * PER_PAGE;\r\n\r\n    const pageData = rollData.slice(offset, offset + PER_PAGE);\r\n    const multiplierPageData = multiplierRollData.slice(multiplierOffset, multiplierOffset + PER_PAGE);\r\n\r\n    const pageCount = Math.ceil(rollData.length / PER_PAGE);\r\n    const multiplierPageCount = Math.ceil(multiplierRollData.length / PER_PAGE)\r\n\r\n    return (\r\n        <div>\r\n            <Navbar wallet={wallet}/>\r\n            <LoggedUser />\r\n            <p className=\"display-4 text-center p-4\">Check Out your Roll History here</p>\r\n            <div className=\"mb-4\">\r\n                <h1 className=\"\">FreeBet</h1>\r\n                <table className=\"table table-bordered m-auto text-center\">\r\n                    <thead>\r\n                        <th>SNO</th>\r\n                        <th>RollValue</th>\r\n                        <th>Win/Lose</th>\r\n                        <th>Roll Takeaway</th>\r\n                        <th>Date</th>\r\n                        <th>Wallet</th>\r\n                    </thead>\r\n                    {pageData.map((item, index) => {\r\n                    return (\r\n                    <tbody>\r\n                        <th>{index+1}</th>\r\n                        <td>{item.rollValue}</td>\r\n                        {item.win === 'Win' ?\r\n                            <td className=\"text-green\">{item.win}</td>\r\n                        :\r\n                            <td className=\"text-danger\">{item.win}</td>\r\n                        }\r\n                        <td>{item.takeaway}</td>\r\n                        <td>{item.date}</td>\r\n                        <td>{item.wallet}</td>\r\n                    </tbody>)})}\r\n                </table> \r\n                <ReactPaginate previousLabel={\"prev\"} \r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={pageCount}\r\n                    marginPagesDisplayed ={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={handlePageClick}\r\n                    containerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"\">\r\n                <h1 className=\"\">Multiply Bet</h1>\r\n                <table className=\"table table-bordered m-auto text-center\">\r\n                    <thead>\r\n                        <th>SNO</th>\r\n                        <th>RollValue</th>\r\n                        <th>Betmode</th>\r\n                        <th>Multiplier</th>\r\n                        <th>Roll Option</th>\r\n                        <th>Win/Lose</th>\r\n                        <th>Win Profit</th>\r\n                        <th>Roll Takeaway</th>\r\n                        <th>Date</th>\r\n                        <th>Wallet</th>\r\n                    </thead>\r\n                    {multiplierPageData.map((item, index) => {\r\n                    return (\r\n                    <tbody>\r\n                        <th>{index+1}</th>\r\n                        <td>{item.rollValue}</td>\r\n                        <td>{item.betmode}</td>\r\n                        <td>{item.multiplier}</td>\r\n                        <td>{item.rollOption}</td>\r\n                        {item.win === 'Win' ?\r\n                            <td className=\"text-green\">{item.win}</td>\r\n                        :\r\n                            <td className=\"text-danger\">{item.win}</td>\r\n                        }\r\n                        <td>{item.winProfit}</td>\r\n                        <td>{item.takeaway}</td>\r\n                        <td>{item.date}</td>\r\n                        <td>{item.wallet}</td>\r\n                    </tbody>)})}\r\n                </table> \r\n                <ReactPaginate previousLabel={\"prev\"} \r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={multiplierPageCount}\r\n                    marginPagesDisplayed ={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={handlemultiplierPageClick}\r\n                    containerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RollHistory\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport Navbar from '../Navbar/Navbar'\r\nimport { getLotteryTickets, getWalletData, writeLottery, calcLotteryWinner, setWalletData } from '../Helpers/service';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport LoggedUser from '../LoggedUser/LoggedUser';\r\n\r\nfunction Lottery() {\r\n    const { addToast } = useToasts(); \r\n    const [wallet, setWallet] = useState('0.00')\r\n    const [tickets, setTickets] = useState(0)\r\n    const [userTickets, setUserTickets] = useState(0)\r\n    const [totalTickets, setTotalTickets] = useState(0)\r\n    const [tempWinners, setTempWinners] = useState([])\r\n    const [a, setA] = useState()\r\n    const [b, setB] = useState()\r\n\r\n    const pricePerTicket = 0.01;\r\n    const minuteSeconds = 60;\r\n    const hourSeconds = 3600;\r\n    const daySeconds = 86400;\r\n\r\n    const timerProps = {\r\n        isPlaying: true,\r\n        size: 90,\r\n        strokeWidth: 6\r\n    };\r\n    const renderTime = (dimension, time) => {\r\n        return (\r\n            <div className=\"time-wrapper\">\r\n            <div className=\"time\">{time}</div>\r\n            <div>{dimension}</div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const getTimeSeconds = (time) => (minuteSeconds - time) | 0;\r\n    const getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\r\n    const getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\r\n    const getTimeDays = (time) => (time / daySeconds) | 0;\r\n\r\n    const stratTime = Date.now() / 1000; // use UNIX timestamp in seconds\r\n    const endTime = stratTime + 60; // use UNIX timestamp in seconds\r\n\r\n    const remainingTime = endTime - stratTime;\r\n    const days = Math.ceil(remainingTime / daySeconds);\r\n    const daysDuration = days * daySeconds;\r\n\r\n    const handleSetWallet = () => {\r\n        if(localStorage.getItem(\"userId\")) {\r\n            getWalletData(localStorage.getItem(\"userId\")).then(res => {\r\n                // console.log(res.data.wallet)\r\n                setWallet((res.data.wallet))\r\n            })\r\n        } \r\n    }\r\n\r\n    const handleBuyTickets = () => {\r\n        console.log(Math.ceil(Number(tickets)))\r\n        if(Math.ceil(Number(tickets)) <= 0) {\r\n            addToast(\"Number of Tickets can't be Zero\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n        }\r\n        else if(Math.ceil(Number(tickets)) * pricePerTicket > wallet) {\r\n            addToast(\"You don't enough money to buy the lottery tickets\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n        }\r\n        else if(isNaN(Math.ceil(Number(tickets)))) {\r\n            addToast(\"Number of Tickets should be a Number. Makes sense right?\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n        } \r\n        else {\r\n            setWalletData(localStorage.getItem(\"userId\"), (wallet - tickets*pricePerTicket).toFixed(2))\r\n            writeLottery(Math.ceil(Number(tickets)), localStorage.getItem(\"userId\"))\r\n        }\r\n        setTickets(0)\r\n    }\r\n\r\n    const handleGetLotteryTickets = () => {\r\n        if(localStorage.getItem(\"userId\")) {\r\n            getLotteryTickets(localStorage.getItem(\"userId\"))\r\n            .then(res => {\r\n                setUserTickets(res.data.userTickets)\r\n                setTotalTickets(res.data.totalTickets)\r\n            })\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        handleSetWallet();\r\n        handleGetLotteryTickets();\r\n    })\r\n\r\n    useEffect(() => {\r\n        calcLotteryWinner()\r\n        .then(res => {\r\n            if(res.data.winners) {\r\n                setTempWinners(res.data.winners)\r\n            }\r\n        })\r\n\r\n        let interval1 = setInterval(() => {\r\n            setB(interval1)\r\n            handleGetLotteryTickets();\r\n        }, 1000)\r\n\r\n        let interval = setInterval(() => {\r\n            console.log(\"kio\")\r\n            setA(interval)\r\n            calcLotteryWinner()\r\n            .then(res => {\r\n                if(res.data.winners) {\r\n                    setTempWinners(res.data.winners)\r\n                }\r\n            })\r\n        }, 60000)\r\n        \r\n        return () => {\r\n            console.log(\"koi\")\r\n            clearInterval(a)\r\n            clearInterval(b)\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"w-100\">\r\n            <Navbar wallet={wallet} />\r\n            <LoggedUser />\r\n            <div className=\"w-100\">\r\n                <div className=\"display-4 my-4 text-center\">Check Your Chance Of Winning The Lottery </div>\r\n                {/* Count Down Timer */}\r\n                <div className=\"\">\r\n                    <h1 className=\"bg-gray py-2 pr-5 text-white text-center\">Lottery Ends in:</h1>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\"></div>\r\n                        <div className=\"col-4 d-flex\">\r\n                            <CountdownCircleTimer\r\n                                {...timerProps}\r\n                                colors={[[\"#7E2E84\"]]}\r\n                                duration={daysDuration}\r\n                                initialRemainingTime={remainingTime}\r\n                            >\r\n                                {({ elapsedTime }) =>\r\n                                renderTime(\"days\", getTimeDays(daysDuration - elapsedTime))\r\n                                }\r\n                            </CountdownCircleTimer>\r\n                            <CountdownCircleTimer\r\n                                {...timerProps}\r\n                                colors={[[\"#D14081\"]]}\r\n                                duration={daySeconds}\r\n                                initialRemainingTime={remainingTime % daySeconds}\r\n                                onComplete={(totalElapsedTime) => [\r\n                                remainingTime - totalElapsedTime > hourSeconds\r\n                                ]}\r\n                            >\r\n                                {({ elapsedTime }) =>\r\n                                renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime))\r\n                                }\r\n                            </CountdownCircleTimer>\r\n                            <CountdownCircleTimer\r\n                                {...timerProps}\r\n                                colors={[[\"#EF798A\"]]}\r\n                                duration={hourSeconds}\r\n                                initialRemainingTime={remainingTime % hourSeconds}\r\n                                onComplete={(totalElapsedTime) => [\r\n                                remainingTime - totalElapsedTime > minuteSeconds\r\n                                ]}\r\n                            >\r\n                                {({ elapsedTime }) =>\r\n                                renderTime(\"minutes\", getTimeMinutes(hourSeconds - elapsedTime))\r\n                                }\r\n                            </CountdownCircleTimer>\r\n                            <CountdownCircleTimer\r\n                                {...timerProps}\r\n                                colors={[[\"#218380\"]]}\r\n                                duration={minuteSeconds}\r\n                                initialRemainingTime={remainingTime % minuteSeconds}\r\n                                onComplete={(totalElapsedTime) => [\r\n                                remainingTime - totalElapsedTime > 0\r\n                                ]}\r\n                            >\r\n                                {({ elapsedTime }) =>\r\n                                renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n                                }\r\n                            </CountdownCircleTimer>\r\n                        </div>\r\n                        <div className=\"col-4\"></div>\r\n                    </div>\r\n                </div>\r\n                {/* Buy Tickets */}\r\n                <div className=\"w-50 card card-body mx-auto my-4 pt-5 pl-5 pr-5 pb-3 bg-gray text-white\">\r\n                    <h2 className=\"text-center mb-4\">Buy Your Tickets Here</h2>\r\n                    <div>\r\n                        <label className=\"h5 mb-3\">Win Probability</label>\r\n                        <label className=\"float-right mr-4 h5\"><span className=\"text-gold\">{((userTickets/totalTickets)*100).toFixed(2)}%</span></label><br></br>\r\n                        <label className=\"h5 mb-3\">Your Tickets</label>\r\n                        {/* <button className=\"btn btn-info float-right\" style={{\"margin\": \"-5px 0 0 5px\"}} onClick={() => {handleGetLotteryTickets()}}>&#x21bb;</button> */}\r\n                        <label className=\"float-right mr-4 h5\">{userTickets}</label><br></br>\r\n                        <label className=\"h5 mb-3\">Price Per Ticket</label>\r\n                        <label className=\"float-right mr-4 h5\">{pricePerTicket}</label><br></br>\r\n                        <label className=\"h5 mb-3\">Buy Tickets (No.)</label>\r\n                        <input className=\"rounded borderless float-right\" value={tickets} onChange={event => {setTickets(event.target.value)}}></input><br></br>\r\n                        <div className=\"text-center mt-3\"><button className=\"btn btn-lg btn-info\" onClick={() => {handleBuyTickets();}}>Buy</button></div>\r\n                    </div>\r\n                </div>\r\n                {/* Temporary Winners */}\r\n                <h1 className=\"text-center\"> Winners List </h1>\r\n                <div className=\"text-center\">* Updates Every 5 Minutes</div>\r\n                <table className=\"table table-bordered w-50 my-4 mx-auto\">\r\n                    <thead>\r\n                        <td className=\"text-center\" style={{\"width\":\"20%\"}}>Win Position</td>\r\n                        <td className=\"text-center\" style={{\"width\":\"60%\"}}>Winners</td>\r\n                        <td className=\"text-center\" style={{\"width\":\"20%\"}}>Prize money</td>\r\n                    </thead>\r\n                    \r\n                    {tempWinners.length === 0\r\n                    ?\r\n                    <tbody>\r\n                        <td colSpan=\"3\" className=\"p-4\"><h1>Winner List Not Available</h1></td>\r\n                    </tbody>\r\n                    :\r\n                    tempWinners.map((item, index) => {\r\n                        return(\r\n                            <tbody className=\"text-center\">\r\n                                <td>{index+1}</td>\r\n                                <td>{item}</td>\r\n                                <td></td>\r\n                            </tbody>\r\n                        )})   \r\n                    }\r\n                </table>\r\n                {/*Previous Lottery Winners */}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lottery\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react'\r\n// import ReactDOM from 'react-dom'\r\nimport logo from '../../logo.svg';\r\n\r\nimport { getWalletData, setWalletData } from '../Helpers/service'\r\nimport Navbar from '../Navbar/Navbar'\r\nimport './FakeDoor.scss'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport LoggedUser from '../LoggedUser/LoggedUser'\r\n\r\nfunction FakeDoor() {\r\n    const { addToast } = useToasts()\r\n    const [wallet, setWallet] = useState(0.00)\r\n    const [betAmount, setBetAmount] = useState()\r\n    const [diffLvl, setDiffLvl] = useState(3) \r\n    const [result, setResult] = useState([0,0,0]) \r\n    const [index, setIndex] = useState()\r\n    const [className, setClassName] = useState(\"door\")    \r\n    // const [prizeIndex, setPrizeIndex] = useState()\r\n    // const [margin, setmargin] = useState(0)\r\n\r\n    const arr3 = ['001', '010', '100']\r\n    const arr4 = ['0001', '0010', '0100', '1000']\r\n    const arr5 = ['00001', '00010', '00100', '01000', '10000']\r\n    const arr6 = ['000001', '000010', '000100', '001000', '010000', '100000']\r\n\r\n\r\n    const handleSetWallet = () => {\r\n        if(localStorage.getItem(\"userId\")) {\r\n            getWalletData(localStorage.getItem(\"userId\")).then(res => {\r\n                // console.log(res.data.wallet)\r\n                setWallet((res.data.wallet))\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleFakeDoor = (ind) => {\r\n        // console.log(document.getElementById(index).textContent)\r\n        if(className !== \"door doorOpen\") {\r\n            setIndex(ind)\r\n            if(diffLvl === 3) {\r\n                let index = Math.floor(Math.random() * 3)\r\n                let list = arr3[index].split('')\r\n                // console.log(list)\r\n                setResult(list)\r\n            }\r\n            else if(diffLvl === 4) {\r\n                let index = Math.floor(Math.random() * 4)\r\n                let list = arr4[index].split('')\r\n                // console.log(list)\r\n                setResult(list)\r\n            }\r\n            else if(diffLvl === 5) {\r\n                let index = Math.floor(Math.random() * 5)\r\n                let list = arr5[index].split('')\r\n                // console.log(list)\r\n                setResult(list)\r\n            }\r\n            else if(diffLvl === 6) {\r\n                let index = Math.floor(Math.random() * 6)\r\n                let list = arr6[index].split('')\r\n                // console.log(list)\r\n                setResult(list)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleValidation = () => {\r\n        if(!betAmount) {\r\n            addToast(\"You need to place a Bet Amount first !\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n            return false\r\n        }\r\n        if(betAmount > 20) {\r\n            addToast(\"BetAmount can't be greater than 20\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n            return false\r\n        }\r\n        if(betAmount < 0.001) {\r\n            addToast(\"Minimum BetAmount is 0.001\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n            return false\r\n        }\r\n        if(wallet < (betAmount * diffLvl)) {\r\n            addToast(\"You don't have enough money to place the bet\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        handleSetWallet()\r\n    })\r\n\r\n    useEffect(() => {\r\n        // console.log(result[index], result, index)\r\n        // console.log(result[index] === '1')\r\n        // console.log(result, [0, 0, 0, 0, 0] , result.join('') === [0, 0, 0, 0, 0].join(''))\r\n    \r\n        if(result[index] === '1') {\r\n            // setPrizeIndex(index)\r\n            addToast(`You have Found the Real Door!! +${diffLvl * betAmount} added to wallet`, {\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n            })\r\n            // console.log((Number(wallet) + Number(0.01*diffLvl)).toFixed(2))\r\n            setWalletData(localStorage.getItem(\"userId\"),(Number(wallet) + Number(betAmount*diffLvl)).toFixed(2))\r\n        }\r\n        else {\r\n            if(result.join('') !== [0, 0, 0].join('') && result.join('') !== [0, 0, 0, 0].join('') && result.join('') !== [0, 0, 0, 0, 0].join('') && result.join('') !== [0, 0, 0, 0, 0, 0].join('')) {\r\n                addToast(`Uh Oh, You have opened the fake door!! -${diffLvl * betAmount} reduced from wallet`, {\r\n                    appearance: 'error',\r\n                    autoDismiss: true\r\n                })\r\n                // console.log((wallet + (0.01*diffLvl)))\r\n                setWalletData(localStorage.getItem(\"userId\"),(Number(wallet) - Number(betAmount*diffLvl)).toFixed(2))\r\n            }    \r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [result, index])\r\n\r\n    function toggleDoor() {\r\n        // console.log(\"ji\")\r\n        // let list = document.getElementsByClassName(\"door\");\r\n        // ReactDOM.findDOMNode(list).classList.toggle(\"doorOpen\");\r\n        // console.log(\"hi\")\r\n        if(className === \"door\") {\r\n            // console.log(\"ji\")\r\n            setClassName(\"door doorOpen\")\r\n        }\r\n        else {\r\n            // console.log(\"ki\")\r\n            setClassName(\"door\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-brown\">\r\n            <Navbar wallet={wallet}/>\r\n            <LoggedUser />\r\n            <div className=\"display-4 text-center my-4\">Welcome to Fake Door</div>\r\n            <h1 className=\"text-center mb-4 pb-5\">Everything you see around here is not <div className=\"text-danger text-center\"><span className=\"real\"></span></div></h1>\r\n            <div className=\"row\">\r\n                {result.map((li, index) => {\r\n                    return(\r\n                        <div className=\"col-4 text-center my-4\">\r\n                            {/* <div className=\"lid\"></div> */}\r\n                            {/* <div className=\"p-3 border\" id={index} onClick={() => {handleFakeDoor(index);toggleDoor()}}>{li}</div> */}\r\n                            <div class=\"backDoor\">\r\n                                <div className={className} id={index} onClick={() => {\r\n                                    if(handleValidation()) {\r\n                                        handleFakeDoor(index);\r\n                                        toggleDoor();\r\n                                    }\r\n                                    }}>\r\n                                </div>\r\n                                {/* {console.log(li)} */}\r\n                                {li === '1'\r\n                                ? \r\n                                <>\r\n                                    <img src={logo} alt=\"prize\" />\r\n                                </>\r\n                                : \r\n                                <></>}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <h3 className=\"text-center mt-4 mb-2\">Difficulty Level</h3>\r\n            <div className=\"d-inline-block text-center mb-4 w-100\">\r\n                <button className=\"btn btn-info mx-2\" onClick={() => {setDiffLvl(3);setResult([0,0,0])}}>3</button>\r\n                <button className=\"btn btn-info mx-2\" onClick={() => {setDiffLvl(4);setResult([0,0,0,0])}}>4</button>\r\n                <button className=\"btn btn-info mx-2\" onClick={() => {setDiffLvl(5);setResult([0,0,0,0,0])}}>5</button>\r\n                <button className=\"btn btn-info mx-2\" onClick={() => {setDiffLvl(6);setResult([0,0,0,0,0,0])}}>6</button>\r\n            </div>\r\n            <div className=\"text-center my-4\">\r\n                <label className=\"h5\">Bet Amount</label>\r\n                <input \r\n                    className=\"rounded borderless mx-3\"\r\n                    value={betAmount}\r\n                    onChange={event => setBetAmount(event.target.value)}></input>\r\n            </div>\r\n            <h3 className=\"text-center mb-3\">Higher the Difficulty Level, Higher the Profit You Earn</h3>\r\n         {/* <div className=\"text-center m-auto\">\r\n<div class=\"hexagon one\">\r\n<div class=\"text\">\r\n<h1>89%</h1>\r\n<p>My Overall Score</p>\r\n</div>\r\n</div>\r\n<div class=\"hexagon two\">\r\n<div class=\"text\">\r\n<h1>89%</h1>\r\n<p>My Overall Score</p>\r\n</div>\r\n</div>\r\n<div class=\"hexagon three\">\r\n<div class=\"text\">\r\n<h1>89%</h1>\r\n<p>My Overall Score</p>\r\n</div>\r\n</div><br></br>\r\n<div class=\"hexagon four\">\r\n<div class=\"text\">\r\n<h1>89%</h1>\r\n<p>My Overall Score</p>\r\n</div>\r\n</div>\r\n<div class=\"hexagon five\">\r\n<div class=\"text\">\r\n<h1>89%</h1>\r\n<p>My Overall Score</p>\r\n</div>\r\n</div>\r\n<div class=\"hexagon six\">\r\n<div class=\"text\">\r\n<h1>89%</h1>\r\n<p>My Overall Score</p>\r\n</div>\r\n</div>\r\n</div>    */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FakeDoor","import React from 'react'\r\n\r\nfunction PathError() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center mt-4\">It Seems You are Lost.</h1>\r\n            <div className=\"text-center\">\r\n            <a href=\"/FreeBet/#/\">Get me Back to Home</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PathError\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nfunction VerifyRoll() {\r\n    let params = useParams()\r\n\r\n    console.log(params.serverSeed, \"hi\")\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerifyRoll\r\n","// import logo from './logo.svg';\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { ToastProvider } from 'react-toast-notifications'\n\nimport './App.css';\n\nimport Home from './components/Home/Home';\nimport MultiplyBet from './components/MultiplyBet/MultiplyBet';\nimport Login from './components/Login/Login';\nimport RollHistory from './components/RollHistory/RollHistory';\nimport Lottery from './components/Lottery/Lottery';\nimport FakeDoor from './components/FakeDoor/FakeDoor';\nimport PathError from './components/PathError/PathError';\nimport VerifyRoll from './components/VerifyRoll/VerifyRoll';\n\n// const wallet = '0.00';\n\nconst App = () => {\n  // const [wallet, setWallet] = useState(0.00)\n  // console.log(\"wallet\", wallet)\n\n  return(\n    <ToastProvider>\n      <Switch>\n        {/* <Route path='/' component={() => <Home wallet={wallet} setWallet={wallet => setWallet(wallet)}/>} exact /> */}\n        <Route path='/' component={Home} exact/>\n        <Route path='/multiplybet' component={MultiplyBet} />\n        <Route path='/rollHistory' component={RollHistory} />\n        <Route path='/login' component={Login} />\n        <Route path='/lottery' component={Lottery} />\n        <Route path='/fakedoor' component={FakeDoor} />\n        <Route path={`/VerifyRoll/:serverSeed/:clientSeed`} component={VerifyRoll} />\n        <Route component={PathError} />\n      </Switch>\n    </ToastProvider>\n  )\n}\n\n\nexport default App;\n\n// Previous build\n// function App() {\n  //   return (\n  //     <div className=\"App\">\n  //       <header className=\"App-header\">\n  //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //         <p>\n  //           Edit <code>src/App.js</code> and save to reload.\n  //         </p>\n  //         <a\n  //           className=\"App-link\"\n  //           href=\"https://reactjs.org\"\n  //           target=\"_blank\"\n  //           rel=\"noopener noreferrer\"\n  //         >\n  //           Learn React\n  //         </a>\n  //       </header>\n  //     </div>\n  //   );\n  // }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </HashRouter>\n    {/* <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}