{"version":3,"sources":["components/Home/24-money.gif","components/Navbar/Navbar.jsx","components/Helpers/service.js","components/Home/Home.jsx","components/MultiplyBet/MultiplyBet.jsx","components/Login/Login.jsx","components/RollHistory/RollHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","wallet","addToast","useToasts","useState","isNavCollapsed","setIsNavCollapsed","setUserId","requireAuth","localStorage","getItem","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","id","style","removeItem","window","history","replaceState","appearance","autoDismiss","roll","a","response","axios","get","then","res","data","registerData","post","getWalletData","userId","setWalletData","rollHistory","pushMultiplyBetRollHistory","daySeconds","Home","faucet","setFaucet","disable","setDisable","takeaway","setTakeAway","win","setWin","setWallet","setHistory","rollValue","date","Date","toLocaleDateString","stratTime","now","remainingTime","handleDisable","Math","ceil","stopHr","stopTime","currTime","time","getMinutes","hr","getHours","setItem","setInterval","Number","clearInterval","handleSetRollHistory","pushRollHistory","useEffect","loggedInUser","w","toFixed","handleTakeaway","src","transaction","width","height","alt","scope","pushState","location","reload","disabled","x","MultiplyBet","setRollValue","betmode","setBetmode","betAmount","setBetAmount","betOdds","setBetOdds","winChance","setWinChance","winHigh","setWinHigh","winLow","setWinLow","winProfit","setWinProfit","takeAwayAmount","setTakeAwayAmount","isAutoBetActive","setIsAutoBetActive","isHi","setIsHi","noOfRolls","setNoOfRolls","max_bet","setMax_Bet","rollmode","setrollmode","onWin","setOnWin","profit","setProfit","loss","setLoss","stopProfit","setStopProfit","stopLoss","setStopLoss","increaseBetWin","setIncreaseBetWin","increaseBetLose","setIncreaseBetLose","changeBetOddWin","setChangeBetOddWin","changeBetOddLose","setChangeBetOddLose","basebet","setBaseBet","setA","rollOption","multiplier","handletakeAwayAmount","value","tk","abs","console","log","handleRoll","handleRadio","e","target","name","handleValidation","y","floor","handleBetOdds","setTimeout","onChange","event","defaultChecked","toString","handleAutoBet","required","Login","username","setUsername","password","setPassword","register","setRegister","loginData","handleScroll","divId","document","getElementById","scrollIntoView","behavior","block","registerUser","loginUser","users","_id","RollHistory","rollData","setRollData","multiplierRollData","setmultiplierRollData","currentPage","setCurrentPage","multiplierCurrentPage","setmultiplierCurrentPage","handleGetRollHistory","getRollHistory","handleGetmultiplierRollHistory","getMultiplyBetRollHistory","MultiplyBetRollHistory","offset","multiplierOffset","pageData","slice","multiplierPageData","pageCount","length","multiplierPageCount","map","item","index","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","activeClassName","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process"],"mappings":"8RAAe,G,YAAA,IAA0B,sC,OCiJ1BA,MA1If,YAA2B,IAAVC,EAAS,EAATA,OACLC,EAAaC,sBAAbD,SADc,EAEsBE,oBAAS,GAF/B,mBAEfC,EAFe,KAECC,EAFD,OAUMF,qBAVN,mBAUPG,GAVO,WAqChBC,EAAc,WAGhB,QAFqBC,aAAaC,QAAQ,WAU9C,OACI,8BACI,sBAAKC,UAAU,wDAAf,UACI,mBAAGA,UAAU,4CAA4CC,KAAK,WAA9D,SAEI,sBAAMD,UAAU,GAAhB,0BAEJ,wBAAQA,UAAU,gCAAgCE,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAgBZ,EAA0B,QAAT,OAAkBa,aAAW,oBAAoBC,QAnD5N,kBAAMb,GAAmBD,IAmDvC,SACI,sBAAMM,UAAU,0BAGpB,sBAAKA,UAAS,UAAsB,WAAtB,oBAAiES,GAAG,mBAAlF,UACKZ,IAED,mBAAGG,UAAU,qBAAqBC,KAAK,qBAAvC,sBAGA,mBAAGD,UAAU,qBAAqBC,KAAK,mBAAvC,sBAQCJ,IAED,mBAAGG,UAAU,qBAAqBC,KAAK,yBAAvC,0BAGA,mBAAGD,UAAU,qBAAqBC,KAAK,mBAAvC,0BAOCJ,IAED,mBAAGI,KAAK,qBAAqBD,UAAU,qBAAvC,qBAEA,mBAAGA,UAAU,qBAAqBC,KAAK,mBAAvC,qBAQCJ,IACC,mBAAGG,UAAU,qBAAqBC,KAAK,yBAAvC,0BACA,mBAAGD,UAAU,qBAAqBC,KAAK,mBAAvC,0BACDJ,IAEC,mBAAGG,UAAU,qBAAqBU,MAAO,CAAC,OAAU,WAAYF,QAAS,WAvEvFZ,IAGAE,aAAaa,WAAW,UAwERC,OAAOC,QAAQC,aAAa,GAAG,YAAY,KAC3CvB,EAAS,4BAA6B,CAClCwB,WAAY,OACZC,aAAa,KAPnB,oBAWA,mBAAGhB,UAAU,qBAAqBC,KAAK,mBAAvC,mBAODJ,IAED,oBAAGI,KAAK,oBAAoBD,UAAU,qBAAtC,cAA6DV,KAG7D,mBAAGU,UAAU,qBAAqBC,KAAK,mBAAvC,4B,yCClIb,SAAegB,IAAtB,+B,4CAAO,4BAAAC,EAAA,6DAMGC,EAAWC,IAAMC,IAAI,iDAEVC,MAAK,SAAAC,GACF,OAAOA,EAAIC,KAAKA,QATjC,SAWUL,EAXV,oF,kEAcA,WAA4BM,GAA5B,eAAAP,EAAA,sEACoBE,IAAMM,KAAK,oDAAqDD,GADpF,cACGN,EADH,yBAGIA,EAASK,MAHb,4C,kEAMA,WAAyBA,GAAzB,eAAAN,EAAA,sEACoBE,IAAMM,KAAK,iDAAkDF,GADjF,cACGL,EADH,yBAIIA,GAJJ,4C,sBAOA,SAAeQ,EAAtB,kC,4CAAO,WAA6BC,GAA7B,iBAAAV,EAAA,6DACG5B,EAAS,CAACmB,GAAImB,GADjB,SAEoBR,IAAMM,KAAK,kDAAmDpC,GAFlF,cAEG6B,EAFH,yBAMIA,GANJ,4C,sBASA,SAAeU,EAAtB,oC,4CAAO,WAA6BD,EAAQtC,GAArC,iBAAA4B,EAAA,6DACGM,EAAO,CACTf,GAAImB,EACJtC,OAAQA,GAHT,SAKoB8B,IAAMM,KAAK,qDAAsDF,GALrF,cAKGL,EALH,yBAQIA,GARJ,4C,kEAWA,WAA+BS,EAAQE,GAAvC,eAAAZ,EAAA,6DACGM,EAAO,CACTf,GAAImB,EACJE,YAAaA,GAHd,SAKGV,IAAMM,KAAK,2DAA4DF,GAL1E,4C,kEAUA,WAA8BI,GAA9B,iBAAAV,EAAA,6DACGM,EAAO,CACTf,GAAImB,GAFL,SAIoBR,IAAMM,KAAK,0DAA2DF,GAJ1F,cAIGL,EAJH,yBAOIA,GAPJ,4C,sBAWA,SAAeY,EAAtB,oC,4CAAO,WAA0CH,EAAQE,GAAlD,eAAAZ,EAAA,6DACGM,EAAO,CACTf,GAAImB,EACJE,YAAaA,GAHd,SAKGV,IAAMM,KAAK,sEAAuEF,GALrF,4C,kEAUA,WAAyCI,GAAzC,iBAAAV,EAAA,6DACGM,EAAO,CACTf,GAAImB,GAFL,SAKoBR,IAAMM,KAAK,qEAAsEF,GALrG,cAKGL,EALH,yBAQIA,GARJ,4C,sBCpEP,IAEMa,EAAa,MAkZJC,MA7Xf,WAAiB,IACL1C,EAAaC,sBAAbD,SADI,EAEgBE,mBAAS,KAFzB,mBAELyC,EAFK,KAEGC,EAFH,OAGkB1C,oBAAS,GAH3B,mBAGL2C,EAHK,KAGIC,EAHJ,OAMgB5C,qBANhB,mBAMLmC,EANK,KAMGhC,EANH,OASoBH,mBAAS,GAT7B,mBASL6C,EATK,KASKC,EATL,OAUU9C,oBAAS,GAVnB,mBAUL+C,EAVK,KAUAC,EAVA,OAWgBhD,mBAAS,QAXzB,mBAWLH,EAXK,KAWGoD,EAXH,OAYkBjD,oBAAS,GAZ3B,mBAYLoB,EAZK,KAYI8B,EAZJ,KAwBNb,EAAc,CAChBc,UAAWV,EACXM,IAAKA,EAAM,MAAQ,OACnBF,SAAUA,EACVO,MAAM,IAAIC,MAAOC,qBACjBzD,OAAQA,GAON0D,EAAYF,KAAKG,MAAQ,IAGzBC,EAFUF,EAAY,OAEIA,EAY1BG,GAXOC,KAAKC,KAAKH,EAAgBlB,GAWjB,WAClB,IAEIsB,EACAC,EAUAC,EAbAC,GAAO,IAAIX,MAAOY,aAClBC,GAAK,IAAIb,MAAOc,WAGjB9D,aAAaC,QAAQ,YACpBwD,EAAWzD,aAAaC,QAAQ,aAGhCuD,EAASK,GADTJ,EAAWE,EAAO,IAEH,KAAIF,GAAsB,IACzCzD,aAAa+D,QAAQ,WAAYN,GACjCzD,aAAa+D,QAAQ,SAAUP,IAInC,IAAIpC,EAAI4C,aAAY,WAChBzB,GAAW,GACXmB,GAAW,IAAIV,MAAOY,cACb,IAAIZ,MAAOc,WAERG,OAAOT,IAAWE,IAAaO,OAAOR,IAC9ClB,GAAW,GACXvC,aAAaa,WAAW,UACxBb,aAAaa,WAAW,YACxBqD,cAAc9C,KAEVsC,EAAWO,OAAOR,IAAaC,IAAaO,OAAOR,MAEvDlB,GAAW,GACXvC,aAAaa,WAAW,YACxBb,aAAaa,WAAW,UACxBqD,cAAc9C,MAEnB,OAkED+C,EAAuB,WACX,MAAX/B,GD1IJ,SAAP,6BCgJYgC,CAAgBtC,EAAQE,IA6ChC,OA5BAqC,qBAAU,WACN,IAAMC,EAAetE,aAAaC,QAAQ,UACtCqE,GAEJxE,EAAUwE,GAIPtE,aAAaC,QAAQ,cACpBsC,GAAW,GACXc,OAEL,IAEHgB,qBAAU,WA9CHrE,aAAaC,QAAQ,WACpB4B,EAAc7B,aAAaC,QAAQ,WAAWuB,MAAK,SAAAC,GAE/CmB,EAAWnB,EAAIC,KAAKlC,cA+ChC6E,qBAAU,YAzGa,WACnB,GAAIjC,GAAU,MAAQA,GAAU,KAAM,CAClC,IAAImC,EAAIN,OAAOzE,GAAU,GACzBuC,EAAcD,EAAQyC,EAAEC,QAAQ,IAChC5B,EAAU2B,EAAEC,QAAQ,IACpB3B,GAAY9B,GACZ0B,EAAY,IAEZE,GAAO,QAKJ,GAAIP,EAAS,MAAQA,GAAU,KAAM,CACxC,IAAImC,EAAIN,OAAOzE,GAAU,IACzBuC,EAAcD,EAAQyC,EAAEC,QAAQ,IAChC5B,EAAU2B,EAAEC,QAAQ,IACpB/B,EAAY,KACZI,GAAY9B,GAEZ4B,GAAO,GACPlD,EAAS,4CAA6C,CAClDwB,WAAY,UACZC,aAAa,SAEd,GAAIkB,EAAS,KAAQA,GAAU,EAAG,CACrC,IAAImC,EAAIN,OAAOzE,GAAU,IACzBuC,EAAcD,EAAQyC,EAAEC,QAAQ,IAChC5B,EAAU2B,EAAEC,QAAQ,IACpB/B,EAAY,KACZI,GAAY9B,GAMZ4B,GAAO,GACPlD,EAAS,4CAA6C,CAClDwB,WAAY,UACZC,aAAa,SAGH,MAAXkB,IACCO,GAAO,GACPE,GAAY9B,GACZ0B,EAAY,GACZhD,EAAS,oDAAqD,CAC1DwB,WAAY,UACZC,aAAa,KA0DzBuD,KAED,CAACrC,IAEJiC,qBAAU,WACNF,MAED,CAACpD,IAGA,gCACI,cAAC,EAAD,CAAQvB,OAAQA,IAChB,sBAAKU,UAAU,UAAf,UACI,qBAAKA,UAAU,wBAAf,SAAuC,qBAAKwE,IAAKC,EAAaC,MAAM,MAAMC,OAAO,MAAMC,IAAI,kBAC3F,sBAAK5E,UAAU,QAAf,UACI,sBAAMA,UAAU,YAAhB,8CACA,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,wBAAQA,UAAU,2BAAlB,qBACA,wBAAQA,UAAU,2BAAlB,yBAEJ,qBAAKA,UAAU,+BAK3B,qBAAKA,UAAU,qCAAf,SACI,sBAAMA,UAAU,YAAhB,mDAEJ,sBAAKA,UAAU,kBAAf,UACI,wBAAOA,UAAU,mCAAjB,UACI,gCACI,+BACI,oBAAI6E,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,wBAGR,kCACI,+BACI,oBAAIA,MAAM,MAAV,uBACA,2CAEJ,+BACI,oBAAIA,MAAM,MAAV,uBACA,2CAEJ,+BACI,oBAAIA,MAAM,MAAV,oBACA,iDAIZ,sBAAK7E,UAAU,qCAAf,UACI,qBAAKA,UAAU,mBAAf,SAAkC,sBAAMA,UAAU,yCAAhB,SAA0DkC,MAAoB,uBAC/GE,EACG,wBACApC,UAAU,sCACVQ,QAAS,WACFoB,IAKChB,OAAOC,QAAQiE,UAAU,GAAI,QAAS,mBACtClE,OAAOmE,SAASC,QAAO,KAO/BC,UAAQ,EAhBR,kBAmBA,wBACAjF,UAAU,6BACVQ,QAAS,WACFoB,GAnOvBX,IACCK,MAAK,SAAA4D,GACF/C,EAAU+C,MAEd/B,MAsOwBvC,OAAOC,QAAQiE,UAAU,GAAI,QAAS,mBACtClE,OAAOmE,SAASC,QAAO,KAX/B,4B,MCsYTG,MA9pBf,WAAuB,MAGe1F,mBAAS,KAHxB,mBAGZmD,EAHY,KAGDwC,EAHC,OAIW3F,mBAAS,UAJpB,mBAIZ4F,EAJY,KAIHC,EAJG,OAKe7F,mBAAS,IALxB,mBAKZ8F,EALY,KAKDC,EALC,OAMW/F,mBAAS,KANpB,mBAMZgG,EANY,KAMHC,EANG,OAOejG,mBAAS,QAPxB,mBAOZkG,EAPY,KAODC,EAPC,OAQWnG,mBAAS,QARpB,mBAQZoG,EARY,KAQHC,EARG,OASSrG,mBAAS,QATlB,mBASZsG,EATY,KASJC,EATI,OAUevG,mBAAS,IAVxB,mBAUZwG,EAVY,KAUDC,EAVC,OAWyBzG,mBAAS,GAXlC,mBAWZ0G,EAXY,KAWIC,EAXJ,OAYG3G,mBAAS,IAZZ,mBAYZ+C,EAZY,KAYPC,EAZO,OAe2BhD,oBAAS,GAfpC,mBAeZ4G,EAfY,KAeKC,EAfL,OAgBK7G,mBAAS,GAhBd,oBAgBZ8G,GAhBY,MAgBNC,GAhBM,SAiBe/G,mBAAS,QAjBxB,qBAiBZgH,GAjBY,MAiBDC,GAjBC,SAkBWjH,mBAAS,WAlBpB,qBAkBZkH,GAlBY,MAkBHC,GAlBG,SAmBanH,mBAAS,MAnBtB,qBAmBZoH,GAnBY,MAmBFC,GAnBE,SAoBOrH,oBAAS,GApBhB,qBAoBZsH,GApBY,MAoBLC,GApBK,SAqBSvH,mBAAS,GArBlB,qBAqBZwH,GArBY,MAqBJC,GArBI,SAsBKzH,mBAAS,GAtBd,qBAsBZ0H,GAtBY,MAsBNC,GAtBM,SAuBiB3H,mBAAS,OAvB1B,qBAuBZ4H,GAvBY,MAuBAC,GAvBA,SAwBa7H,mBAAS,OAxBtB,qBAwBZ8H,GAxBY,MAwBFC,GAxBE,SAyByB/H,mBAAS,GAzBlC,qBAyBZgI,GAzBY,MAyBIC,GAzBJ,SA0B2BjI,mBAAS,GA1BpC,qBA0BZkI,GA1BY,MA0BKC,GA1BL,SA2B2BnI,mBAASgG,GA3BpC,qBA2BZoC,GA3BY,MA2BKC,GA3BL,SA4B6BrI,mBAASgG,GA5BtC,qBA4BZsC,GA5BY,MA4BMC,GA5BN,SA6BWvI,mBAAS,KA7BpB,qBA6BZwI,GA7BY,MA6BHC,GA7BG,SA+BDzI,qBA/BC,qBA+BZyB,GA/BY,MA+BTiH,GA/BS,MAoCX5I,GAAaC,sBAAbD,SApCW,GAqCSE,qBArCT,qBAqCZmC,GArCY,MAqCJhC,GArCI,SAsCSH,mBAAS,OAtClB,qBAsCZH,GAtCY,MAsCJoD,GAtCI,SAuCWjD,oBAAS,GAvCpB,qBAuCZoB,GAvCY,MAuCH8B,GAvCG,MAwCbb,GAAc,CAChBc,UAAWA,EACXJ,IAAKA,EAAM,MAAQ,OACnB4F,WAAY7B,GAAO,KAAO,KAC1BjE,SAAU6D,EACVF,UAAWzD,EAAMyD,EAAY,IAC7BoC,WAAY5C,EACZJ,QAASA,EACTxC,MAAM,IAAIC,MAAOC,qBACjBzD,OAAQA,IAKZ,SAASgJ,GAAqBC,GAC1B,GAAe,WAAZlD,GACC,GAAa,QAAVkD,EAAiB,CAChBrB,GAAUD,GAAOlD,OAAOkC,IAExB,IAAIuC,EAAKpF,KAAKqF,IAAI1E,OAAOkC,IACzBvD,IAAWqB,OAAOzE,IAAUkJ,GAAIlE,QAAQ,IACxC8B,EAAkBoC,GAElB/F,GAAO,QAEN,GAAa,SAAV8F,EAAkB,CACtBnB,GAAQD,GAAKpD,OAAOkC,IAKpB,IAAIuC,GAAMzE,OAAOkC,GACjBvD,IAAWqB,OAAOzE,IAAUkJ,GAAIlE,QAAQ,IACxC8B,EAAkBoC,GAClB/F,GAAO,SAGV,GAAe,SAAZ4C,EACJ,GAAa,QAAVkD,EAAiB,CAEhBrB,GAAUD,GAASlD,OAAOkC,IAC1BT,EAAazB,OAAOwB,GAAWxB,OAAO0D,KACtC/B,EAAWmC,IAOXa,QAAQC,IAAI5E,OAAOkC,IACnB,IAAIuC,EAAKpF,KAAKqF,IAAI1E,OAAOkC,IACzByC,QAAQC,IAAI,MAAOH,GACnB9F,IAAWqB,OAAOzE,IAAUyE,OAAOyE,IAAKlE,QAAQ,IAChD8B,EAAkBoC,GAClB/F,GAAO,QAEN,GAAa,SAAV8F,EAAkB,CAEtBnB,GAAQD,GAAKpD,OAAOkC,IACpBT,EAAazB,OAAOwB,GAAWxB,OAAO4D,KACtCjC,EAAWqC,IAKXW,QAAQC,IAAI5E,OAAOkC,IACnB,IAAIuC,GAAMzE,OAAOkC,GACjByC,QAAQC,IAAI,MAAOH,GACnB9F,IAAWqB,OAAOzE,IAAUyE,OAAOyE,IAAKlE,QAAQ,IAChD8B,EAAkBoC,GAClB/F,GAAO,IAuGnB,SAASmG,KACL3H,IACCK,MAAK,SAAA4D,GACFE,EAAaF,MAIrB,IAAM2D,GAAc,SAACC,GAAM,MACDA,EAAEC,OAAjBC,EADgB,EAChBA,KAAMT,EADU,EACVA,MACbG,QAAQC,IAAI,OAAQK,EAAM,QAAST,GACvB,YAATS,EACCpC,GAAW2B,GAEE,aAATS,GACJlC,GAAYyB,IAIdU,GAAmB,WACrB,MAAe,WAAZ5D,EACkB,IAAdE,GACChG,GAAS,wDAAyD,CAC9DwB,WAAY,OACZC,aAAa,KAEV,GAEHuE,EAAY,KAChBhG,GAAS,wCAAyC,CAC9CwB,WAAY,OACZC,aAAa,KAEV,GAEHuE,EAAY,IAChBhG,GAAS,qCAAsC,CAC3CwB,WAAY,OACZC,aAAa,KAEV,KAEHuE,EAAYjG,MAChBC,GAAS,8GAA+G,CACpHwB,WAAY,OACZC,aAAa,KAEV,GAIA,SAAZqE,EACkB,IAAdE,GACChG,GAAS,wDAAyD,CAC9DwB,WAAY,OACZC,aAAa,KAEV,GAEHuE,EAAY,KAChBhG,GAAS,wCAAyC,CAC9CwB,WAAY,OACZC,aAAa,KAEV,GAEHuE,EAAY,IAChBhG,GAAS,sCAAuC,CAC5CwB,WAAY,OACZC,aAAa,KAEV,GAEHuE,EAAYjG,IAEhBC,GAAS,8GAA+G,CACpHwB,WAAY,OACZC,aAAa,KAEV,KAEHuE,EAAY,MAEhBhG,GAAS,sCAAuC,CAC5CwB,WAAY,OACZC,aAAa,KAEV,QApCf,GAgKJ,OAzDAmD,qBAAU,YA9CY,WAClB,GAAGsB,EAAS,CACLA,EAAU,KACTC,EAAW,MACPD,EAAU,GACdC,EAAW,GACf,IAAIR,EAAI,GAAQO,EAEZyD,EAAgB,IAARzD,EAAa,IAAKF,EAAWA,EAEzCK,EAAaV,EAAEZ,QAAQ,IACvB0B,EAAU5C,KAAK+F,MAAQ,IAAFjE,IACrBY,EAAW1C,KAAK+F,MAAM,IAAMpD,IAC5BG,EAAagD,EAAE5E,QAAQ,SAMvBsB,EAAa,OACbE,EAAW,OACXE,EAAU,OACVE,EAAa,GAyBjBkD,MAGJjF,qBAAU,WACN,IAAMC,EAAetE,aAAaC,QAAQ,UACvCqE,GACCxE,GAAUwE,GAjBXtE,aAAaC,QAAQ,WACpB4B,EAAc7B,aAAaC,QAAQ,WAAWuB,MAAK,SAAAC,GAE/CmB,GAAWnB,EAAIC,KAAKlC,aAiB7B,IAEH6E,qBAAU,WAtQS,SAAZkB,IACiB,OAAbwB,GAAmBL,GAAQ,GACT,OAAbK,GAAmBL,GAAQ,GACd,cAAbK,IAA0BL,IAASD,KAE9B,MAAd3D,IACI2D,GACI3D,EAAYiD,GAEXtG,GAAS,iCAAD,OAAkCgH,GAAO,KAAM,MAAQ,CAC3DxF,WAAY,UACZC,aAAa,IAEjBsH,GAAqB,SAMrB/I,GAAS,mCAAD,OAAoCgH,GAAO,KAAM,MAAQ,CAC7DxF,WAAY,QACZC,aAAa,IAEjBsH,GAAqB,SAMtB1F,EAAYmD,GAEXxG,GAAS,iCAAD,OAAkCgH,GAAO,KAAM,MAAQ,CAC3DxF,WAAY,UACZC,aAAa,IAEjBsH,GAAqB,SAKrB/I,GAAS,mCAAD,OAAoCgH,GAAO,KAAM,MAAQ,CAC7DxF,WAAY,QACZC,aAAa,IAEjBsH,GAAqB,UASlB,YAAZ3B,IAAyBpB,GAxIjB,IA0IPhG,GAAS,kDAAmD,CACxDwB,WAAY,OACZC,aAAa,IAEjBsF,GAAmB,GACnBtC,cAAc9C,IACdmI,YAAW,kBAAMjE,EAAa,OAAQ,MAEtB,YAAZuB,IAAyBpB,GAlJtB,KAoJPhG,GAAS,gCAAiC,CACtCwB,WAAY,OACZC,aAAa,IAEjBwE,EAAayC,KAMdhB,IAAUI,KACT9H,GAAS,mDAAoD,CACzDwB,WAAY,OACZC,aAAa,IAEjBsF,GAAmB,GACnBtC,cAAc9C,IACdmI,YAAW,kBAAMjE,EAAa,OAAQ,MAGvC+B,IAAQI,KACPhI,GAAS,iDAAkD,CACvDwB,WAAY,OACZC,aAAa,IAEjBsF,GAAmB,GACnBtC,cAAc9C,IACdmI,YAAW,kBAAMjE,EAAa,OAAQ,QAsL3C,CAACxC,IAEJuB,qBAAU,WAIN,IAAIE,EAAIN,OAAOzE,IAEfoJ,QAAQC,IAAItE,EAAEC,QAAQ,IACP,SAAZe,IACK4D,OACAjF,cAAc9C,IACdmI,YAAW,kBAAMjE,EAAa,OAAQ,KACtCkB,GAAmB,KAG3BzE,EAAcD,GAAQyC,EAAEC,QAAQ,IAChC3B,IAAY9B,MAEb,CAACvB,KAEJ6E,qBAAU,WACS,WAAZkB,GAAsC,MAAdzC,GACvBb,EAA2BH,GAAQE,IACxB,SAAZuD,GAAoC,MAAdzC,GAErBb,EAA2BH,GAAQE,MAKxC,CAACjB,KAGA,gCACI,cAAC,EAAD,CAAQvB,OAAQA,KAChB,sBAAKU,UAAU,oCAAf,UACI,oBAAIA,UAAU,8BAAd,oCACA,sBAAKA,UAAU,mBAAf,UACI,wBAAQA,UAAU,8BAA8BQ,QAAS,WACrD8E,EAAW,UACXF,EAAa,MAFjB,oBAIA,wBAAQpF,UAAU,yBAAyBQ,QAAS,WAChD8E,EAAW,QACXF,EAAa,MAFjB,qBAKJ,sBAAKpF,UAAU,MAAMU,MAAO,CAAC,WAAc,WAA3C,UACI,qBAAKV,UAAU,QAAf,SACiB,WAAZqF,EAED,4CACI,uBAAOrF,UAAU,UAAjB,qBACA,uBAAOA,UAAU,mBAAjB,SAAoC,sBAAMA,UAAU,eAAhB,SA3Z7C,OA2ZmG,uBAC1F,uBAAOA,UAAU,UAAjB,wBACA,uBACIA,UAAU,iCACVuI,MAAOhD,EACP+D,SAAU,SAAAC,GAON/D,EAAa+D,EAAMR,OAAOR,UAEzB,uBACT,uBAAOvI,UAAU,UAAjB,sBACA,uBACIA,UAAU,iCACVsJ,SAAU,SAAAC,GAAU7D,EAAW6D,EAAMR,OAAOR,QAC5CA,MAAO9C,IACF,uBACT,uBAAOzF,UAAU,UAAjB,wBACA,uBAAOA,UAAU,mBAAjB,SAAoC,sBAAMA,UAAU,eAAhB,SAAgCiG,MAAyB,uBAC7F,uBAAOjG,UAAU,UAAjB,6BACA,uBAAOA,UAAU,mBAAjB,SAAoC,uBAAMA,UAAU,eAAhB,UAAgC2F,EAAhC,SAA0D,0BAGlG,sBAAK3F,UAAU,WAAf,eACI,uBAAOA,UAAU,UAAjB,qBACA,uBAAOA,UAAU,mBAAjB,SAAoC,sBAAMA,UAAU,eAAhB,SAxb7C,OAwbmG,uBAC1F,uBAAOA,UAAU,UAAjB,sBACA,uBAAOA,UAAU,mBAAjB,SAAoC,sBAAMA,UAAU,eAAhB,SAAgCiI,OAAuB,uBAC3F,uBAAOjI,UAAU,UAAjB,wBACA,uBACIA,UAAU,0CACVuI,MAAOhD,EACP+D,SAAU,SAAAC,GAON/D,EAAa+D,EAAMR,OAAOR,UAEzB,uBACT,uBAAOvI,UAAU,UAAjB,sBACA,uBACIA,UAAU,0CACVsJ,SAAU,SAAAC,GAAU7D,EAAW6D,EAAMR,OAAOR,QAC5CA,MAAO9C,IACF,uBACT,uBAAOzF,UAAU,UAAjB,wBACA,uBAAOA,UAAU,mBAAjB,SAAoC,sBAAMA,UAAU,eAAhB,SAAgCiG,MAAyB,uBAC7F,uBAAOjG,UAAU,UAAjB,6BACA,uBAAOA,UAAU,mBAAjB,SAAoC,uBAAMA,UAAU,eAAhB,UAAgC2F,EAAhC,SAA0D,uBAC9F,oBAAI3F,UAAU,kCAAd,gCACA,sBAAKA,UAAU,kBAAf,UACI,uBAAOE,KAAK,QAAQqI,MAAM,UAAUS,KAAK,UAAUM,SAAU,SAAAC,GAAK,OAAIV,GAAYU,MAClF,uBAAOvJ,UAAU,UAAjB,+BAAoD,uBACpD,uBAAOE,KAAK,QAAQqI,MAAM,UAAUS,KAAK,UAAUM,SAAU,SAAAC,GAAK,OAAIV,GAAYU,IAAQC,gBAAc,IACxG,uBAAOxJ,UAAU,UAAjB,kCAIZ,qBAAKA,UAAU,iCAAf,SACiB,WAAZqF,EAED,0CACI,qBAAKrF,UAAU,mBAAf,SAAkC,sBAAMA,UAAU,yCAAhB,SAA0D4C,MAC5F,sBAAK5C,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,wBACIA,UAAU,6BACVuI,MAAM,OACN/H,QAAS,WACFyI,OACCzC,GAAQ,GACRJ,EAAkB,GAClBwC,OAPZ,uBAWJ,qBAAK5I,UAAU,oBAAf,SACI,wBACIA,UAAU,6BACVuI,MAAM,MACN/H,QAAS,WACFyI,OACCzC,GAAQ,GACRJ,EAAkB,GAClBwC,OAPZ,0BAYR,iEAAmC,sBAAM5I,UAAU,aAAhB,SAA8B6F,IAAjE,mCAAgH,sBAAM7F,UAAU,aAAhB,SAA8B+F,IAA9I,0BAeJ,0CACI,qBAAK/F,UAAU,mBAAf,SAAkC,sBAAMA,UAAU,yCAAhB,SAA0D4C,MAC5F,uBAAO5C,UAAU,UAAjB,oBACA,sBAAKA,UAAU,mBAAf,UACI,uBAAOE,KAAK,QAAQ8I,KAAK,WAAWT,MAAM,KAAKe,SAAU,SAAAC,GAAU/C,GAAQ,GAAIqC,GAAYU,IAASC,gBAAc,IAAS,uBAAOxJ,UAAU,OAAjB,gBAC3H,uBAAOE,KAAK,QAAQ8I,KAAK,WAAWT,MAAM,KAAKe,SAAU,SAAAC,GAAU/C,GAAQ,GAAIqC,GAAYU,MAAiB,uBAAOvJ,UAAU,OAAjB,gBAC5G,uBAAOE,KAAK,QAAQ8I,KAAK,WAAWT,MAAM,YAAYe,SAAU,SAAAC,GAAU/C,GAAQ,GAAIqC,GAAYU,MAAiB,uBAAOvJ,UAAU,OAAjB,0BACjH,uBACN,qBAAKA,UAAU,yBAAf,SACKqG,EACD,wBACIrG,UAAU,+BACVQ,QAAS,WACLwD,cAAc9C,IACdmI,YAAW,kBAAMjE,EAAa,OAAQ,KACtCkB,GAAmB,IAL3B,2BASA,wBACItG,UAAU,6BACVQ,QAAS,WACL4F,EAAkB,GAClBc,GAAU,GACVE,GAAQ,GACL6B,QAnRjB,WAClB,IAAI/D,EAAI,EACFzE,EAAKqD,aAAY,WACXoB,EAAEuE,aAAehD,KACjBH,GAAmB,GACnBtC,cAAcvD,GACd4I,YAAW,kBAAMjE,EAAa,OAAQ,MAE1C+C,GAAK1H,GACLmI,KACA1D,MACD,KAyQ6BwE,GACApD,GAAmB,IAEvB4B,GAAW3C,IAVnB,8BAcJ,iEAAmC,sBAAMvF,UAAU,aAAhB,SAA8B6F,IAAjE,mCAAgH,sBAAM7F,UAAU,aAAhB,SAA8B+F,IAA9I,uBACe,MAAdnD,EAlPlBJ,GAAqB,MAAdI,GAGL,EAmPmB,mCACA,oBAAI5C,UAAU,yBAAd,0BAGA,oBAAIA,UAAU,0BAAd,yBAEJ,kCAIR,qBAAKA,UAAU,QAAf,SACiB,SAAZqF,EAED,0CACI,uBAAOrF,UAAU,UAAjB,6BACA,uBACIA,UAAU,iCACVuI,MAAO9B,GACP6C,SAAU,SAAAC,GAAU7C,GAAa6C,EAAMR,OAAOR,UAAiB,uBACnE,oBAAIvI,UAAU,kCAAd,gCACA,sBAAKA,UAAU,uBAAf,UACI,wBAAOA,UAAU,UAAjB,oBAAmC,QACnC,uBAAOA,UAAU,iCAAiCuI,MAAOlB,GAAYiC,SAAU,SAAAC,GAAK,OAAIjC,GAAciC,EAAMR,OAAOR,QAAQoB,UAAQ,IAAS,uBAC5I,wBAAO3J,UAAU,UAAjB,kBAAiC,QACjC,uBAAOA,UAAU,iCAAiCuI,MAAOhB,GAAU+B,SAAU,SAAAC,GAAK,OAAI/B,GAAY+B,EAAMR,OAAOR,QAAQoB,UAAQ,OAEnI,sBAAK3J,UAAU,eAAf,UAEI,mBAAGA,UAAU,sDAAsDQ,QAAS,kBAAMwG,IAAS,IAA3F,oBAEA,mBAAGhH,UAAU,sDAAsDQ,QAAS,kBAAMwG,IAAS,IAA3F,wBAEJ,qBAAKhH,UAAU,kBAAf,SACC+G,GACK,yCACF,6DAEA,uBAAO/G,UAAU,UAAjB,6BACA,uBACIA,UAAU,iCACVuI,MAAOd,GACP6B,SAAU,SAAAC,GAAK,OAAI7B,GAAkB6B,EAAMR,OAAOR,UACzC,uBACb,uBAAOvI,UAAU,UAAjB,gCACA,uBACIA,UAAU,iCACVuI,MAAOV,GACPyB,SAAU,SAAAC,GAAK,OAAIzB,GAAmByB,EAAMR,OAAOR,aAErD,yCACF,8DAEA,uBAAOvI,UAAU,UAAjB,6BACA,uBACIA,UAAU,iCACVuI,MAAOZ,GACP2B,SAAU,SAAAC,GAAK,OAAI3B,GAAmB2B,EAAMR,OAAOR,UAC1C,uBACb,uBAAOvI,UAAU,UAAjB,gCACA,uBACIA,UAAU,iCACVuI,MAAOR,GACPuB,SAAU,SAAAC,GAAK,OAAIvB,GAAoBuB,EAAMR,OAAOR,kBAMhE,qDC7hBTqB,MA1If,WAAkB,IACNrK,EAAaC,sBAAbD,SADK,EAEmBE,mBAAS,IAF5B,mBAENoK,EAFM,KAEIC,EAFJ,OAGmBrK,mBAAS,IAH5B,mBAGNsK,EAHM,KAGIC,EAHJ,OAImBvK,oBAAS,GAJ5B,mBAINwK,EAJM,KAIIC,EAJJ,OAK+BzK,oBAAS,GALxC,mBAKNC,EALM,KAKUC,EALV,KASP8B,EAAe,CACjBoI,SAAWA,EACXE,SAAUA,EACVzK,OAAQ,QAEN6K,EAAY,CACdN,SAAUA,EACVE,SAAUA,GAGd,SAASK,EAAeC,GACPC,SAASC,eAAT,UAA2BF,IACnCG,eAAe,CAChBC,SAAU,SACVC,MAAO,WAIf,OACI,gCACI,sBAAK1K,UAAU,wDAAf,UACI,mBAAGA,UAAU,4CAA4CC,KAAK,WAA9D,SAEI,sBAAMD,UAAU,GAAhB,0BAEJ,wBAAQA,UAAU,gCAAgCE,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAgBZ,EAA0B,QAAT,OAAkBa,aAAW,oBAAoBC,QA3B5N,kBAAMb,GAAmBD,IA2BvC,SACI,sBAAMM,UAAU,0BAGpB,sBAAKA,UAAS,UAAsB,WAAtB,oBAAiES,GAAG,mBAAlF,UAEI,mBAAGT,UAAU,qBAAqBU,MAAO,CAAC,OAAU,WAAYF,QAAS,kBAAM4J,EAAa,SAA5F,kBAEA,mBAAGpK,UAAU,qBAAqBU,MAAO,CAAC,OAAU,WAAYF,QAAS,kBAAM4J,EAAa,SAA5F,kBAEA,mBAAGpK,UAAU,qBAAqBU,MAAO,CAAC,OAAU,WAAYF,QAAS,kBAAM4J,EAAa,SAA5F,kBAEA,mBAAGpK,UAAU,qBAAqBU,MAAO,CAAC,OAAU,WAAYF,QAAS,kBAAM0J,GAAY,IAA3F,mBAEA,mBAAGlK,UAAU,qBAAqBU,MAAO,CAAC,OAAU,WAAYF,QAAS,kBAAM0J,GAAY,IAA3F,2BAGR,sBAAKlK,UAAU,MAAf,UACI,qBAAKA,UAAU,UAGf,qBAAKA,UAAU,QAAf,SACA,sBAAKA,UAAU,yBAAf,UACKiK,EACD,oBAAIjK,UAAU,cAAd,kCAEA,oBAAIA,UAAU,cAAd,qCACI,uBAAOA,UAAU,KAAjB,sBAAsC,uBACtC,uBACIA,UAAU,0BACVuI,MAAOsB,EACPP,SAAU,SAAAC,GAAK,OAAIO,EAAYP,EAAMR,OAAOR,UAAgB,uBAChE,uBAAOvI,UAAU,KAAjB,sBAAsC,uBACtC,uBACIA,UAAU,0BACVuI,MAAOwB,EACPT,SAAU,SAAAC,GAAK,OAAIS,EAAYT,EAAMR,OAAOR,UAAgB,uBAChE,sBAAKvI,UAAU,mBAAf,UACKiK,EAED,wBACIjK,UAAU,kCACVQ,QAAS,YHjElC,SAAP,mCGkEoCmK,CAAalJ,GAAcH,MAAK,SAAAC,GAE5BhC,EAASgC,EAAK,CACVR,WAAY,OACZC,aAAa,OAGrBkJ,GAAY,IAVpB,sBAeA,wBACIlK,UAAU,kCACVQ,QAAS,YH1ElC,SAAP,mCG2EoCoK,CAAUT,GAAW7I,MAAK,SAAAC,GAGtBhC,EAASgC,EAAIC,KAAKA,KAAM,CACpBT,WAAY,OACZC,aAAa,IAEI,2BAAlBO,EAAIC,KAAKA,OAER1B,aAAa+D,QAAQ,SAAUtC,EAAIC,KAAKqJ,MAAM,GAAGC,KAEjDlK,OAAOC,QAAQC,aAAa,GAAI,WAAY,aAC5CF,OAAOmE,SAASC,QAAO,QAfvC,mBAqBA,mBAAGhF,UAAU,sBAAsBU,MAAO,CAAC,OAAU,WAAYF,QAAS,kBAAM0J,GAAY,IAA5F,2CAKhB,qBAAKlK,UAAU,YAAYS,GAAG,OAA9B,SACI,sBAAKT,UAAU,YAAf,UACI,sCACA,29BAGR,qBAAKA,UAAU,YAAYS,GAAG,OAA9B,SACI,sBAAKT,UAAU,YAAf,UACI,sCACA,29BAGR,qBAAKA,UAAU,YAAYS,GAAG,OAA9B,SACI,sBAAKT,UAAU,YAAf,UACI,sCACA,+9B,uBC8BL+K,MA1Jf,WAAwB,IAAD,EACatL,mBAAS,IADtB,mBACZuL,EADY,KACFC,EADE,OAEiCxL,mBAAS,IAF1C,mBAEZyL,EAFY,KAEQC,EAFR,OAGS1L,mBAAS,OAHlB,mBAGZH,EAHY,KAGJoD,EAHI,OAImBjD,mBAAS,GAJ5B,mBAIZ2L,EAJY,KAICC,EAJD,OAKuC5L,mBAAS,GALhD,mBAKZ6L,EALY,KAKWC,EALX,KASbC,EAAuB,YJuC1B,SAAP,mCIrCQC,CADe3L,aAAaC,QAAQ,WAEnCuB,MAAK,SAAAC,GAAQ,IACFC,EAASD,EAATC,KACRyJ,EAAYzJ,EAAM,GAAGM,iBAIvB4J,EAAiC,YJmDpC,SAAP,mCIjDQC,CADe7L,aAAaC,QAAQ,WAEnCuB,MAAK,SAAAC,GAAQ,IACFC,EAASD,EAATC,KACR2J,EAAsB3J,EAAM,GAAGoK,4BAsBvCzH,qBAAU,WAjBHrE,aAAaC,QAAQ,WACpB4B,EAAc7B,aAAaC,QAAQ,WAAWuB,MAAK,SAAAC,GAE/CmB,EAAWnB,EAAIC,KAAKlC,WAgB5BkM,IACAE,MACD,IAEH,IAAMG,EArDO,EAqDET,EACTU,EAtDO,EAsDYR,EAEnBS,EAAWf,EAASgB,MAAMH,EAAQA,EAxD3B,GAyDPI,EAAqBf,EAAmBc,MAAMF,EAAkBA,EAzDzD,GA2DPI,EAAY9I,KAAKC,KAAK2H,EAASmB,OA3DxB,GA4DPC,EAAsBhJ,KAAKC,KAAK6H,EAAmBiB,OA5D5C,GA8Db,OACI,gCACI,cAAC,EAAD,CAAQ7M,OAAQA,IAChB,mBAAGU,UAAU,4BAAb,8CACA,sBAAKA,UAAU,yCAAf,UACI,oBAAIA,UAAU,aAAd,qBACA,wBAAOA,UAAU,0CAAjB,UACI,kCACI,qCACA,2CACA,0CACA,+CACA,sCACA,2CAEH+L,EAASM,KAAI,SAACC,EAAMC,GACrB,OACA,kCACI,6BAAKA,EAAM,IACX,6BAAKD,EAAK1J,YACI,QAAb0J,EAAK9J,IACF,oBAAIxC,UAAU,aAAd,SAA4BsM,EAAK9J,MAEjC,oBAAIxC,UAAU,cAAd,SAA6BsM,EAAK9J,MAEtC,6BAAK8J,EAAKhK,WACV,6BAAKgK,EAAKzJ,OACV,6BAAKyJ,EAAKhN,kBAGlB,cAAC,IAAD,CAAekN,cAAe,OAC1BC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBT,UAAWA,EACXU,qBAAuB,EACvBC,mBAAoB,EACpBC,aA7DQ,SAAC,GAAgC,IAApBC,EAAmB,EAA7BC,SACvB3B,EAAe0B,IA6DHE,mBAAoB,mBACpBC,gBAAiB,cAKzB,sBAAKlN,UAAU,oCAAf,UACI,oBAAIA,UAAU,aAAd,0BACA,wBAAOA,UAAU,0CAAjB,UACI,kCACI,qCACA,2CACA,yCACA,4CACA,6CACA,0CACA,4CACA,+CACA,sCACA,2CAEHiM,EAAmBI,KAAI,SAACC,EAAMC,GAC/B,OACA,kCACI,6BAAKA,EAAM,IACX,6BAAKD,EAAK1J,YACV,6BAAK0J,EAAKjH,UACV,6BAAKiH,EAAKjE,aACV,6BAAKiE,EAAKlE,aACI,QAAbkE,EAAK9J,IACF,oBAAIxC,UAAU,aAAd,SAA4BsM,EAAK9J,MAEjC,oBAAIxC,UAAU,cAAd,SAA6BsM,EAAK9J,MAEtC,6BAAK8J,EAAKrG,YACV,6BAAKqG,EAAKhK,WACV,6BAAKgK,EAAKzJ,OACV,6BAAKyJ,EAAKhN,kBAGlB,cAAC,IAAD,CAAekN,cAAe,OAC1BC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBT,UAAWE,EACXQ,qBAAuB,EACvBC,mBAAoB,EACpBC,aAzGkB,SAAC,GAAgC,IAApBC,EAAmB,EAA7BC,SACjCzB,EAAyBwB,IAyGbE,mBAAoB,mBACpBC,gBAAiB,kBC/HtBC,EAjBH,WAGV,OACE,cAAC,gBAAD,UACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWpL,EAAMqL,OAAK,IACtC,cAAC,IAAD,CAAOF,KAAK,eAAeC,UAAWlI,IACtC,cAAC,IAAD,CAAOiI,KAAK,eAAeC,UAAWtC,IACtC,cAAC,IAAD,CAAOqC,KAAK,SAASC,UAAWzD,U,QCZzB2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnM,MAAK,YAAkD,IAA/CoM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAYC,SAAUC,WAAtB,SACE,cAAC,EAAD,QAMJ7D,SAASC,eAAe,SAM1BgD,M","file":"static/js/main.ecf109be.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/24-money.66f55454.gif\";","import React, { useState } from 'react'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\n// import { Modal } from 'react-bootstrap';\r\n// import { registerUser, loginUser } from '../Helpers/service';\r\n\r\n\r\nfunction Navbar({wallet}) {\r\n    const { addToast } = useToasts()\r\n    const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n\r\n    const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\r\n\r\n    // var wallet = wallet\r\n    // console.log(\"wallet\", wallet)\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [userId, setUserId] = useState()\r\n    // const [username, setUsername] = useState('')\r\n    // const [password, setPassword] = useState('')\r\n    // const [wallet, setWallet] = useState()\r\n    // const registerData = {\r\n    //     username : username,\r\n    //     password: password,\r\n    //     wallet: '0.00'\r\n    // }\r\n    // const loginData = {\r\n    //     username: username,\r\n    //     password: password\r\n    // }\r\n    // const [showModal, setShow] = useState(false);\r\n    // const [register, setRegister] = useState(false);\r\n\r\n    // const handleOpen = () => setShow(true)\r\n\r\n    // const handleClose = () => setShow(false)\r\n\r\n    const handleLogout = () => {\r\n        setUserId();\r\n        // setUsername(\"\");\r\n        // setPassword(\"\");\r\n        localStorage.removeItem(\"userId\");\r\n      };\r\n\r\n    const requireAuth = () => {\r\n        const loggedInUser = localStorage.getItem('userId');\r\n\r\n        if(loggedInUser) {\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\r\n                <a className=\"navbar-brand text-info font-weight-bolder\" href=\"/FreeBet\">\r\n                    {/* <img src={Logo} alt=\"Logo\" width=\"36\" height=\"36\" className=\"vertical-align-middle\" /> */}\r\n                    <span className=\"\">FREE MONEY</span>\r\n                </a>\r\n                <button className=\"custom-toggler navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample09\" aria-controls=\"navbarsExample09\" aria-expanded={!isNavCollapsed ? \"true\" : \"false\"} aria-label=\"Toggle navigation\" onClick={handleNavCollapse}>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className={`${isNavCollapsed ? 'collapse' : 'collapse'} navbar-collapse`} id=\"navbarsExample09\">\r\n                    {requireAuth()\r\n                    ?\r\n                    <a className=\"nav-link text-info\" href=\"/Freebet/#/freebet\">Free bet</a>\r\n                    :\r\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n                    <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\" >Free bet</a>\r\n                        // style={{\"cursor\": \"pointer\"}} \r\n                        // onClick={() =>{\r\n                        // setRegister(false)\r\n                        // setUsername('')\r\n                        // setPassword('')\r\n                        // handleOpen()}}\r\n                    }\r\n                    {requireAuth()\r\n                    ?\r\n                    <a className=\"nav-link text-info\" href=\"/FreeBet/#/multiplybet\">Multiply bet</a>\r\n                    :\r\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n                    <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Multiply bet</a>\r\n                    // style={{\"cursor\": \"pointer\"}} onClick={() =>{\r\n                    //     setRegister(false)\r\n                    //     setUsername('')\r\n                    //     setPassword('')\r\n                    //     handleOpen()}}\r\n                    }\r\n                    {requireAuth()\r\n                    ?\r\n                    <a href=\"/FreeBet/#/lottery\" className=\"nav-link text-info\">Lottery</a>\r\n                    :\r\n                    <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Lottery</a>\r\n                        /*style={{\"cursor\": \"pointer\"}} onClick={() =>{\r\n                        setRegister(false)\r\n                        setUsername('')\r\n                        setPassword('')\r\n                        handleOpen()}}*/\r\n                        \r\n                    }\r\n                    {requireAuth()\r\n                    ? <a className=\"nav-link text-info\" href=\"/FreeBet/#/rollHistory\">Roll History</a>\r\n                    : <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Roll History</a>}\r\n                    {requireAuth() \r\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n                    ? <a className=\"nav-link text-info\" style={{\"cursor\": \"pointer\"}} onClick={()=> {\r\n                        handleLogout();\r\n                        // alert(\"Logged out Successfully!!\")\r\n                        // window.location.reload(false);\r\n                        window.history.replaceState('','loggedOut','/')\r\n                        addToast('Logged Out Successfully!!', {\r\n                            appearance: 'info',\r\n                            autoDismiss: true\r\n                        })\r\n                        }}>Logout</a>\r\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n                    : <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">Login</a>\r\n                        /* style={{\"cursor\": \"pointer\"}} onClick={() =>{\r\n                        setRegister(false)\r\n                        setUsername('')\r\n                        setPassword('')\r\n                        handleOpen()}} */\r\n                    }\r\n                    {requireAuth()\r\n                    ?\r\n                    <a href=\"/FreeBet/#/wallet\" className=\"nav-link text-info\">${wallet}</a>\r\n                    :\r\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n                    <a className=\"nav-link text-info\" href=\"/FreeBet/#/login\">$0.00</a> \r\n                        /*style={{\"cursor\": \"pointer\"}} onClick={() =>{\r\n                        setRegister(false)\r\n                        setUsername('')\r\n                        setPassword('')\r\n                        handleOpen()}}*/\r\n                    }\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import axios from 'axios';\r\n\r\nexport async function roll() {\r\n    // const response = await fetch('http://localhost:3080/api/roll', {\r\n    //     mode: \"no-cors\"\r\n    // });\r\n    // // console.log(response)\r\n    // return await response;\r\n    const response = axios.get('https://freebet-server.herokuapp.com/api/roll')\r\n    // const response = axios.get('http://localhost:3080/api/roll')\r\n                    .then(res => {\r\n                        return res.data.data;\r\n                    })\r\n    return await response;\r\n}\r\n\r\nexport async function registerUser(registerData) {\r\n    const response = await axios.post('https://freebet-server.herokuapp.com/api/register', registerData);\r\n    // const response = await axios.post('http://localhost:3080/api/register', registerData);\r\n    return response.data;\r\n}\r\n\r\nexport async function loginUser(data) {\r\n    const response = await axios.post('https://freebet-server.herokuapp.com/api/login', data);\r\n    // const response = await axios.post('http://localhost:3080/api/login', data);\r\n\r\n    return response;\r\n}\r\n\r\nexport async function getWalletData(userId) {\r\n    const wallet = {id: userId}\r\n    const response = await axios.post('https://freebet-server.herokuapp.com/api/wallet', wallet)\r\n    // const response = await axios.post('http://localhost:3080/api/wallet', wallet)\r\n\r\n    // console.log(response.data)\r\n    return response;\r\n}\r\n\r\nexport async function setWalletData(userId, wallet) {\r\n    const data = {\r\n        id: userId,\r\n        wallet: wallet\r\n    }\r\n    const response = await axios.post('https://freebet-server.herokuapp.com/api/setWallet', data)\r\n    // const response = await axios.post('http://localhost:3080/api/setWallet', data)\r\n\r\n    return response;\r\n}       \r\n\r\nexport async function pushRollHistory(userId, rollHistory) {\r\n    const data = {\r\n        id: userId,\r\n        rollHistory: rollHistory\r\n    }\r\n    await axios.post('https://freebet-server.herokuapp.com/api/pushRollHistory', data)\r\n    // await axios.post('http://localhost:3080/api/pushRollHistory', data)\r\n\r\n}\r\n\r\nexport async function getRollHistory(userId) {\r\n    const data = {\r\n        id: userId\r\n    }\r\n    const response = await axios.post('https://freebet-server.herokuapp.com/api/getRollHistory', data)\r\n    // const response = await axios.post('http://localhost:3080/api/getRollHistory', data)\r\n\r\n    return response;\r\n    // console.log(response)\r\n}\r\n\r\nexport async function pushMultiplyBetRollHistory(userId, rollHistory) {\r\n    const data = {\r\n        id: userId,\r\n        rollHistory: rollHistory\r\n    }\r\n    await axios.post('https://freebet-server.herokuapp.com/api/pushMultiplyBetRollHistory', data)\r\n    // await axios.post('http://localhost:3080/api/pushMultiplyBetRollHistory', data)\r\n\r\n}\r\n\r\nexport async function getMultiplyBetRollHistory(userId) {\r\n    const data = {\r\n        id: userId\r\n    }\r\n\r\n    const response = await axios.post('https://freebet-server.herokuapp.com/api/getMultiplyBetRollHistory', data)\r\n    // const response = await axios.post('http://localhost:3080/api/getMultiplyBetRollHistory', data)\r\n\r\n    return response;\r\n}","// Version 1.0.3    user loggedin state added\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\n\r\nimport './home.css';\r\nimport transaction from './24-money.gif';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport { roll, getWalletData, setWalletData, pushRollHistory } from '../Helpers/service';\r\n// import { Modal } from \"react-bootstrap\";\r\n\r\nconst minuteSeconds = 60;\r\nconst hourSeconds = 3600;\r\nconst daySeconds = 86400;\r\n\r\nconst timerProps = {\r\n    isPlaying: true,\r\n    size: 90,\r\n    strokeWidth: 6\r\n  };\r\nconst renderTime = (dimension, time) => {\r\n    return (\r\n        <div className=\"time-wrapper\">\r\n        <div className=\"time\">{time}</div>\r\n        <div>{dimension}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst getTimeSeconds = (time) => (minuteSeconds - time) | 0;\r\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\r\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\r\nconst getTimeDays = (time) => (time / daySeconds) | 0;\r\n\r\nfunction Home() {\r\n    const { addToast } = useToasts()\r\n    const [faucet, setFaucet] = useState(10000);\r\n    const [disable, setDisable] = useState(false);\r\n    //User logged in state\r\n    // const initialWallet = '0.0';\r\n    const [userId, setUserId] = useState()\r\n    // const [username, setUsername] = useState('')\r\n    // const [password, setPassword] = useState('')\r\n    const [takeaway, setTakeAway] = useState(0.00)\r\n    const [win, setWin] = useState(false)\r\n    const [wallet, setWallet] = useState('0.00')\r\n    const [history, setHistory] = useState(false)\r\n    // const [rollData, setRollData] = useState([])\r\n\r\n    // const registerData = {\r\n    //     username : username,\r\n    //     password: password, \r\n    //     wallet: initialWallet\r\n    // }\r\n    // const loginData = {\r\n    //     username: username,\r\n    //     password: password\r\n    // }\r\n    const rollHistory = {\r\n        rollValue: faucet,\r\n        win: win ? 'Win' : 'Lose',\r\n        takeaway: takeaway,\r\n        date: new Date().toLocaleDateString(),\r\n        wallet: wallet\r\n    }\r\n    // const [showModal, setShow] = useState(false);\r\n    // const [register, setRegister] = useState(false);\r\n\r\n    // console.log(wallet+1.0)\r\n\r\n    const stratTime = Date.now() / 1000; // use UNIX timestamp in seconds\r\n    const endTime = stratTime + 243248; // use UNIX timestamp in seconds\r\n\r\n    const remainingTime = endTime - stratTime;\r\n    const days = Math.ceil(remainingTime / daySeconds);\r\n    const daysDuration = days * daySeconds;\r\n\r\n    const handleRoll = () => {\r\n        roll()\r\n        .then(x => {\r\n            setFaucet(x);\r\n        });        \r\n        handleDisable()\r\n    }\r\n\r\n    const handleDisable = () => {\r\n        var time = new Date().getMinutes()\r\n        var hr = new Date().getHours()\r\n        let stopHr;\r\n        let stopTime;\r\n        if(localStorage.getItem(\"stopTime\")) {\r\n            stopTime = localStorage.getItem(\"stopTime\")\r\n        } else {\r\n            stopTime = time + 1;\r\n            stopHr = hr;\r\n            if(stopTime >= 60) stopTime = stopTime - 60\r\n            localStorage.setItem(\"stopTime\", stopTime)\r\n            localStorage.setItem(\"stopHr\", stopHr)\r\n        }\r\n        let currTime;\r\n        let currHr;\r\n        let a = setInterval(() => {\r\n            setDisable(true)\r\n            currTime = new Date().getMinutes()\r\n            currHr = new Date().getHours()\r\n            // console.log(currHr, Number(stopHr))\r\n            if(currHr > Number(stopHr) && currTime === Number(stopTime)) {\r\n                setDisable(false)\r\n                localStorage.removeItem(\"stopHr\")\r\n                localStorage.removeItem(\"stopTime\")\r\n                clearInterval(a)\r\n            }\r\n            else if(currTime > Number(stopTime) || currTime === Number(stopTime)) {\r\n                // console.log(currTime, stopTime)\r\n                setDisable(false)\r\n                localStorage.removeItem(\"stopTime\")\r\n                localStorage.removeItem(\"stopHr\")\r\n                clearInterval(a)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    const handleTakeaway = () => {\r\n        if (faucet <= 9999 && faucet >= 9800) {\r\n            let w = Number(wallet) + 0.90\r\n            setWalletData(userId, w.toFixed(2))\r\n            setWallet(w.toFixed(2))\r\n            setHistory(!history)\r\n            setTakeAway(0.90)\r\n            // setWallet(Number(wallet) + 0.90)\r\n            setWin(true)\r\n            // addToast('You Won', {\r\n            //     appearance: 'success',\r\n            //     autoDismiss: true\r\n            // })\r\n        } else if (faucet < 9800 && faucet >= 9500) {\r\n            let w = Number(wallet) + 0.09\r\n            setWalletData(userId, w.toFixed(2))\r\n            setWallet(w.toFixed(2))\r\n            setTakeAway(0.09)\r\n            setHistory(!history)\r\n            // setWallet(Number(wallet) + 0.09)\r\n            setWin(true)\r\n            addToast(`Woohoo, You Won Free money out of Nothing`, {\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n            })\r\n        } else if (faucet < 8000 && faucet >= 0) {\r\n            let w = Number(wallet) + 0.01\r\n            setWalletData(userId, w.toFixed(2))\r\n            setWallet(w.toFixed(2))\r\n            setTakeAway(0.01)\r\n            setHistory(!history)\r\n            // console.log(getWalletData(userId).then(res => {\r\n            //     return res.data.wallet\r\n            //     // console.log(res.data.wallet)\r\n            // }))\r\n            // setWallet(Number(wallet) + 0.01)\r\n            setWin(true)\r\n            addToast(`Woohoo, You Won Free money out of Nothing`, {\r\n                appearance: 'success',\r\n                autoDismiss: true\r\n            })\r\n        } else {\r\n            if(faucet !== 10000) {\r\n                setWin(false)\r\n                setHistory(!history)\r\n                setTakeAway(0.00)\r\n                addToast('Oh bugger, lack of luck it seems. You get Nothing', {\r\n                    appearance: 'warning',\r\n                    autoDismiss: true\r\n            })\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSetWallet = () => {\r\n        if(localStorage.getItem(\"userId\")) {\r\n            getWalletData(localStorage.getItem(\"userId\")).then(res => {\r\n                // console.log(res.data.wallet)\r\n                setWallet((res.data.wallet))\r\n            })\r\n        } \r\n    }\r\n\r\n    const handleSetRollHistory = () => {\r\n        if(faucet !== 10000) {\r\n            // console.log('rollValue', faucet)\r\n            // console.log(\"takeaway\", takeaway)\r\n            // console.log('win/lose', win)\r\n            // console.log('wallet', wallet)\r\n            // console.log(new Date().toLocaleDateString())\r\n            pushRollHistory(userId, rollHistory)\r\n        }\r\n    }\r\n\r\n    const handleGetRollHistory = () => {\r\n        // getRollHistory(userId)\r\n        // .then(res => {\r\n        //     const { data } = res;\r\n        //     // console.log(data.[0].rollHistory.[0].rollValue)\r\n        //     setRollData(data.[0].rollHistory)\r\n        // })\r\n    }\r\n\r\n    // const handleOpen = () => setShow(true)\r\n\r\n    // const handleClose = () => setShow(false)\r\n\r\n    useEffect(() => {\r\n        const loggedInUser = localStorage.getItem(\"userId\");\r\n        if (loggedInUser) {\r\n        // const foundUser = JSON.parse(loggedInUser);\r\n        setUserId(loggedInUser);\r\n        }\r\n\r\n        // freebet\r\n        if(localStorage.getItem(\"stopTime\")) {\r\n            setDisable(true)\r\n            handleDisable()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handleSetWallet()\r\n    })\r\n\r\n    useEffect(() => {\r\n        handleTakeaway()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [faucet])\r\n\r\n    useEffect(() => {\r\n        handleSetRollHistory()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [history])\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar wallet={wallet}/>\r\n            <div className=\"row p-4\">\r\n                <div className=\"col-6 p-4 text-center\"><img src={transaction} width=\"300\" height=\"300\" alt=\"transaction\"/></div>\r\n                <div className=\"col-6\">\r\n                    <span className=\"display-3\">Make your transactions in a snap</span>\r\n                    <div className=\"row py-3 my-4\">\r\n                        <div className=\"col-6 text-center\">\r\n                            <button className=\"btn btn-info btn-lg mx-3\">Deposit</button>\r\n                            <button className=\"btn btn-info btn-lg mx-3\">Withdraw</button>\r\n                        </div>\r\n                        <div className=\"col-6 text-center\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-3 bg-gray text-center text-white\">\r\n                <span className=\"display-4\">Get Free Money For Every 45 Minutes</span>\r\n            </div>\r\n            <div className=\"my-4 px-4 w-100\">\r\n                <table className=\"table table-bordered m-auto w-50\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Roll</th>\r\n                            <th scope=\"col\">Prize</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\">9999-9800</th>\r\n                            <td>1.0000</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">9800-9500</th>\r\n                            <td>0.0090</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">9500-0</th>\r\n                            <td>0.0009</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"w-100 text-center bg-gray p-4 my-4\">\r\n                    <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{faucet}</span></div><br></br>\r\n                    {disable ?\r\n                        <button \r\n                        className=\"btn btn-primary btn-lg m-2 disabled\" \r\n                        onClick={() => {\r\n                            if(userId) {\r\n                                // handleRoll()\r\n                                // handleTakeaway()\r\n                            }\r\n                            else {\r\n                                window.history.pushState('', 'login', 'FreeBet/#/login')\r\n                                window.location.reload(false)\r\n                                /*setRegister(false)\r\n                                setUsername('')\r\n                                setPassword('')\r\n                                handleOpen()*/\r\n                            }\r\n                        }}\r\n                        disabled\r\n                        >ROLL</button>\r\n                    :\r\n                        <button \r\n                        className=\"btn btn-primary btn-lg m-2\" \r\n                        onClick={() => {\r\n                            if(userId) {\r\n                                handleRoll()\r\n                                // handleGetRollHistory()\r\n                                // console.log(rollData)\r\n                                // handleTakeaway()\r\n                            }\r\n                            else {\r\n                                window.history.pushState('', 'login', 'FreeBet/#/login')\r\n                                window.location.reload(false)\r\n                                // setRegister(false)\r\n                                // setUsername('')\r\n                                // setPassword('')\r\n                                // handleOpen()\r\n                            }\r\n                        }}\r\n                    >ROLL</button>} \r\n                </div> \r\n                {/* {disable \r\n                ?\r\n                <div className=\"d-inline-block w-100 m-auto\">\r\n                    <CountdownCircleTimer\r\n                        {...timerProps}\r\n                        colors={[[\"#7E2E84\"]]}\r\n                        duration={daysDuration}\r\n                        initialRemainingTime={remainingTime}\r\n                    >\r\n                        {({ elapsedTime }) =>\r\n                        renderTime(\"days\", getTimeDays(daysDuration - elapsedTime))\r\n                        }\r\n                    </CountdownCircleTimer>\r\n                    <CountdownCircleTimer\r\n                        {...timerProps}\r\n                        colors={[[\"#D14081\"]]}\r\n                        duration={daySeconds}\r\n                        initialRemainingTime={remainingTime % daySeconds}\r\n                        onComplete={(totalElapsedTime) => [\r\n                        remainingTime - totalElapsedTime > hourSeconds\r\n                        ]}\r\n                    >\r\n                        {({ elapsedTime }) =>\r\n                        renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime))\r\n                        }\r\n                    </CountdownCircleTimer>\r\n                    <CountdownCircleTimer\r\n                        {...timerProps}\r\n                        colors={[[\"#EF798A\"]]}\r\n                        duration={hourSeconds}\r\n                        initialRemainingTime={remainingTime % hourSeconds}\r\n                        onComplete={(totalElapsedTime) => [\r\n                        remainingTime - totalElapsedTime > minuteSeconds\r\n                        ]}\r\n                    >\r\n                        {({ elapsedTime }) =>\r\n                        renderTime(\"minutes\", getTimeMinutes(hourSeconds - elapsedTime))\r\n                        }\r\n                    </CountdownCircleTimer>\r\n                    <CountdownCircleTimer\r\n                        {...timerProps}\r\n                        colors={[[\"#218380\"]]}\r\n                        duration={minuteSeconds}\r\n                        initialRemainingTime={remainingTime % minuteSeconds}\r\n                        onComplete={(totalElapsedTime) => [\r\n                        remainingTime - totalElapsedTime > 0\r\n                        ]}\r\n                    >\r\n                        {({ elapsedTime }) =>\r\n                        renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n                        }\r\n                    </CountdownCircleTimer>\r\n                </div>\r\n                :\r\n                <></>\r\n                }   */}\r\n                {/* {faucet !== 10000 \r\n                ? \r\n                <>\r\n                <button className=\"btn btn-primary btn-lg mb-3\" onClick={() => handleGetRollHistory()}>Refresh Roll History</button>\r\n                <table className=\"table table-bordered m-auto text-center\">\r\n                    <thead>\r\n                        <th>SNO</th>\r\n                        <th>RollValue</th>\r\n                        <th>Win/Lose</th>\r\n                        <th>Roll Takeaway</th>\r\n                        <th>Wallet</th>\r\n                    </thead>\r\n                    {rollData.map((item, index) => {\r\n                    return (\r\n                    <tbody>\r\n                        <th>{index}</th>\r\n                        <td>{item.rollValue}</td>\r\n                        {item.win === 'Win' ?\r\n                            <td className=\"text-darkGreen\">{item.win}</td>\r\n                        :\r\n                            <td className=\"text-danger\">{item.win}</td>\r\n                        }\r\n                        <td>{item.takeaway}</td>\r\n                        <td>{item.wallet}</td>\r\n                    </tbody>)})}\r\n                </table> \r\n                </>\r\n                :\r\n                <>\r\n                </>\r\n                } */}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n// Version 1.0.2    Roll works perfectly\r\n// data-toggle=\"tooltip\" data-placement=\"top\" title=\"Tooltip on top\"\r\n\r\n// import React, { useState } from 'react'\r\n\r\n// import './home.css';\r\n// import transaction from './24-money.gif';\r\n// import Navbar from '../Navbar/Navbar';\r\n// import { roll } from '../Helpers/service';\r\n\r\n// function Home() {\r\n//     const [faucet, setFaucet] = useState(10000);\r\n\r\n//     const handleRoll = () => {\r\n//         roll()\r\n//         .then(x => {\r\n//             setFaucet(x);\r\n//         });\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             {/* <nav className=\"nav-bar\">\r\n//                 <span className=\"fs-4 nav-item\">FREE MONEY</span>\r\n//                 <span className=\"float-right nav-item\">\r\n//                     <div class=\"pos-f-t\">\r\n//                     <div class=\"collapse\" id=\"navbarToggleExternalContent\">\r\n//                         <div class=\"bg-dark p-4\">\r\n//                         <h4 class=\"text-white\">Collapsed content</h4>\r\n//                         <span class=\"text-muted\">Toggleable via the navbar brand.</span>\r\n//                         </div>\r\n//                     </div>\r\n//                     <nav class=\"navbar navbar-dark bg-dark\">\r\n//                         <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggleExternalContent\" aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n//                         <span class=\"navbar-toggler-icon\"></span>\r\n//                         </button>\r\n//                     </nav>\r\n//                     </div>\r\n//                 </span>\r\n//                 <span className=\"float-right nav-item\">$0.000000000</span>\r\n//             </nav> */}\r\n//             <Navbar />\r\n//             <div className=\"row p-4\">\r\n//                 <div className=\"col-6 p-4 text-center\"><img src={transaction} width=\"300\" height=\"300\" alt=\"transaction\"/></div>\r\n//                 <div className=\"col-6\">\r\n//                     <span className=\"display-3\">Make your transactions in a snap</span>\r\n//                     <div className=\"row py-3 my-4\">\r\n//                         <div className=\"col-6 text-center\">\r\n//                             <button className=\"btn btn-info btn-lg mx-3\">Deposit</button>\r\n//                             <button className=\"btn btn-info btn-lg mx-3\">Withdraw</button>\r\n//                         </div>\r\n//                         <div className=\"col-6 text-center\">\r\n//                             {/* <button className=\"btn btn-info btn-lg m-auto\">Withdraw</button> */}\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             <div className=\"p-3 bg-gray text-center text-white\">\r\n//                 <span className=\"display-4\">Get Free Money For Every 45 Minutes</span>\r\n//             </div>\r\n//             <div className=\"my-4 px-4 w-100\">\r\n//                 <table class=\"table table-bordered m-auto w-50\">\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th scope=\"col\">Roll</th>\r\n//                             <th scope=\"col\">Prize</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         <tr>\r\n//                             <th scope=\"row\">10000</th>\r\n//                             <td>1.0000</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th scope=\"row\">9999-9800</th>\r\n//                             <td>0.0090</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th scope=\"row\">9800-1000</th>\r\n//                             <td>0.0009</td>\r\n//                         </tr>\r\n//                     </tbody>\r\n//                 </table>\r\n//                 <div className=\"w-100 text-center bg-gray p-4 my-4\">\r\n//                     <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{faucet}</span></div><br></br>\r\n//                     <button className=\"btn btn-primary btn-lg m-2\" onClick={() => handleRoll()}>ROLL</button>    \r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Home\r\n\r\n\r\n\r\n// Version 1.0.1\r\n\r\n\r\n// import React, { useState } from 'react'\r\n// import ReCAPTCHA from 'react-google-recaptcha';\r\n\r\n// import './home.css';\r\n// import transaction from './24-money.gif';\r\n// import { roll } from '../Helpers/service';\r\n\r\n// function Home() {\r\n//     const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n//     const [faucet, setFaucet] = useState(10000);\r\n//     const reCaptchaRef = React.createRef();\r\n\r\n//     const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\r\n\r\n//     const handleRoll = () => {\r\n//         console.log(\"its working\")\r\n//         roll()\r\n//         .then(x => {\r\n//             // console.log(x);\r\n//             setFaucet(x);\r\n//         });\r\n//     }\r\n\r\n//     function onSubmit () {\r\n//         const recaptchaValue = reCaptchaRef.current.getValue();\r\n//         this.props.onSubmit(recaptchaValue);\r\n//     }\r\n\r\n//     function onChange (value) {\r\n//         console.log(\"CAPTCHA value : \", value)\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <nav class=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\r\n//                 <a class=\"navbar-brand text-info font-weight-bolder\" href=\"/\">\r\n//                     {/* <img src={Logo} alt=\"Logo\" width=\"36\" height=\"36\" className=\"vertical-align-middle\" /> */}\r\n//                     <span className=\"\">FREE MONEY</span>\r\n//                 </a>\r\n//                 <button class=\"custom-toggler navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample09\" aria-controls=\"navbarsExample09\" aria-expanded={!isNavCollapsed ? \"true\" : \"false\"} aria-label=\"Toggle navigation\" onClick={handleNavCollapse}>\r\n//                     <span class=\"navbar-toggler-icon\"></span>\r\n//                 </button>\r\n\r\n//                 <div class={`${isNavCollapsed ? 'collapse' : 'collapse'} navbar-collapse`} id=\"navbarsExample09\">\r\n//                 {/* <div class=\"navbar-collapse\" id=\"navbarsExample09\"> */}\r\n//                     <a className=\"nav-link text-info\" href=\"/contact\">Free bet</a>\r\n//                     <a className=\"nav-link text-info\" href=\"/login\">Multiply bet</a>\r\n//                     <a href=\"/request-demo\" className=\"nav-link text-info\" >Lottery</a>\r\n//                     <a href=\"/wallet\" className=\"nav-link text-info\">$0.000000001</a>\r\n//                 </div>\r\n//             </nav>\r\n//             {/* <nav className=\"nav-bar\">\r\n//                 <span className=\"fs-4 nav-item\">FREE MONEY</span>\r\n//                 <span className=\"float-right nav-item\">\r\n//                     <div class=\"pos-f-t\">\r\n//                     <div class=\"collapse\" id=\"navbarToggleExternalContent\">\r\n//                         <div class=\"bg-dark p-4\">\r\n//                         <h4 class=\"text-white\">Collapsed content</h4>\r\n//                         <span class=\"text-muted\">Toggleable via the navbar brand.</span>\r\n//                         </div>\r\n//                     </div>\r\n//                     <nav class=\"navbar navbar-dark bg-dark\">\r\n//                         <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggleExternalContent\" aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n//                         <span class=\"navbar-toggler-icon\"></span>\r\n//                         </button>\r\n//                     </nav>\r\n//                     </div>\r\n//                 </span>\r\n//                 <span className=\"float-right nav-item\">$0.000000000</span>\r\n//             </nav> */}\r\n//             <div className=\"row p-4\">\r\n//                 <div className=\"col-6 p-4 text-center\"><img src={transaction} width=\"300\" height=\"300\" alt=\"transaction\"/></div>\r\n//                 <div className=\"col-6\">\r\n//                     <span className=\"display-3\">Make your transactions in a snap</span>\r\n//                     <div className=\"row py-3 my-4\">\r\n//                         <div className=\"col-6 text-center\">\r\n//                             <button className=\"btn btn-info btn-lg mx-3\">Deposit</button>\r\n//                             <button className=\"btn btn-info btn-lg mx-3\">Withdraw</button>\r\n//                         </div>\r\n//                         <div className=\"col-6 text-center\">\r\n//                             {/* <button className=\"btn btn-info btn-lg m-auto\">Withdraw</button> */}\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             <div className=\"p-3 bg-gray text-center text-white\">\r\n//                 <span className=\"display-4\">Get Free Money For Every 45 Minutes</span>\r\n//             </div>\r\n//             <div className=\"my-4 px-4 w-100\">\r\n//                 <table class=\"table table-bordered m-auto w-50\">\r\n//                     <thead>\r\n//                         <tr>\r\n//                         <th scope=\"col\">Roll</th>\r\n//                         <th scope=\"col\">Prize</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         <tr>\r\n//                             <th scope=\"row\">10000</th>\r\n//                             <td>1.0000</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th scope=\"row\">9999-9800</th>\r\n//                             <td>0.0090</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th scope=\"row\">9800-1000</th>\r\n//                             <td>0.0009</td>\r\n//                         </tr>\r\n//                     </tbody>\r\n//                 </table>\r\n//                 <div className=\"w-100 text-center bg-gray p-4 my-4\">\r\n//                     <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{faucet}</span></div><br></br>\r\n//                     <form onSubmit={onSubmit} className=\"text-center\">\r\n//                     <ReCAPTCHA\r\n                        \r\n//                         ref={reCaptchaRef}\r\n//                         sitekey=\"6Lc__qsaAAAAANZ2FqwF3PCF45gwhSPP-uGLisD8\"\r\n//                         onChange={onChange}\r\n//                     />\r\n//                     <button className=\"btn btn-primary btn-lg m-2\" onClick={() => handleRoll()}>ROLL</button>\r\n//                     </form>\r\n//                  </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Home\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nimport './MultiplyBet.css';\r\nimport Navbar from './../Navbar/Navbar';\r\nimport { roll, getWalletData, setWalletData, pushMultiplyBetRollHistory } from '../Helpers/service';\r\n\r\n// eslint-disable-next-line no-lone-blocks\r\n{/* <ul class=\"nav nav-tabs\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" href=\"#\">Active</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"#\">Link</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"#\">Link</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n  </li>\r\n</ul> */}\r\n\r\nfunction MultiplyBet() {\r\n\r\n    // ###################################      manual bet options  ###################################################\r\n    const [rollValue, setRollValue] = useState(10000);\r\n    const [betmode, setBetmode] = useState('manual');\r\n    const [betAmount, setBetAmount] = useState(0.1);\r\n    const [betOdds, setBetOdds] = useState('2');\r\n    const [winChance, setWinChance] = useState('47.5');\r\n    const [winHigh, setWinHigh] = useState('5250');\r\n    const [winLow, setWinLow] = useState('4750');\r\n    const [winProfit, setWinProfit] = useState(0.2);\r\n    const [takeAwayAmount, setTakeAwayAmount] = useState(0);\r\n    const [win, setWin] = useState('');\r\n\r\n    // ####################################     auto bet options    ###################################################\r\n    const [isAutoBetActive, setIsAutoBetActive] = useState(false)\r\n    const [isHi, setIsHi] = useState(1); \r\n    const [noOfRolls, setNoOfRolls] = useState('1000');\r\n    const [max_bet, setMax_Bet] = useState('stopbet');              // On hitting max bet\r\n    const [rollmode, setrollmode] = useState('hi');\r\n    const [onWin, setOnWin] = useState(true);\r\n    const [profit, setProfit] = useState(0.0);\r\n    const [loss, setLoss] = useState(0.0);\r\n    const [stopProfit, setStopProfit] = useState('100')\r\n    const [stopLoss, setStopLoss] = useState('100')\r\n    const [increaseBetWin, setIncreaseBetWin] = useState(0.0);\r\n    const [increaseBetLose, setIncreaseBetLose] = useState(0.0);\r\n    const [changeBetOddWin, setChangeBetOddWin] = useState(betOdds);\r\n    const [changeBetOddLose, setChangeBetOddLose] = useState(betOdds);\r\n    const [basebet, setBaseBet] = useState('-')\r\n    \r\n    const [a, setA] = useState();\r\n\r\n    const MaxBet = 20;\r\n\r\n    // ####################### Roll History ##########################\r\n    const { addToast } = useToasts()\r\n    const [userId, setUserId] = useState()\r\n    const [wallet, setWallet] = useState('0.0')\r\n    const [history, setHistory] = useState(false)\r\n    const rollHistory = {\r\n        rollValue: rollValue,\r\n        win: win ? 'Win' : 'Lose',\r\n        rollOption: isHi ? 'Hi' : 'Lo',\r\n        takeaway: takeAwayAmount,\r\n        winProfit: win ? winProfit : '-',\r\n        multiplier: betOdds,\r\n        betmode: betmode,\r\n        date: new Date().toLocaleDateString(),\r\n        wallet: wallet\r\n    }\r\n\r\n    // ####################################  Handle Functions   ###########################################################\r\n\r\n    function handletakeAwayAmount(value) {\r\n        if(betmode === \"manual\") {\r\n            if(value === 'win') {\r\n                setProfit(profit+Number(winProfit))\r\n                // console.log(Number(takeAwayAmount.toFixed(2)), '+', Number(winProfit))\r\n                let tk = Math.abs(Number(winProfit));\r\n                setWallet((Number(wallet) + tk).toFixed(2))\r\n                setTakeAwayAmount(tk)\r\n                // console.log(Number(wallet) + takeAwayAmount)\r\n                setWin(true)\r\n            }\r\n            else if(value === 'lose') {\r\n                setLoss(loss+Number(winProfit))\r\n                // console.log(Number(takeAwayAmount.toFixed(2)), '-', Number(winProfit))\r\n                // setTakeAwayAmount(-Number(winProfit).toFixed(2))\r\n                // console.log(Number(wallet) + takeAwayAmount)\r\n                // setWallet(Number(wallet) + takeAwayAmount)\r\n                let tk = -Number(winProfit);\r\n                setWallet((Number(wallet) + tk).toFixed(2))\r\n                setTakeAwayAmount(tk)\r\n                setWin(false)\r\n            }\r\n        }\r\n        else if(betmode === \"auto\") {\r\n            if(value === 'win') {\r\n                // setWin(true)\r\n                setProfit(profit + Number(winProfit))\r\n                setBetAmount(Number(betAmount)+Number(increaseBetWin))\r\n                setBetOdds(changeBetOddWin)\r\n                // setIncreasedWinProfit(((betAmount)*betOdds)-(betAmount))\r\n                // console.log(Number(takeAwayAmount.toFixed(2)), '+', Number(winProfit))\r\n                // if(Number(takeAwayAmount.toFixed(2)) + Number(winProfit) === 0) \r\n                //     setTakeAwayAmount(Number(winProfit))\r\n                // else \r\n                //     setTakeAwayAmount(Number(takeAwayAmount.toFixed(2)) + Number(winProfit))  //############################# !!!!!!!!!!!!!!!!\r\n                console.log(Number(winProfit));\r\n                let tk = Math.abs(Number(winProfit));\r\n                console.log(\"hey\", tk);\r\n                setWallet((Number(wallet) + Number(tk)).toFixed(2));\r\n                setTakeAwayAmount(tk);\r\n                setWin(true);\r\n            }\r\n            else if(value === 'lose') {\r\n                // setWin(false)\r\n                setLoss(loss+Number(winProfit))\r\n                setBetAmount(Number(betAmount)+Number(increaseBetLose))\r\n                setBetOdds(changeBetOddLose)\r\n                // setIncreasedWinProfit(((betAmount)*betOdds)-(betAmount))\r\n                // console.log('increasedWinProfit',increasedWinProfit)\r\n                // console.log(Number(takeAwayAmount.toFixed(2)), '-', Number(winProfit))\r\n                // setTakeAwayAmount(Number(takeAwayAmount.toFixed(2)) - Number(winProfit))\r\n                console.log(Number(winProfit));\r\n                let tk = -Number(winProfit);\r\n                console.log(\"hey\", tk);\r\n                setWallet((Number(wallet) + Number(tk)).toFixed(2));\r\n                setTakeAwayAmount(tk);\r\n                setWin(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleWin() {            // #################### Function that handles Win conditions , triggered when Roll Value Changes  #################\r\n        if(betmode === 'auto') {\r\n            if(rollmode === 'hi') setIsHi(1)\r\n            else if(rollmode === 'lo') setIsHi(0)\r\n            else if(rollmode === 'alternate') setIsHi(!isHi)\r\n        }\r\n        if(rollValue !== 10000)\r\n            if(isHi) {\r\n                if(rollValue > winHigh) {\r\n                    // console.log(\"info: win hi\");\r\n                    addToast(`Bravo, You Win!! Roll Option: ${isHi ? 'Hi': 'Lo'}`, {\r\n                        appearance: 'success',\r\n                        autoDismiss: true\r\n                    })\r\n                    handletakeAwayAmount('win')\r\n                    // let x = win + 1;\r\n                    // setWin(x);\r\n                }\r\n                else {\r\n                    // console.log(\"info: lose hi\")\r\n                    addToast(`oopsie, You Lose!! Roll Option: ${isHi ? 'Hi': 'Lo'}`, {\r\n                        appearance: 'error',\r\n                        autoDismiss: true\r\n                    })\r\n                    handletakeAwayAmount('lose')\r\n                    // let x = lose + 1\r\n                    // setLose(x);\r\n                }\r\n            }\r\n            else {\r\n                if(rollValue < winLow) {\r\n                    // console.log(\"info: win lo\")\r\n                    addToast(`Bravo, You Win!! Roll Option: ${isHi ? 'Hi': 'Lo'}`, {\r\n                        appearance: 'success',\r\n                        autoDismiss: true\r\n                    })\r\n                    handletakeAwayAmount('win')\r\n                    // setWin(win+1)\r\n                 }\r\n                else {\r\n                    // console.log(\"info: lose lo\")\r\n                    addToast(`oopsie, You Lose!! Roll Option: ${isHi ? 'Hi': 'Lo'}`, {\r\n                        appearance: 'error',\r\n                        autoDismiss: true\r\n                    })\r\n                    handletakeAwayAmount('lose')\r\n                    // setLose(lose+1)\r\n                 }\r\n            }\r\n        // console.log(\"win \", win, \" lose \", lose );    \r\n    }\r\n\r\n    const handleHitMax = () => {\r\n        // console.log('max_bet',max_bet, 'betAmount', betAmount, \"rollValue\", rollValue)\r\n        if(max_bet === 'stopbet' && betAmount >= MaxBet) {\r\n            // console.log(\"info: Stopped Betting because MaxBet value is reached [from - On Hitting MaxBet - chosen Stop Betting]\")\r\n            addToast(\"Stopped Betting because MaxBet value is reached\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n            setIsAutoBetActive(false)\r\n            clearInterval(a);\r\n            setTimeout(() => setRollValue(10000), 2000)\r\n        }\r\n        else if(max_bet === 'basebet' && betAmount >= MaxBet) {\r\n            // console.log('info: Changed betamount to base bet [from - On Hitting MaxBet - chosen Return to BaseBet')\r\n            addToast(\"Changed betamount to Base bet\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n            setBetAmount(basebet);\r\n        }\r\n    }\r\n\r\n    const handleStopBetAfter = () => {\r\n        // console.log('profit', profit, 'loss', loss);\r\n        if(profit >= stopProfit) {   \r\n            addToast(\"Stopped Betting because Profit Threshold Reached\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n            setIsAutoBetActive(false) \r\n            clearInterval(a);\r\n            setTimeout(() => setRollValue(10000), 2000)\r\n            // console.log(\"Profit Reached Threshold [from Stop Betting After - Profit >=\")\r\n        }\r\n        if(loss >= stopLoss) {\r\n            addToast(\"Stopped Betting because Loss Threshold Reached\", {\r\n                appearance: 'info',\r\n                autoDismiss: true\r\n            })\r\n            setIsAutoBetActive(false)\r\n            clearInterval(a);\r\n            setTimeout(() => setRollValue(10000), 2000)\r\n        //    console.log(\"Loss Reached Threshold [from Stop Betting\")\r\n        }\r\n    }\r\n\r\n    function handleRoll() {                     //#################### Function that gets the RollValue from the Server ####################\r\n        roll()\r\n        .then(x => {\r\n            setRollValue(x)\r\n        });\r\n    }\r\n\r\n    const handleRadio = (e) => {               //##################### Function that handles Radio Button changes ##########################\r\n        const {name, value} = e.target;\r\n        console.log(\"name\", name, \"value\", value)\r\n        if(name === \"max_bet\") {\r\n            setMax_Bet(value);\r\n        }\r\n        else if(name === \"rollmode\") {\r\n            setrollmode(value);\r\n        }\r\n    }\r\n\r\n    const handleValidation = () => {\r\n        if(betmode === 'manual') {\r\n            if(betAmount === 0) {\r\n                addToast(\"BetAmount can't be zero. Why don't you try Free Bet ?\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betAmount < 0.01) {\r\n                addToast(\"BetAmount should be greater than 0.01\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betAmount > 20) {\r\n                addToast(\"BetAmount can't be greater than 20\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betAmount > wallet) {\r\n                addToast(\"You don't have enough money to place the bet. Deposit some money or you can always earn money from Free bet\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else return true;\r\n        }\r\n        if(betmode === 'auto') {\r\n            if(betAmount === 0) {\r\n                addToast(\"BetAmount can't be zero. Why don't you try Free Bet ?\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betAmount < 0.01) {\r\n                addToast(\"BetAmount should be greater than 0.01\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betAmount > 20) {\r\n                addToast(\"BetAmount can't be greater than 20.\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else if(betAmount > wallet) {\r\n                // console.log(\"hey\")\r\n                addToast(\"You don't have enough money to place the bet. Deposit some money or you can always earn money from Free bet\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                }) \r\n                return false\r\n            }\r\n            else if(betAmount > 20) {\r\n                // console.log(\"info: betAmount greater than max bet\")\r\n                addToast(\"BetAmount can't be greater than 20.\", {\r\n                    appearance: 'info',\r\n                    autoDismiss: true\r\n                })\r\n                return false;\r\n            }\r\n            else return true\r\n        }\r\n    }\r\n\r\n    const handleAutoBet = () => {              //#################### Function that handles Start Auto Bet Button ###########################\r\n        var x = 1;\r\n        const id = setInterval(() => {\r\n                if((x.toString() === noOfRolls)) {\r\n                    setIsAutoBetActive(false)\r\n                    clearInterval(id)\r\n                    setTimeout(() => setRollValue(10000), 2000)\r\n                }\r\n                setA(id);\r\n                handleRoll()\r\n                x++;\r\n            }, 3000);\r\n        \r\n    }\r\n\r\n    const handleBetOdds = () => {             //#################### Function that handles input Values on the Left pane #####################\r\n        if(betOdds) {\r\n            if(betOdds > 4750) \r\n                setBetOdds(4750);\r\n            else if(betOdds < 1) \r\n                setBetOdds(1);\r\n            var x = 95.00 / betOdds;\r\n            // console.log(\"betodds\", betOdds);\r\n            var y = ((((betOdds*100)/100)*betAmount)-betAmount);\r\n            // console.log(\"y\",y);\r\n            setWinChance(x.toFixed(2));\r\n            setWinLow(Math.floor(x*100));\r\n            setWinHigh(Math.floor(10000-winLow));\r\n            setWinProfit(y.toFixed(2));\r\n            // setChangeBetOddWin(betOdds);\r\n            // setChangeBetOddLose(betOdds);\r\n            // setTakeAwayAmount(0);\r\n        }\r\n        else {\r\n            setWinChance('NaN');\r\n            setWinHigh('NaN');\r\n            setWinLow('NaN');\r\n            setWinProfit(0);\r\n        }\r\n    }\r\n\r\n    const handleResultDisplay = () => {\r\n        if(win && rollValue !== 10000) {\r\n            return true\r\n        }\r\n        else if(!win && rollValue !== 10000) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const handleSetWallet = () => {\r\n        if(localStorage.getItem(\"userId\")) {\r\n            getWalletData(localStorage.getItem(\"userId\")).then(res => {\r\n                // console.log(res.data.wallet)\r\n                setWallet((res.data.wallet))\r\n            })\r\n        } \r\n    }\r\n\r\n    // #####################   Life Cycle Functions   ########################\r\n        \r\n    useEffect(() => {\r\n        handleBetOdds();\r\n    });\r\n\r\n    useEffect(() => {\r\n        const loggedInUser = localStorage.getItem('userId')\r\n        if(loggedInUser) {\r\n            setUserId(loggedInUser)\r\n        }\r\n        handleSetWallet();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handleWin()\r\n        handleHitMax()\r\n        handleStopBetAfter()\r\n        // if(betmode === \"auto\") {\r\n        //     if(!handleValidation()) {\r\n        //         clearInterval(a);\r\n        //         setRollValue(10000)\r\n        //         setIsAutoBetActive(false);\r\n        //     } \r\n        // }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [rollValue])\r\n\r\n    useEffect(() => {\r\n        // console.log('takeAwayAmount',takeAwayAmount);\r\n        // let w = Number(wallet) + Number(takeAwayAmount)\r\n        // setWallet(w.toFixed(2))\r\n        let w = Number(wallet);\r\n        // console.log(\"hey\", wallet, w);\r\n        console.log(w.toFixed(2))\r\n        if(betmode === \"auto\") {\r\n            if(!handleValidation()) {\r\n                clearInterval(a);\r\n                setTimeout(() => setRollValue(10000), 2000)\r\n                setIsAutoBetActive(false);\r\n            } \r\n        }\r\n        setWalletData(userId, w.toFixed(2));\r\n        setHistory(!history);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [wallet])\r\n\r\n    useEffect(() => {\r\n        if(betmode === 'manual' && rollValue !== 10000)\r\n            pushMultiplyBetRollHistory(userId, rollHistory)    \r\n        if(betmode === 'auto' && rollValue !== 10000) {\r\n            // console.log(rollHistory)\r\n            pushMultiplyBetRollHistory(userId, rollHistory)\r\n        }\r\n        // console.log('rollHistory',rollHistory)\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [history])\r\n\r\n    return (\r\n        <div>\r\n            <Navbar wallet={wallet} />\r\n            <div className=\"card card-body bg-gray text-white\">\r\n                <h1 className=\"text-white text-center py-4\">Multiply your Bet here</h1>\r\n                <div className=\"text-center mb-3\">\r\n                    <button className=\"btn btn-lg btn-primary mr-3\" onClick={() => {\r\n                        setBetmode('manual')\r\n                        setRollValue(10000)\r\n                        }}>Manual</button>\r\n                    <button className=\"btn btn-lg btn-primary\" onClick={() => {\r\n                        setBetmode('auto')\r\n                        setRollValue(10000)\r\n                    }}>Auto</button>\r\n                </div>\r\n                <div className=\"row\" style={{\"fontWeight\": 'lighter'}}>\r\n                    <div className=\"col-4\">\r\n                        {betmode === \"manual\"\r\n                        ?\r\n                        <>    {/*#####################################  manual bet  ######################## */}\r\n                            <label className=\"mb-3 h5\">Max Bet</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{MaxBet}</span></label><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Amount</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless\"\r\n                                value={betAmount} \r\n                                onChange={event => {\r\n                                    // if(event.target.value <= 20 && event.target.value > 0) \r\n                                    //     setBetAmount(event.target.value);\r\n                                    // // else if(event.target.value <= 0) \r\n                                    // //     setBetAmount(0.1)\r\n                                    // else\r\n                                    //     setBetAmount(20);\r\n                                    setBetAmount(event.target.value); \r\n                                    }}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Odds</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless\"  \r\n                                onChange={event => {setBetOdds(event.target.value);}}\r\n                                value={betOdds}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Win Profit</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{winProfit}</span></label><br></br>\r\n                            <label className=\"mb-4 h5\">Win Probability</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{winChance}%</span></label><br></br>\r\n                        </>\r\n                        :\r\n                        <div className=\"disabled\">  {/*######################################  auto bet  ######################## */}\r\n                            <label className=\"mb-3 h5\">Max Bet</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{MaxBet}</span></label><br></br>\r\n                            <label className=\"mb-3 h5\">Base Bet</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{basebet}</span></label><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Amount</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless disabled\"\r\n                                value={betAmount} \r\n                                onChange={event => {\r\n                                    // if(event.target.value <= 20) \r\n                                    //     setBetAmount(event.target.value);\r\n                                    // // else if(event.target.value < 0) \r\n                                    // //     setBetAmount(0.01)\r\n                                    // else\r\n                                    //     setBetAmount(20); \r\n                                    setBetAmount(event.target.value);\r\n                                    }}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Odds</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless disabled\"  \r\n                                onChange={event => {setBetOdds(event.target.value);}}\r\n                                value={betOdds}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Win Profit</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{winProfit}</span></label><br></br>\r\n                            <label className=\"mb-4 h5\">Win Probability</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{winChance}%</span></label><br></br>\r\n                            <h5 className=\"bg-dark p-2 text-center rounded\">On Hitting Max Bet</h5>\r\n                            <div className=\"bg-darkgray p-2\">\r\n                                <input type=\"radio\" value=\"basebet\" name=\"max_bet\" onChange={event => handleRadio(event)}></input>\r\n                                <label className=\"h5 mx-2\">Return to BaseBet</label><br></br>\r\n                                <input type=\"radio\" value=\"stopbet\" name=\"max_bet\" onChange={event => handleRadio(event)} defaultChecked></input>\r\n                                <label className=\"h5 mx-2\">Stop Betting</label>\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                    <div className=\"col-4 border-right border-left\">\r\n                        {betmode === \"manual\" \r\n                        ?\r\n                        <>  {/*###########################################  manual bet  ######################## */}\r\n                            <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{rollValue}</span></div>\r\n                            <div className=\"row py-4\">\r\n                                <div className=\"col-6 text-center\">\r\n                                    <button \r\n                                        className=\"btn btn-info btn-lg m-auto\" \r\n                                        value=\"high\" \r\n                                        onClick={() => {\r\n                                            if(handleValidation()) {\r\n                                                setIsHi(1);\r\n                                                setTakeAwayAmount(0);\r\n                                                handleRoll();\r\n                                            }\r\n                                        }}>ROLL HI</button>\r\n                                </div>\r\n                                <div className=\"col-6 text-center\">\r\n                                    <button \r\n                                        className=\"btn btn-info btn-lg m-auto\" \r\n                                        value=\"low\" \r\n                                        onClick={() => {\r\n                                            if(handleValidation()) {\r\n                                                setIsHi(0);\r\n                                                setTakeAwayAmount(0);\r\n                                                handleRoll()\r\n                                            }\r\n                                        }}>ROLL LO</button>\r\n                                </div>\r\n                            </div>\r\n                            <p>The roll should be greater than <span className=\"text-green\">{winHigh}</span> if you roll High and less than <span className=\"text-green\">{winLow}</span> if you roll low.</p>\r\n                            {/* {rollValue !== 10000\r\n                            ? \r\n                                handleResultDisplay()\r\n                                ?\r\n                                <>\r\n                                <h1 className=\"text-green text-center\">You Won !!</h1>\r\n                                </>\r\n                                :\r\n                                <h1 className=\"text-danger text-center\">You Lose !!</h1>\r\n                            :\r\n                            <></>\r\n                            } */}\r\n                        </>\r\n                        :\r\n                        <>  {/*##########################################  auto bet  ######################## */}\r\n                            <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{rollValue}</span></div>\r\n                            <label className=\"h5 mt-3\">Bet On</label>\r\n                            <div className=\"float-right mt-3\">\r\n                                <input type=\"radio\" name=\"rollmode\" value=\"hi\" onChange={event => {setIsHi(1); handleRadio(event)}} defaultChecked></input><label className=\"mx-2\">Hi</label>\r\n                                <input type=\"radio\" name=\"rollmode\" value=\"lo\" onChange={event => {setIsHi(0); handleRadio(event)}}></input><label className=\"mx-2\">Lo</label>\r\n                                <input type=\"radio\" name=\"rollmode\" value=\"alternate\" onChange={event => {setIsHi(1); handleRadio(event)}}></input><label className=\"mx-2\">Alternate</label>\r\n                            </div><br></br>\r\n                            <div className=\"w-100 text-center py-4\">\r\n                                {isAutoBetActive ? \r\n                                <button \r\n                                    className=\"btn btn-danger btn-lg m-auto\"\r\n                                    onClick={() => {\r\n                                        clearInterval(a);\r\n                                        setTimeout(() => setRollValue(10000), 2000)\r\n                                        setIsAutoBetActive(false);\r\n                                    }}\r\n                                >Stop Auto Bet</button>\r\n                                :\r\n                                <button \r\n                                    className=\"btn btn-info btn-lg m-auto\" \r\n                                    onClick={() => {\r\n                                        setTakeAwayAmount(0);\r\n                                        setProfit(0);\r\n                                        setLoss(0);\r\n                                        if(handleValidation()) {\r\n                                            handleAutoBet();\r\n                                            setIsAutoBetActive(true);\r\n                                        }\r\n                                        setBaseBet(betAmount);\r\n                                    }}>Start Auto Bet</button>\r\n                                }\r\n                            </div>\r\n                            <p>The roll should be greater than <span className=\"text-green\">{winHigh}</span> if you roll High and less than <span className=\"text-green\">{winLow}</span> if you roll low.</p>\r\n                            {rollValue !== 10000\r\n                            ? \r\n                                handleResultDisplay()\r\n                                ?\r\n                                <>\r\n                                <h1 className=\"text-green text-center\">You Won !!</h1>\r\n                                </>\r\n                                :\r\n                                <h1 className=\"text-danger text-center\">You Lose !!</h1>\r\n                            :\r\n                            <></>\r\n                            }\r\n                        </>}\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        {betmode === \"auto\"\r\n                        ?\r\n                        <>  {/*#########################################  auto bet  ######################## */}\r\n                            <label className=\"h5 mb-3\">Number of rolls</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless\"\r\n                                value={noOfRolls}\r\n                                onChange={event => {setNoOfRolls(event.target.value)}}></input><br></br>\r\n                            <h5 className=\"text-center bg-dark p-2 rounded\">Stop Betting After</h5>\r\n                            <div className=\"bg-darkgray p-2 mb-2\">\r\n                                <label className=\"h5 mb-3\">Profit {'>='}</label>\r\n                                <input className=\"float-right rounded borderless\" value={stopProfit} onChange={event => setStopProfit(event.target.value)} required></input><br></br>                            \r\n                                <label className=\"h5 mb-3\">Loss {'>='}</label>\r\n                                <input className=\"float-right rounded borderless\" value={stopLoss} onChange={event => setStopLoss(event.target.value)} required></input>\r\n                            </div>\r\n                            <nav className=\"nav nav-fill\">\r\n                                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                                <a className=\"nav-item nav-link p-2 bg-dark borderless text-white\" onClick={() => setOnWin(true)}>On Win</a>\r\n                                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                                <a className=\"nav-item nav-link p-2 bg-dark borderless text-white\" onClick={() => setOnWin(false)}>On Lose</a>\r\n                            </nav>\r\n                            <div className=\"bg-darkgray p-2\">\r\n                            {onWin \r\n                                ? <> {/*#############################  On win ################################# */}\r\n                                <p>Changes to make on every win</p>\r\n                                {/* <input type=\"checkbox\"></input><label className=\"mx-2 mb-3 h5\">Return to BaseBet</label><br></br> */}\r\n                                <label className=\"h5 mb-3\">Increase bet by</label>\r\n                                <input \r\n                                    className=\"float-right rounded borderless\"\r\n                                    value={increaseBetWin}\r\n                                    onChange={event => setIncreaseBetWin(event.target.value)}\r\n                                    ></input><br></br>\r\n                                <label className=\"h5 mb-3\">Change Bet Odds to</label>\r\n                                <input  \r\n                                    className=\"float-right rounded borderless\"\r\n                                    value={changeBetOddWin}\r\n                                    onChange={event => setChangeBetOddWin(event.target.value)}></input>\r\n                                </>\r\n                                : <> {/*############################# On Lose  ################################ */}\r\n                                <p>Changes to make on every lose</p>\r\n                                {/* <input type=\"checkbox\"></input><label className=\"mx-2 mb-3 h5\">Return to BaseBet</label><br></br> */}\r\n                                <label className=\"h5 mb-3\">Increase bet by</label>\r\n                                <input \r\n                                    className=\"float-right rounded borderless\"\r\n                                    value={increaseBetLose}\r\n                                    onChange={event => setIncreaseBetLose(event.target.value)}\r\n                                    ></input><br></br>\r\n                                <label className=\"h5 mb-3\">Change Bet Odds to</label>\r\n                                <input  \r\n                                    className=\"float-right rounded borderless\"\r\n                                    value={changeBetOddLose}\r\n                                    onChange={event => setChangeBetOddLose(event.target.value)}></input>\r\n                                </>\r\n                            }\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        <> {/*######################################### manual bet ######################################## */}\r\n                        </>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MultiplyBet\r\n\r\n// function HighRollers() {\r\n//     return (\r\n//         <div>\r\n//             <div className=\"card card-body bg-gray\">\r\n//                 <div className=\"row\">\r\n//                     <div className=\"col-8\">\r\n//                         <h1 className=\"text-white\">High Rollers</h1>\r\n//                         <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">10000</span></div>\r\n//                         <div className=\"row py-3\">\r\n//                             <div className=\"col-6 text-center\">\r\n//                                 <button className=\"btn btn-info btn-lg m-auto\">ROLL HI</button>\r\n//                             </div>\r\n//                             <div className=\"col-6 text-center\">\r\n//                                 <button className=\"btn btn-info btn-lg m-auto\">ROLL LO</button>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className=\"col-4\">\r\n//                         <div className=\"card card-body\">\r\n//                             <h3>How fair the game is</h3>\r\n//                             <ol>\r\n//                                 <li>Let me explain how fair we are.</li>\r\n//                                 <li>Explanory text</li>\r\n//                                 <li>and this is how its done</li>\r\n//                             </ol>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default HighRollers\r\n","import React, { useState } from 'react'\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nimport {registerUser, loginUser } from '../Helpers/service'\r\n\r\nfunction Login() {\r\n    const { addToast } = useToasts()\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [register, setRegister] = useState(false);\r\n    const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n\r\n    const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\r\n    \r\n    const registerData = {\r\n        username : username,\r\n        password: password,\r\n        wallet: '0.00'\r\n    }\r\n    const loginData = {\r\n        username: username,\r\n        password: password\r\n    }\r\n\r\n    function handleScroll ( divId ) {\r\n        const test = document.getElementById(`${divId}`);\r\n        test.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"center\"\r\n        });  \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\r\n                <a className=\"navbar-brand text-info font-weight-bolder\" href=\"/FreeBet\">\r\n                    {/* <img src={Logo} alt=\"Logo\" width=\"36\" height=\"36\" className=\"vertical-align-middle\" /> */}\r\n                    <span className=\"\">FREE MONEY</span>\r\n                </a>\r\n                <button className=\"custom-toggler navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample09\" aria-controls=\"navbarsExample09\" aria-expanded={!isNavCollapsed ? \"true\" : \"false\"} aria-label=\"Toggle navigation\" onClick={handleNavCollapse}>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className={`${isNavCollapsed ? 'collapse' : 'collapse'} navbar-collapse`} id=\"navbarsExample09\">\r\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                    <a className=\"nav-link text-info\" style={{\"cursor\": \"pointer\"}} onClick={() => handleScroll('nav2')}>nav2</a>\r\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                    <a className=\"nav-link text-info\" style={{\"cursor\": \"pointer\"}} onClick={() => handleScroll('nav3')}>nav3</a>\r\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                    <a className=\"nav-link text-info\" style={{\"cursor\": \"pointer\"}} onClick={() => handleScroll('nav4')}>nav4</a>\r\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                    <a className=\"nav-link text-info\" style={{\"cursor\": \"pointer\"}} onClick={() => setRegister(false)}>Login</a>\r\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                    <a className=\"nav-link text-info\" style={{\"cursor\": \"pointer\"}} onClick={() => setRegister(true)}>Sign up</a>\r\n                </div>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n\r\n                </div>\r\n                <div className=\"col-6\">\r\n                <div className=\"bg-gray p-3 text-white\">\r\n                    {register ? \r\n                    <h1 className=\"text-center\">Create a New Account</h1>\r\n                    :\r\n                    <h1 className=\"text-center\">Sign In to your Account</h1>}\r\n                        <label className=\"h5\">Username</label><br></br>\r\n                        <input \r\n                            className=\"my-2 rounded borderless\"\r\n                            value={username}\r\n                            onChange={event => setUsername(event.target.value)}></input><br></br>\r\n                        <label className='h5'>Password</label><br></br>\r\n                        <input \r\n                            className=\"my-2 rounded borderless\"\r\n                            value={password}\r\n                            onChange={event => setPassword(event.target.value)}></input><br></br>\r\n                        <div className=\"text-center pt-3\">\r\n                            {register \r\n                            ? \r\n                            <button \r\n                                className=\"btn btn-lg btn-info m-auto mb-2\"\r\n                                onClick={() => {\r\n                                    registerUser(registerData).then(res => {\r\n                                        // alert(res)\r\n                                        addToast(res, {\r\n                                            appearance: 'info',\r\n                                            autoDismiss: true\r\n                                        })\r\n                                    });\r\n                                    setRegister(false);\r\n                                    \r\n                                }}\r\n                                 >Register</button>\r\n                            : \r\n                            <button \r\n                                className=\"btn btn-lg btn-info m-auto mb-2\"\r\n                                onClick={() => {\r\n                                    loginUser(loginData).then(res => {\r\n                                        // console.log(res)\r\n                                        // alert(res.data.data);\r\n                                        addToast(res.data.data, {\r\n                                            appearance: 'info',\r\n                                            autoDismiss: true\r\n                                        })\r\n                                        if(res.data.data === \"Logged in Successfully\") {\r\n                                            // setUserId(res.data.users[0]._id)\r\n                                            localStorage.setItem('userId', res.data.users[0]._id)\r\n                                            // handleClose()\r\n                                            window.history.replaceState('', 'loggedIn', '/FreeBet/')\r\n                                            window.location.reload(false);\r\n                                        }\r\n                                    });\r\n                                    }}\r\n                                >Login</button>}\r\n                            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                            <a className=\"text-info nav-link \" style={{\"cursor\": \"pointer\"}} onClick={() => setRegister(true)}>Create New Account</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card my-4\" id=\"nav2\">\r\n                <div className=\"card-body\">\r\n                    <h1>nav2</h1>\r\n                    <p>Mauris placerat dolor massa, sed porttitor massa volutpat sed. Donec ac eros quam. Vestibulum non massa eu diam pulvinar sagittis suscipit at purus. In rhoncus velit sed neque vulputate, quis sollicitudin arcu egestas. Pellentesque dignissim, quam vehicula auctor lobortis, elit sapien consequat metus, ac faucibus sapien augue non neque. Vivamus sapien dolor, suscipit sed sem sed, ultrices finibus nibh. Maecenas aliquet elit id est mattis, eget eleifend ex tristique. Vivamus ac purus dignissim metus gravida ornare. Sed magna lacus, tincidunt a facilisis at, condimentum a neque. Vestibulum ornare eget sem vitae vehicula. Nam non diam a quam feugiat iaculis. Aenean luctus, lacus at iaculis laoreet, risus diam egestas mauris, at iaculis tellus mi efficitur diam. Etiam imperdiet consequat nulla. Integer molestie ipsum quis porttitor efficitur. Nulla pretium commodo massa, eu aliquam felis bibendum ac. Cras in accumsan mi, sed egestas augue.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"card my-4\" id=\"nav3\">\r\n                <div className=\"card-body\">\r\n                    <h1>nav3</h1>\r\n                    <p>Mauris placerat dolor massa, sed porttitor massa volutpat sed. Donec ac eros quam. Vestibulum non massa eu diam pulvinar sagittis suscipit at purus. In rhoncus velit sed neque vulputate, quis sollicitudin arcu egestas. Pellentesque dignissim, quam vehicula auctor lobortis, elit sapien consequat metus, ac faucibus sapien augue non neque. Vivamus sapien dolor, suscipit sed sem sed, ultrices finibus nibh. Maecenas aliquet elit id est mattis, eget eleifend ex tristique. Vivamus ac purus dignissim metus gravida ornare. Sed magna lacus, tincidunt a facilisis at, condimentum a neque. Vestibulum ornare eget sem vitae vehicula. Nam non diam a quam feugiat iaculis. Aenean luctus, lacus at iaculis laoreet, risus diam egestas mauris, at iaculis tellus mi efficitur diam. Etiam imperdiet consequat nulla. Integer molestie ipsum quis porttitor efficitur. Nulla pretium commodo massa, eu aliquam felis bibendum ac. Cras in accumsan mi, sed egestas augue.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"card my-4\" id=\"nav4\">\r\n                <div className=\"card-body\">\r\n                    <h1>nav4</h1>\r\n                    <p>Mauris placerat dolor massa, sed porttitor massa volutpat sed. Donec ac eros quam. Vestibulum non massa eu diam pulvinar sagittis suscipit at purus. In rhoncus velit sed neque vulputate, quis sollicitudin arcu egestas. Pellentesque dignissim, quam vehicula auctor lobortis, elit sapien consequat metus, ac faucibus sapien augue non neque. Vivamus sapien dolor, suscipit sed sem sed, ultrices finibus nibh. Maecenas aliquet elit id est mattis, eget eleifend ex tristique. Vivamus ac purus dignissim metus gravida ornare. Sed magna lacus, tincidunt a facilisis at, condimentum a neque. Vestibulum ornare eget sem vitae vehicula. Nam non diam a quam feugiat iaculis. Aenean luctus, lacus at iaculis laoreet, risus diam egestas mauris, at iaculis tellus mi efficitur diam. Etiam imperdiet consequat nulla. Integer molestie ipsum quis porttitor efficitur. Nulla pretium commodo massa, eu aliquam felis bibendum ac. Cras in accumsan mi, sed egestas augue.</p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","// Version 0.1.1 Perfectly working Pagination , bug fixes\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\nimport { getRollHistory , getWalletData, getMultiplyBetRollHistory} from '../Helpers/service';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport './RollHistory.css'\r\n\r\nconst PER_PAGE = 5;\r\n\r\nfunction RollHistory() {\r\n    const [rollData, setRollData] = useState([])\r\n    const [multiplierRollData, setmultiplierRollData] = useState([])\r\n    const [wallet, setWallet] = useState('0.0')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [multiplierCurrentPage, setmultiplierCurrentPage] = useState(0)\r\n\r\n    // ##########################  handle functions #################################\r\n\r\n    const handleGetRollHistory = () => {\r\n        const userId = localStorage.getItem('userId')\r\n        getRollHistory(userId)\r\n        .then(res => {\r\n            const { data } = res;\r\n            setRollData(data.[0].rollHistory);\r\n        })\r\n    }\r\n\r\n    const handleGetmultiplierRollHistory = () => {\r\n        const userId = localStorage.getItem('userId')\r\n        getMultiplyBetRollHistory(userId)\r\n        .then(res => {\r\n            const { data } = res;\r\n            setmultiplierRollData(data.[0].MultiplyBetRollHistory)\r\n        })\r\n    }\r\n\r\n    const handleSetWallet = () => {\r\n        if(localStorage.getItem(\"userId\")) {\r\n            getWalletData(localStorage.getItem(\"userId\")).then(res => {\r\n                // console.log(res.data.wallet)\r\n                setWallet((res.data.wallet))\r\n            })\r\n        } \r\n    }\r\n\r\n    const handlePageClick = ({ selected: selectedPage }) => {\r\n        setCurrentPage(selectedPage);\r\n    }\r\n\r\n    const handlemultiplierPageClick = ({ selected: selectedPage }) => {\r\n        setmultiplierCurrentPage(selectedPage)\r\n    }\r\n\r\n    // ###################################  LIFE CYCLE FUNCTIONS ##################################\r\n    useEffect(() => {\r\n        handleSetWallet()\r\n        handleGetRollHistory()\r\n        handleGetmultiplierRollHistory()\r\n    }, [])\r\n\r\n    const offset = currentPage * PER_PAGE;\r\n    const multiplierOffset = multiplierCurrentPage * PER_PAGE;\r\n\r\n    const pageData = rollData.slice(offset, offset + PER_PAGE);\r\n    const multiplierPageData = multiplierRollData.slice(multiplierOffset, multiplierOffset + PER_PAGE);\r\n\r\n    const pageCount = Math.ceil(rollData.length / PER_PAGE);\r\n    const multiplierPageCount = Math.ceil(multiplierRollData.length / PER_PAGE)\r\n\r\n    return (\r\n        <div>\r\n            <Navbar wallet={wallet}/>\r\n            <p className=\"display-4 text-center p-4\">Check Out your Roll History here</p>\r\n            <div className=\"card card-body bg-gray text-white mb-4\">\r\n                <h1 className=\"text-white\">FreeBet</h1>\r\n                <table className=\"table table-bordered m-auto text-center\">\r\n                    <thead>\r\n                        <th>SNO</th>\r\n                        <th>RollValue</th>\r\n                        <th>Win/Lose</th>\r\n                        <th>Roll Takeaway</th>\r\n                        <th>Date</th>\r\n                        <th>Wallet</th>\r\n                    </thead>\r\n                    {pageData.map((item, index) => {\r\n                    return (\r\n                    <tbody>\r\n                        <th>{index+1}</th>\r\n                        <td>{item.rollValue}</td>\r\n                        {item.win === 'Win' ?\r\n                            <td className=\"text-green\">{item.win}</td>\r\n                        :\r\n                            <td className=\"text-danger\">{item.win}</td>\r\n                        }\r\n                        <td>{item.takeaway}</td>\r\n                        <td>{item.date}</td>\r\n                        <td>{item.wallet}</td>\r\n                    </tbody>)})}\r\n                </table> \r\n                <ReactPaginate previousLabel={\"prev\"} \r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={pageCount}\r\n                    marginPagesDisplayed ={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={handlePageClick}\r\n                    containerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}\r\n                />\r\n\r\n            </div>\r\n\r\n            <div className=\"card card-body bg-gray text-white\">\r\n                <h1 className=\"text-white\">Multiply Bet</h1>\r\n                <table className=\"table table-bordered m-auto text-center\">\r\n                    <thead>\r\n                        <th>SNO</th>\r\n                        <th>RollValue</th>\r\n                        <th>Betmode</th>\r\n                        <th>Multiplier</th>\r\n                        <th>Roll Option</th>\r\n                        <th>Win/Lose</th>\r\n                        <th>Win Profit</th>\r\n                        <th>Roll Takeaway</th>\r\n                        <th>Date</th>\r\n                        <th>Wallet</th>\r\n                    </thead>\r\n                    {multiplierPageData.map((item, index) => {\r\n                    return (\r\n                    <tbody>\r\n                        <th>{index+1}</th>\r\n                        <td>{item.rollValue}</td>\r\n                        <td>{item.betmode}</td>\r\n                        <td>{item.multiplier}</td>\r\n                        <td>{item.rollOption}</td>\r\n                        {item.win === 'Win' ?\r\n                            <td className=\"text-green\">{item.win}</td>\r\n                        :\r\n                            <td className=\"text-danger\">{item.win}</td>\r\n                        }\r\n                        <td>{item.winProfit}</td>\r\n                        <td>{item.takeaway}</td>\r\n                        <td>{item.date}</td>\r\n                        <td>{item.wallet}</td>\r\n                    </tbody>)})}\r\n                </table> \r\n                <ReactPaginate previousLabel={\"prev\"} \r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={multiplierPageCount}\r\n                    marginPagesDisplayed ={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={handlemultiplierPageClick}\r\n                    containerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RollHistory\r\n","// import logo from './logo.svg';\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { ToastProvider } from 'react-toast-notifications'\n\nimport './App.css';\n\nimport Home from './components/Home/Home';\nimport MultiplyBet from './components/MultiplyBet/MultiplyBet';\nimport Login from './components/Login/Login';\nimport RollHistory from './components/RollHistory/RollHistory';\n\n// const wallet = '0.00';\n\nconst App = () => {\n  // const [wallet, setWallet] = useState(0.00)\n  // console.log(\"wallet\", wallet)\n  return(\n    <ToastProvider>\n      <Switch>\n        {/* <Route path='/' component={() => <Home wallet={wallet} setWallet={wallet => setWallet(wallet)}/>} exact /> */}\n        <Route path='/' component={Home} exact/>\n        <Route path='/multiplybet' component={MultiplyBet} />\n        <Route path='/rollHistory' component={RollHistory} />\n        <Route path='/login' component={Login} />\n      </Switch>\n    </ToastProvider>\n  )\n}\n\n\nexport default App;\n\n// Previous build\n// function App() {\n  //   return (\n  //     <div className=\"App\">\n  //       <header className=\"App-header\">\n  //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //         <p>\n  //           Edit <code>src/App.js</code> and save to reload.\n  //         </p>\n  //         <a\n  //           className=\"App-link\"\n  //           href=\"https://reactjs.org\"\n  //           target=\"_blank\"\n  //           rel=\"noopener noreferrer\"\n  //         >\n  //           Learn React\n  //         </a>\n  //       </header>\n  //     </div>\n  //   );\n  // }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </HashRouter>\n    {/* <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}