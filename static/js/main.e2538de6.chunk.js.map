{"version":3,"sources":["components/Home/24-money.gif","components/Navbar/Navbar.jsx","components/Helpers/service.js","components/Home/Home.jsx","components/MultiplyBet/MultiplyBet.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","isNavCollapsed","setIsNavCollapsed","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","id","roll","a","response","axios","get","then","res","data","Home","faucet","setFaucet","src","transaction","width","height","alt","class","scope","x","MultiplyBet","rollValue","setRollValue","betmode","setBetmode","betAmount","setBetAmount","betOdds","setBetOdds","winChance","setWinChance","winHigh","setWinHigh","winLow","setWinLow","winProfit","setWinProfit","takeAwayAmount","setTakeAwayAmount","isHi","setIsHi","noOfRolls","setNoOfRolls","max_bet","setMax_Bet","rollmode","setrollmode","onWin","setOnWin","profit","setProfit","loss","setLoss","stopProfit","setStopProfit","stopLoss","setStopLoss","increaseBetWin","setIncreaseBetWin","increaseBetLose","setIncreaseBetLose","changeBetOddWin","setChangeBetOddWin","changeBetOddLose","setChangeBetOddLose","basebet","setBaseBet","setA","handletakeAwayAmount","value","Number","console","log","toFixed","handleRoll","handleRadio","e","target","name","useEffect","y","Math","floor","handleBetOdds","clearInterval","style","readOnly","onChange","event","defaultChecked","setInterval","toString","handleAutoBet","required","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.e2538de6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/24-money.66f55454.gif\";","import React, { useState } from 'react'\r\n\r\nfunction Navbar() {\r\n    const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n\r\n    const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\r\n                <a className=\"navbar-brand text-info font-weight-bolder\" href=\"/FreeBet\">\r\n                    {/* <img src={Logo} alt=\"Logo\" width=\"36\" height=\"36\" className=\"vertical-align-middle\" /> */}\r\n                    <span className=\"\">FREE MONEY</span>\r\n                </a>\r\n                <button className=\"custom-toggler navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample09\" aria-controls=\"navbarsExample09\" aria-expanded={!isNavCollapsed ? \"true\" : \"false\"} aria-label=\"Toggle navigation\" onClick={handleNavCollapse}>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className={`${isNavCollapsed ? 'collapse' : 'collapse'} navbar-collapse`} id=\"navbarsExample09\">\r\n                    <a className=\"nav-link text-info\" href=\"/freebet\">Free bet</a>\r\n                    <a className=\"nav-link text-info\" href=\"/FreeBet/multiplybet\">Multiply bet</a>\r\n                    <a href=\"/lottery\" className=\"nav-link text-info\" >Lottery</a>\r\n                    <a href=\"/wallet\" className=\"nav-link text-info\">$0.000000001</a>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import axios from 'axios';\r\n\r\nexport async function roll() {\r\n    // const response = await fetch('http://localhost:3080/api/roll', {\r\n    //     mode: \"no-cors\"\r\n    // });\r\n    // // console.log(response)\r\n    // return await response;\r\n    // const response = axios.get('https://freebet-server.herokuapp.com/api/roll')\r\n    const response = axios.get('http://localhost:3080/api/roll')\r\n                    .then(res => {\r\n                        return res.data.data;\r\n                    })\r\n    return await response;\r\n}","import React, { useState } from 'react'\r\n\r\nimport './home.css';\r\nimport transaction from './24-money.gif';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport { roll } from '../Helpers/service';\r\n\r\nfunction Home() {\r\n    const [faucet, setFaucet] = useState(10000);\r\n\r\n    const handleRoll = () => {\r\n        roll()\r\n        .then(x => {\r\n            setFaucet(x);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <nav className=\"nav-bar\">\r\n                <span className=\"fs-4 nav-item\">FREE MONEY</span>\r\n                <span className=\"float-right nav-item\">\r\n                    <div class=\"pos-f-t\">\r\n                    <div class=\"collapse\" id=\"navbarToggleExternalContent\">\r\n                        <div class=\"bg-dark p-4\">\r\n                        <h4 class=\"text-white\">Collapsed content</h4>\r\n                        <span class=\"text-muted\">Toggleable via the navbar brand.</span>\r\n                        </div>\r\n                    </div>\r\n                    <nav class=\"navbar navbar-dark bg-dark\">\r\n                        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggleExternalContent\" aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                    </nav>\r\n                    </div>\r\n                </span>\r\n                <span className=\"float-right nav-item\">$0.000000000</span>\r\n            </nav> */}\r\n            <Navbar />\r\n            <div className=\"row p-4\">\r\n                <div className=\"col-6 p-4 text-center\"><img src={transaction} width=\"300\" height=\"300\" alt=\"transaction\"/></div>\r\n                <div className=\"col-6\">\r\n                    <span className=\"display-3\">Make your transactions in a snap</span>\r\n                    <div className=\"row py-3 my-4\">\r\n                        <div className=\"col-6 text-center\">\r\n                            <button className=\"btn btn-info btn-lg mx-3\">Deposit</button>\r\n                            <button className=\"btn btn-info btn-lg mx-3\">Withdraw</button>\r\n                        </div>\r\n                        <div className=\"col-6 text-center\">\r\n                            {/* <button className=\"btn btn-info btn-lg m-auto\">Withdraw</button> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-3 bg-gray text-center text-white\">\r\n                <span className=\"display-4\">Get Free Money For Every 45 Minutes</span>\r\n            </div>\r\n            <div className=\"my-4 px-4 w-100\">\r\n                <table class=\"table table-bordered m-auto w-50\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">Roll</th>\r\n                        <th scope=\"col\">Prize</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\">10000</th>\r\n                            <td>1.0000</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">9999-9800</th>\r\n                            <td>0.0090</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">9800-1000</th>\r\n                            <td>0.0009</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"w-100 text-center bg-gray p-4 my-4\">\r\n                    <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{faucet}</span></div><br></br>\r\n                    \r\n                    <button className=\"btn btn-primary btn-lg m-2\" onClick={() => handleRoll()}>ROLL</button>\r\n                    \r\n                 </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n\r\n// Version 1.0.1\r\n\r\n\r\n// import React, { useState } from 'react'\r\n// import ReCAPTCHA from 'react-google-recaptcha';\r\n\r\n// import './home.css';\r\n// import transaction from './24-money.gif';\r\n// import { roll } from '../Helpers/service';\r\n\r\n// function Home() {\r\n//     const [isNavCollapsed, setIsNavCollapsed] = useState(true);\r\n//     const [faucet, setFaucet] = useState(10000);\r\n//     const reCaptchaRef = React.createRef();\r\n\r\n//     const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\r\n\r\n//     const handleRoll = () => {\r\n//         console.log(\"its working\")\r\n//         roll()\r\n//         .then(x => {\r\n//             // console.log(x);\r\n//             setFaucet(x);\r\n//         });\r\n//     }\r\n\r\n//     function onSubmit () {\r\n//         const recaptchaValue = reCaptchaRef.current.getValue();\r\n//         this.props.onSubmit(recaptchaValue);\r\n//     }\r\n\r\n//     function onChange (value) {\r\n//         console.log(\"CAPTCHA value : \", value)\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <nav class=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\r\n//                 <a class=\"navbar-brand text-info font-weight-bolder\" href=\"/\">\r\n//                     {/* <img src={Logo} alt=\"Logo\" width=\"36\" height=\"36\" className=\"vertical-align-middle\" /> */}\r\n//                     <span className=\"\">FREE MONEY</span>\r\n//                 </a>\r\n//                 <button class=\"custom-toggler navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample09\" aria-controls=\"navbarsExample09\" aria-expanded={!isNavCollapsed ? \"true\" : \"false\"} aria-label=\"Toggle navigation\" onClick={handleNavCollapse}>\r\n//                     <span class=\"navbar-toggler-icon\"></span>\r\n//                 </button>\r\n\r\n//                 <div class={`${isNavCollapsed ? 'collapse' : 'collapse'} navbar-collapse`} id=\"navbarsExample09\">\r\n//                 {/* <div class=\"navbar-collapse\" id=\"navbarsExample09\"> */}\r\n//                     <a className=\"nav-link text-info\" href=\"/contact\">Free bet</a>\r\n//                     <a className=\"nav-link text-info\" href=\"/login\">Multiply bet</a>\r\n//                     <a href=\"/request-demo\" className=\"nav-link text-info\" >Lottery</a>\r\n//                     <a href=\"/wallet\" className=\"nav-link text-info\">$0.000000001</a>\r\n//                 </div>\r\n//             </nav>\r\n//             {/* <nav className=\"nav-bar\">\r\n//                 <span className=\"fs-4 nav-item\">FREE MONEY</span>\r\n//                 <span className=\"float-right nav-item\">\r\n//                     <div class=\"pos-f-t\">\r\n//                     <div class=\"collapse\" id=\"navbarToggleExternalContent\">\r\n//                         <div class=\"bg-dark p-4\">\r\n//                         <h4 class=\"text-white\">Collapsed content</h4>\r\n//                         <span class=\"text-muted\">Toggleable via the navbar brand.</span>\r\n//                         </div>\r\n//                     </div>\r\n//                     <nav class=\"navbar navbar-dark bg-dark\">\r\n//                         <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggleExternalContent\" aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n//                         <span class=\"navbar-toggler-icon\"></span>\r\n//                         </button>\r\n//                     </nav>\r\n//                     </div>\r\n//                 </span>\r\n//                 <span className=\"float-right nav-item\">$0.000000000</span>\r\n//             </nav> */}\r\n//             <div className=\"row p-4\">\r\n//                 <div className=\"col-6 p-4 text-center\"><img src={transaction} width=\"300\" height=\"300\" alt=\"transaction\"/></div>\r\n//                 <div className=\"col-6\">\r\n//                     <span className=\"display-3\">Make your transactions in a snap</span>\r\n//                     <div className=\"row py-3 my-4\">\r\n//                         <div className=\"col-6 text-center\">\r\n//                             <button className=\"btn btn-info btn-lg mx-3\">Deposit</button>\r\n//                             <button className=\"btn btn-info btn-lg mx-3\">Withdraw</button>\r\n//                         </div>\r\n//                         <div className=\"col-6 text-center\">\r\n//                             {/* <button className=\"btn btn-info btn-lg m-auto\">Withdraw</button> */}\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             <div className=\"p-3 bg-gray text-center text-white\">\r\n//                 <span className=\"display-4\">Get Free Money For Every 45 Minutes</span>\r\n//             </div>\r\n//             <div className=\"my-4 px-4 w-100\">\r\n//                 <table class=\"table table-bordered m-auto w-50\">\r\n//                     <thead>\r\n//                         <tr>\r\n//                         <th scope=\"col\">Roll</th>\r\n//                         <th scope=\"col\">Prize</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         <tr>\r\n//                             <th scope=\"row\">10000</th>\r\n//                             <td>1.0000</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th scope=\"row\">9999-9800</th>\r\n//                             <td>0.0090</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <th scope=\"row\">9800-1000</th>\r\n//                             <td>0.0009</td>\r\n//                         </tr>\r\n//                     </tbody>\r\n//                 </table>\r\n//                 <div className=\"w-100 text-center bg-gray p-4 my-4\">\r\n//                     <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{faucet}</span></div><br></br>\r\n//                     <form onSubmit={onSubmit} className=\"text-center\">\r\n//                     <ReCAPTCHA\r\n                        \r\n//                         ref={reCaptchaRef}\r\n//                         sitekey=\"6Lc__qsaAAAAANZ2FqwF3PCF45gwhSPP-uGLisD8\"\r\n//                         onChange={onChange}\r\n//                     />\r\n//                     <button className=\"btn btn-primary btn-lg m-2\" onClick={() => handleRoll()}>ROLL</button>\r\n//                     </form>\r\n//                  </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Home\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport './MultiplyBet.css';\r\nimport Navbar from './../Navbar/Navbar';\r\nimport { roll } from '../Helpers/service';\r\n\r\n// eslint-disable-next-line no-lone-blocks\r\n{/* <ul class=\"nav nav-tabs\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" href=\"#\">Active</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"#\">Link</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"#\">Link</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n  </li>\r\n</ul> */}\r\n\r\nfunction MultiplyBet() {\r\n    // ###################################      manual bet options  ###################################################\r\n    const [rollValue, setRollValue] = useState(10000);\r\n    const [betmode, setBetmode] = useState('manual');\r\n    const [betAmount, setBetAmount] = useState(0.1);\r\n    const [betOdds, setBetOdds] = useState('2');\r\n    const [winChance, setWinChance] = useState('47.5');\r\n    const [winHigh, setWinHigh] = useState('5250');\r\n    const [winLow, setWinLow] = useState('4750');\r\n    const [winProfit, setWinProfit] = useState(0.2);\r\n    const [takeAwayAmount, setTakeAwayAmount] = useState(0);\r\n\r\n    // ####################################     auto bet options    ###################################################\r\n    const [isHi, setIsHi] = useState(1); \r\n    const [noOfRolls, setNoOfRolls] = useState('1000');\r\n    const [max_bet, setMax_Bet] = useState('stopbet');              // On hitting max bet\r\n    const [rollmode, setrollmode] = useState('hi');\r\n    const [onWin, setOnWin] = useState(true);\r\n    const [profit, setProfit] = useState(0.0);\r\n    const [loss, setLoss] = useState(0.0);\r\n    const [stopProfit, setStopProfit] = useState('100')\r\n    const [stopLoss, setStopLoss] = useState('100')\r\n    const [increaseBetWin, setIncreaseBetWin] = useState(0.0);\r\n    const [increaseBetLose, setIncreaseBetLose] = useState(0.0);\r\n    const [changeBetOddWin, setChangeBetOddWin] = useState(betOdds);\r\n    const [changeBetOddLose, setChangeBetOddLose] = useState(betOdds);\r\n    const [basebet, setBaseBet] = useState('')\r\n    \r\n    const [a, setA] = useState();\r\n\r\n    const MaxBet = 20;\r\n\r\n    // ####################################  Handle Functions   ###########################################################\r\n\r\n    function handletakeAwayAmount(value) {\r\n        if(betmode === \"manual\") {\r\n            if(value === 'win') {\r\n                setProfit(profit+Number(winProfit))\r\n                console.log(Number(takeAwayAmount.toFixed(2)), '+', Number(winProfit))\r\n                setTakeAwayAmount(Number(takeAwayAmount.toFixed(2)) + Number(winProfit))\r\n            }\r\n            else if(value === 'lose') {\r\n                setLoss(loss+Number(winProfit))\r\n                console.log(Number(takeAwayAmount.toFixed(2)), '-', Number(winProfit))\r\n                setTakeAwayAmount(Number(takeAwayAmount.toFixed(2)) - Number(winProfit))\r\n            }\r\n        }\r\n        else if(betmode === \"auto\") {\r\n            if(value === 'win') {\r\n                // setWin(true)\r\n                setProfit(profit + Number(winProfit))\r\n                setBetAmount(Number(betAmount)+Number(increaseBetWin))\r\n                setBetOdds(changeBetOddWin)\r\n                // setIncreasedWinProfit(((betAmount)*betOdds)-(betAmount))\r\n                // console.log(Number(takeAwayAmount.toFixed(2)), '+', Number(winProfit))\r\n                setTakeAwayAmount(Number(takeAwayAmount.toFixed(2)) + Number(winProfit))  //############################# !!!!!!!!!!!!!!!!\r\n            }\r\n            else if(value === 'lose') {\r\n                // setWin(false)\r\n                setLoss(loss+Number(winProfit))\r\n                setBetAmount(Number(betAmount)+Number(increaseBetLose))\r\n                setBetOdds(changeBetOddLose)\r\n                // setIncreasedWinProfit(((betAmount)*betOdds)-(betAmount))\r\n                // console.log('increasedWinProfit',increasedWinProfit)\r\n                // console.log(Number(takeAwayAmount.toFixed(2)), '-', Number(winProfit))\r\n                setTakeAwayAmount(Number(takeAwayAmount.toFixed(2)) - Number(winProfit))\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleWin() {            // #################### Function that handles Win conditions , triggered when Roll Value Changes  #################\r\n        if(betmode === 'auto') {\r\n            if(rollmode === 'hi') setIsHi(1)\r\n            else if(rollmode === 'lo') setIsHi(0)\r\n            else if(rollmode === 'alternate') setIsHi(!isHi)\r\n        }\r\n        if(rollValue !== 10000)\r\n            if(isHi) {\r\n                if(rollValue > winHigh) {\r\n                    console.log(\"info: win hi\");\r\n                    handletakeAwayAmount('win')\r\n                    // let x = win + 1;\r\n                    // setWin(x);\r\n                }\r\n                else {\r\n                    console.log(\"info: lose hi\")\r\n                    handletakeAwayAmount('lose')\r\n                    // let x = lose + 1\r\n                    // setLose(x);\r\n                }\r\n            }\r\n            else {\r\n                if(rollValue < winLow) {\r\n                    console.log(\"info: win lo\")\r\n                    handletakeAwayAmount('win')\r\n                    // setWin(win+1)\r\n                 }\r\n                else {\r\n                    console.log(\"info: lose lo\")\r\n                    handletakeAwayAmount('lose')\r\n                    // setLose(lose+1)\r\n                 }\r\n            }\r\n        // console.log(\"win \", win, \" lose \", lose );    \r\n    }\r\n\r\n    const handleHitMax = () => {\r\n        console.log('max_bet',max_bet, 'betAmount', betAmount, \"rollValue\", rollValue)\r\n        if(max_bet === 'stopbet' && betAmount >= MaxBet) {\r\n            console.log(\"info: Stopped Betting because MaxBet value is reached [from - On Hitting MaxBet - chosen Stop Betting]\")\r\n            clearInterval(a);\r\n        }\r\n        else if(max_bet === 'basebet' && betAmount >= MaxBet) {\r\n            console.log('info: Changed betamount to base bet [from - On Hitting MaxBet - chosen Return to BaseBet')\r\n            setBetAmount(basebet);\r\n        }\r\n    }\r\n\r\n    const handleStopBetAfter = () => {\r\n        console.log('profit', profit, 'loss', loss);\r\n        if(profit >= stopProfit) {    \r\n            clearInterval(a);\r\n            console.log(\"Profit Reached Threshold [from Stop Betting After - Profit >=\")\r\n        }\r\n        if(loss >= stopLoss) {\r\n           clearInterval(a);\r\n           console.log(\"Loss Reached Threshold [from Stop Betting\")\r\n        }\r\n    }\r\n\r\n    function handleRoll() {                     //#################### Function that gets the RollValue from the Server ####################\r\n        roll()\r\n        .then(x => {\r\n            setRollValue(x)\r\n        });\r\n    }\r\n\r\n    const handleRadio = (e) => {               //##################### Function that handles Radio Button changes ##########################\r\n        const {name, value} = e.target;\r\n        console.log(\"name\", name, \"value\", value)\r\n        if(name === \"max_bet\") {\r\n            setMax_Bet(value);\r\n        }\r\n        else if(name === \"rollmode\") {\r\n            setrollmode(value);\r\n        }\r\n    }\r\n\r\n    const handleValidation = () => {\r\n        if(betAmount > 20) {\r\n            console.log(\"info: betAmount greater than max bet\")\r\n            return false;\r\n        }\r\n        else return true\r\n    }\r\n\r\n    const handleAutoBet = () => {              //#################### Function that handles Start Auto Bet Button ###########################\r\n        var x = 1;\r\n        const id = setInterval(() => {\r\n                if((x.toString() === noOfRolls)) {\r\n                    clearInterval(id)\r\n                }\r\n                setA(id);\r\n                // handleValidation();\r\n                handleRoll()\r\n                x++;\r\n            }, 3000);\r\n        \r\n    }\r\n\r\n    const handleBetOdds = () => {             //#################### Function that handles input Values on the Left pane #####################\r\n        if(betOdds) {\r\n            if(betOdds > 4750) \r\n                setBetOdds(4750);\r\n            else if(betOdds < 1) \r\n                setBetOdds(1);\r\n            var x = 95.00 / betOdds;\r\n            // console.log(\"betodds\", betOdds);\r\n            var y = ((((betOdds*100)/100)*betAmount)-betAmount);\r\n            // console.log(\"y\",y);\r\n            setWinChance(x.toFixed(2));\r\n            setWinLow(Math.floor(x*100));\r\n            setWinHigh(Math.floor(10000-winLow));\r\n            setWinProfit(y.toFixed(2));\r\n            // setChangeBetOddWin(betOdds);\r\n            // setChangeBetOddLose(betOdds);\r\n            // setTakeAwayAmount(0);\r\n        }\r\n        else {\r\n            setWinChance('NaN');\r\n            setWinHigh('NaN');\r\n            setWinLow('NaN');\r\n            setWinProfit(0);\r\n        }\r\n    }\r\n\r\n    // #####################   Life Cycle Functions   ########################\r\n        \r\n    useEffect(() => {\r\n        handleBetOdds();\r\n    });\r\n\r\n    useEffect(() => {\r\n        handleWin()\r\n        handleHitMax()\r\n        handleStopBetAfter()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [rollValue])\r\n\r\n    useEffect(() => {\r\n        console.log('takeAwayAmount',takeAwayAmount);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [takeAwayAmount])\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"card card-body bg-gray text-white\">\r\n                <h1 className=\"text-white text-center py-4\">Multiply your Bet here</h1>\r\n                <div className=\"text-center mb-3\">\r\n                    <button className=\"btn btn-lg btn-primary mr-3\" onClick={() => setBetmode('manual')}>Manual</button>\r\n                    <button className=\"btn btn-lg btn-primary\" onClick={() => setBetmode('auto')}>Auto</button>\r\n                </div>\r\n                <div className=\"row\" style={{\"fontWeight\": 'lighter'}}>\r\n                    <div className=\"col-4\">\r\n                        {betmode === \"manual\"\r\n                        ?\r\n                        <>    {/*#####################################  manual bet  ######################## */}\r\n                            <label className=\"mb-3 h5\">Max Bet</label>\r\n                            <input className=\"float-right rounded borderless\" value={MaxBet} readOnly></input><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Amount</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless\"\r\n                                value={betAmount} \r\n                                onChange={event => {\r\n                                    if(event.target.value <= 20) \r\n                                        setBetAmount(event.target.value);\r\n                                    else\r\n                                        setBetAmount(20); }}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Odds</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless\"  \r\n                                onChange={event => {setBetOdds(event.target.value);}}\r\n                                value={betOdds}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Win Profit</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{winProfit}</span></label><br></br>\r\n                            <label className=\"mb-4 h5\">Win Probability</label>\r\n                            <input className=\"float-right rounded borderless\" value={winChance} readOnly></input><br></br>\r\n                        </>\r\n                        :\r\n                        <>  {/*######################################  auto bet  ######################## */}\r\n                            <label className=\"mb-3 h5\">Max Bet</label>\r\n                            <input className=\"float-right rounded borderless\" value={MaxBet} readOnly></input><br></br>\r\n                            <label className=\"mb-3 h5\">Base Bet</label>\r\n                            <input className=\"float-right rounded borderless\" value={basebet} readOnly></input><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Amount</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless\"\r\n                                value={betAmount} \r\n                                onChange={event => {\r\n                                    if(event.target.value <= 20) \r\n                                        setBetAmount(event.target.value);\r\n                                    else\r\n                                        setBetAmount(20); }}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Bet Odds</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless\"  \r\n                                onChange={event => {setBetOdds(event.target.value);}}\r\n                                value={betOdds}\r\n                            ></input><br></br>\r\n                            <label className=\"mb-3 h5\">Win Profit</label>\r\n                            <label className=\"float-right mr-4\"><span className=\"text-gold h5\">{winProfit}</span></label><br></br>\r\n                            <label className=\"mb-4 h5\">Win Probability</label>\r\n                            <input className=\"float-right rounded borderless\" value={winChance} readOnly></input><br></br>\r\n                            <h5 className=\"bg-dark p-2 text-center rounded\">On Hitting Max Bet</h5>\r\n                            <div className=\"bg-darkgray p-2\">\r\n                                <input type=\"radio\" value=\"basebet\" name=\"max_bet\" onChange={event => handleRadio(event)}></input>\r\n                                <label className=\"h5 mx-2\">Return to BaseBet</label><br></br>\r\n                                <input type=\"radio\" value=\"stopbet\" name=\"max_bet\" onChange={event => handleRadio(event)} defaultChecked></input>\r\n                                <label className=\"h5 mx-2\">Stop Betting</label>\r\n                            </div>\r\n                        </>}\r\n                    </div>\r\n                    <div className=\"col-4 border-right border-left\">\r\n                        {betmode === \"manual\" \r\n                        ?\r\n                        <>  {/*###########################################  manual bet  ######################## */}\r\n                            <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{rollValue}</span></div>\r\n                            <div className=\"row py-4\">\r\n                                <div className=\"col-6 text-center\">\r\n                                    <button \r\n                                        className=\"btn btn-info btn-lg m-auto\" \r\n                                        value=\"high\" \r\n                                        onClick={() => {\r\n                                            setIsHi(1);\r\n                                            setTakeAwayAmount(0);\r\n                                            handleRoll();\r\n                                        }}>ROLL HI</button>\r\n                                </div>\r\n                                <div className=\"col-6 text-center\">\r\n                                    <button className=\"btn btn-info btn-lg m-auto\" value=\"low\" onClick={() => {setIsHi(0);setTakeAwayAmount(0);handleRoll()}}>ROLL LO</button>\r\n                                </div>\r\n                            </div>\r\n                            <p>The roll should be greater than <span className=\"text-green\">{winHigh}</span> if you roll High and less than <span className=\"text-green\">{winLow}</span> if you roll low.</p>\r\n                        </>\r\n                        :\r\n                        <>  {/*##########################################  auto bet  ######################## */}\r\n                            <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">{rollValue}</span></div>\r\n                            <div className=\"w-100 text-center py-4\">\r\n                                <button \r\n                                    className=\"btn btn-info btn-lg m-auto\" \r\n                                    onClick={() => {\r\n                                        setTakeAwayAmount(0);\r\n                                        setProfit(0);\r\n                                        setLoss(0);\r\n                                        if(handleValidation()) {\r\n                                            handleAutoBet();\r\n                                        }\r\n                                        setBaseBet(betAmount);\r\n                                    }}>Start Auto Bet</button>\r\n                            </div>\r\n                            <p>The roll should be greater than <span className=\"text-green\">{winHigh}</span> if you roll High and less than <span className=\"text-green\">{winLow}</span> if you roll low.</p>\r\n                        </>}\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        {betmode === \"auto\"\r\n                        ?\r\n                        <>  {/*#########################################  auto bet  ######################## */}\r\n                            <label className=\"h5 mb-3\">Bet On</label>\r\n                            <div className=\"float-right\">\r\n                                <input type=\"radio\" name=\"rollmode\" value=\"hi\" onChange={event => {setIsHi(1); handleRadio(event)}} defaultChecked></input><label className=\"mx-2\">Hi</label>\r\n                                <input type=\"radio\" name=\"rollmode\" value=\"lo\" onChange={event => {setIsHi(0); handleRadio(event)}}></input><label className=\"mx-2\">Lo</label>\r\n                                <input type=\"radio\" name=\"rollmode\" value=\"alternate\" onChange={event => {setIsHi(1); handleRadio(event)}}></input><label className=\"mx-2\">Alternate</label>\r\n                            </div><br></br>\r\n                            <label className=\"h5 mb-3\">Number of rolls</label>\r\n                            <input \r\n                                className=\"float-right rounded borderless\"\r\n                                value={noOfRolls}\r\n                                onChange={event => {setNoOfRolls(event.target.value)}}></input><br></br>\r\n                            <h5 className=\"text-center bg-dark p-2 rounded\">Stop Betting After</h5>\r\n                            <div className=\"bg-darkgray p-2 mb-2\">\r\n                                <label className=\"h5 mb-3\">Profit {'>='}</label>\r\n                                <input className=\"float-right rounded borderless\" value={stopProfit} onChange={event => setStopProfit(event.target.value)} required></input><br></br>                            \r\n                                <label className=\"h5 mb-3\">Loss {'>='}</label>\r\n                                <input className=\"float-right rounded borderless\" value={stopLoss} onChange={event => setStopLoss(event.target.value)} required></input>\r\n                            </div>\r\n                            <nav className=\"nav nav-fill\">\r\n                                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                                <a className=\"nav-item nav-link p-2 bg-dark borderless text-white\" onClick={() => setOnWin(true)}>On Win</a>\r\n                                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                                <a className=\"nav-item nav-link p-2 bg-dark borderless text-white\" onClick={() => setOnWin(false)}>On Lose</a>\r\n                            </nav>\r\n                            <div className=\"bg-darkgray p-2\">\r\n                            {onWin \r\n                                ? <> {/*#############################  On win ################################# */}\r\n                                <p>Changes to make on every win</p>\r\n                                {/* <input type=\"checkbox\"></input><label className=\"mx-2 mb-3 h5\">Return to BaseBet</label><br></br> */}\r\n                                <label className=\"h5 mb-3\">Increase bet by</label>\r\n                                <input \r\n                                    className=\"float-right rounded borderless\"\r\n                                    value={increaseBetWin}\r\n                                    onChange={event => setIncreaseBetWin(event.target.value)}\r\n                                    ></input><br></br>\r\n                                <label className=\"h5 mb-3\">Change Bet Odds to</label>\r\n                                <input  \r\n                                    className=\"float-right rounded borderless\"\r\n                                    value={changeBetOddWin}\r\n                                    onChange={event => setChangeBetOddWin(event.target.value)}></input>\r\n                                </>\r\n                                : <> {/*############################# On Lose  ################################ */}\r\n                                <p>Changes to make on every lose</p>\r\n                                {/* <input type=\"checkbox\"></input><label className=\"mx-2 mb-3 h5\">Return to BaseBet</label><br></br> */}\r\n                                <label className=\"h5 mb-3\">Increase bet by</label>\r\n                                <input \r\n                                    className=\"float-right rounded borderless\"\r\n                                    value={increaseBetLose}\r\n                                    onChange={event => setIncreaseBetLose(event.target.value)}\r\n                                    ></input><br></br>\r\n                                <label className=\"h5 mb-3\">Change Bet Odds to</label>\r\n                                <input  \r\n                                    className=\"float-right rounded borderless\"\r\n                                    value={changeBetOddLose}\r\n                                    onChange={event => setChangeBetOddLose(event.target.value)}></input>\r\n                                </>\r\n                            }\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        <> {/*######################################### manual bet ######################################## */}\r\n                        </>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MultiplyBet\r\n\r\n// function HighRollers() {\r\n//     return (\r\n//         <div>\r\n//             <div className=\"card card-body bg-gray\">\r\n//                 <div className=\"row\">\r\n//                     <div className=\"col-8\">\r\n//                         <h1 className=\"text-white\">High Rollers</h1>\r\n//                         <div className=\"text-center my-4\"><span className=\"border m-auto display-4 p-3 text-white\">10000</span></div>\r\n//                         <div className=\"row py-3\">\r\n//                             <div className=\"col-6 text-center\">\r\n//                                 <button className=\"btn btn-info btn-lg m-auto\">ROLL HI</button>\r\n//                             </div>\r\n//                             <div className=\"col-6 text-center\">\r\n//                                 <button className=\"btn btn-info btn-lg m-auto\">ROLL LO</button>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className=\"col-4\">\r\n//                         <div className=\"card card-body\">\r\n//                             <h3>How fair the game is</h3>\r\n//                             <ol>\r\n//                                 <li>Let me explain how fair we are.</li>\r\n//                                 <li>Explanory text</li>\r\n//                                 <li>and this is how its done</li>\r\n//                             </ol>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default HighRollers\r\n","// import logo from './logo.svg';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './App.css';\n\nimport Home from './components/Home/Home';\nimport MultiplyBet from './components/MultiplyBet/MultiplyBet';\n\nconst App = () => {\n  return(\n    <Switch>\n      <Route path='/' component={Home} exact />\n      <Route path='/multiplybet' component={MultiplyBet} />\n    </Switch>\n  )\n}\n\n\nexport default App;\n\n// Previous build\n// function App() {\n  //   return (\n  //     <div className=\"App\">\n  //       <header className=\"App-header\">\n  //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //         <p>\n  //           Edit <code>src/App.js</code> and save to reload.\n  //         </p>\n  //         <a\n  //           className=\"App-link\"\n  //           href=\"https://reactjs.org\"\n  //           target=\"_blank\"\n  //           rel=\"noopener noreferrer\"\n  //         >\n  //           Learn React\n  //         </a>\n  //       </header>\n  //     </div>\n  //   );\n  // }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </HashRouter>\n    {/* <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}